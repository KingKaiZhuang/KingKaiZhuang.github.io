{"meta":{"version":1,"warehouse":"5.0.1"},"models":{"Asset":[{"_id":"themes/butterfly/source/css/var.styl","path":"css/var.styl","modified":0,"renderable":1},{"_id":"themes/butterfly/source/css/index.styl","path":"css/index.styl","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/404.jpg","path":"img/404.jpg","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/apple-touch-icon.png","path":"img/apple-touch-icon.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/butterfly-icon.png","path":"img/butterfly-icon.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/error-page.png","path":"img/error-page.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/favicon-16x16.png","path":"img/favicon-16x16.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/favicon-32x32.png","path":"img/favicon-32x32.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/favicon.ico","path":"img/favicon.ico","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/friend_404.gif","path":"img/friend_404.gif","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/tw_cn.js","path":"js/tw_cn.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/search/algolia.js","path":"js/search/algolia.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/search/local-search.js","path":"js/search/local-search.js","modified":0,"renderable":1},{"_id":"source/images/CPE.webp","path":"images/CPE.webp","modified":0,"renderable":0},{"_id":"source/images/Avatar.jpeg","path":"images/Avatar.jpeg","modified":0,"renderable":0},{"_id":"source/images/CPE_sub.webp","path":"images/CPE_sub.webp","modified":0,"renderable":0},{"_id":"source/images/Logo.png","path":"images/Logo.png","modified":0,"renderable":0},{"_id":"source/images/banner.jpeg","path":"images/banner.jpeg","modified":0,"renderable":0},{"_id":"source/images/favicon.ico","path":"images/favicon.ico","modified":0,"renderable":0},{"_id":"source/images/icon.jpeg","path":"images/icon.jpeg","modified":0,"renderable":0},{"_id":"source/images/favicon/favicon-32x32.png","path":"images/favicon/favicon-32x32.png","modified":0,"renderable":0},{"_id":"source/images/openai/openai-api1.png","path":"images/openai/openai-api1.png","modified":0,"renderable":0},{"_id":"source/images/openai/openai-api2.png","path":"images/openai/openai-api2.png","modified":0,"renderable":0},{"_id":"source/images/openai/openai-api3.png","path":"images/openai/openai-api3.png","modified":0,"renderable":0},{"_id":"source/images/openai/openai-api4.png","path":"images/openai/openai-api4.png","modified":0,"renderable":0},{"_id":"source/images/openai/openai-api5.png","path":"images/openai/openai-api5.png","modified":0,"renderable":0},{"_id":"source/images/Line-Bot/create-account/create-account1.png","path":"images/Line-Bot/create-account/create-account1.png","modified":0,"renderable":0},{"_id":"source/images/Line-Bot/create-account/create-account10.png","path":"images/Line-Bot/create-account/create-account10.png","modified":0,"renderable":0},{"_id":"source/images/Line-Bot/create-account/create-account3.png","path":"images/Line-Bot/create-account/create-account3.png","modified":0,"renderable":0},{"_id":"source/images/Line-Bot/create-account/create-account11.png","path":"images/Line-Bot/create-account/create-account11.png","modified":0,"renderable":0},{"_id":"source/images/Line-Bot/create-account/create-account4.png","path":"images/Line-Bot/create-account/create-account4.png","modified":0,"renderable":0},{"_id":"source/images/Line-Bot/create-account/create-account2.png","path":"images/Line-Bot/create-account/create-account2.png","modified":0,"renderable":0},{"_id":"source/images/Line-Bot/create-account/create-account6.png","path":"images/Line-Bot/create-account/create-account6.png","modified":0,"renderable":0},{"_id":"source/images/Line-Bot/create-account/create-account5.png","path":"images/Line-Bot/create-account/create-account5.png","modified":0,"renderable":0},{"_id":"source/images/Line-Bot/create-account/create-account8.png","path":"images/Line-Bot/create-account/create-account8.png","modified":0,"renderable":0},{"_id":"source/images/Line-Bot/create-account/create-account7.png","path":"images/Line-Bot/create-account/create-account7.png","modified":0,"renderable":0},{"_id":"source/images/Line-Bot/create-account/create-account9.png","path":"images/Line-Bot/create-account/create-account9.png","modified":0,"renderable":0}],"Cache":[{"_id":"source/index.md","hash":"d2f01e0e376bed5883b1c2d727dd87c518d2063d","modified":1726397694083},{"_id":"source/_posts/Line-Bot與Chatgpt應用-建立機器人帳號.md","hash":"76723bf771aa83b754977e94c3b28d24ef171244","modified":1727355124006},{"_id":"source/archives/index.md","hash":"7c001063be5c6623710f4b9c189208f1168dc01e","modified":1726498228120},{"_id":"source/_data/link.yml","hash":"0151fbbf58161c2443e4cbf1316fc202e7054f49","modified":1726397694080},{"_id":"source/.DS_Store","hash":"71c0885c96c118bcec78b56a2d1ef0a1dc64175f","modified":1726800398622},{"_id":"source/_posts/UVA-10041-Vito-s-Family.md","hash":"c8e7b7403f646b0e8203a233f0bf5b5716eb23d5","modified":1726630324444},{"_id":"source/_posts/UVA-10420-List-of-Conquests.md","hash":"577692346cbe2aba8b7aa2fc2f65d6832e6b1de3","modified":1726580475386},{"_id":"source/categories/index.md","hash":"6221aebe7e4bea7dd032547559728b4931668b38","modified":1726550120522},{"_id":"source/css/custom.css","hash":"1ba8aeb41cd3efa674cd98eae66f5a59c1f1bc89","modified":1726548958584},{"_id":"source/css/wave.css","hash":"2772c32f1ffa36d326eb4010c184ad9f00f917df","modified":1726537535892},{"_id":"source/_posts/本地專案推送至Bitbucket遠端存放庫.md","hash":"81c54ff5b84239299276a2058ec5e3781103167a","modified":1727059257869},{"_id":"source/images/.DS_Store","hash":"93c8d0f6db36edd1dae1d486aa93be389bcaf6c4","modified":1726800412716},{"_id":"source/images/favicon.ico","hash":"5afa977c0e959a965e16cf29d8bd078713f23f24","modified":1726759800028},{"_id":"source/images/Logo.png","hash":"3f88903fb1e19e29066ce407a2ffa421cf3e64de","modified":1726397694081},{"_id":"source/tags/index.md","hash":"92f58b36248fbce66ae8360905a5df0f9bd23203","modified":1726550023762},{"_id":"source/images/favicon/favicon-32x32.png","hash":"450e687c4fda4ec2c05e02565d2c070ecd9007c0","modified":1726759542627},{"_id":"source/link/index.md","hash":"c7a9f2b10b81d21d9f7187863d6a2da2e870ac29","modified":1726457895741},{"_id":"source/images/openai/.DS_Store","hash":"8bf5f8c7163c86b3cb99c737d24fe29e985898ce","modified":1726800387838},{"_id":"source/images/Avatar.jpeg","hash":"1381e0e5dbf7678c8418d8a07013065ca7c050b3","modified":1726548289172},{"_id":"themes/butterfly/package.json","hash":"c8f626c22c7ef7eaef491d3eca39fddad927f09a","modified":1726325395746},{"_id":"themes/butterfly/_config.yml","hash":"8752506beda9e4cd53222b4a9e1da047cc48e9a5","modified":1727358978407},{"_id":"themes/butterfly/plugins.yml","hash":"c9ca5f15698ff3889527f3894a720acbbd74c6f9","modified":1726325395746},{"_id":"themes/butterfly/languages/en.yml","hash":"f71fde7dfa03a8b12050b293d23ff57e3eb4a947","modified":1726325395737},{"_id":"themes/butterfly/languages/default.yml","hash":"43ed2fe9b62f7c6aa5229acb41e2fec4055c141b","modified":1726325395737},{"_id":"themes/butterfly/languages/zh-CN.yml","hash":"fbcd198582962945e963179794e8dbd716d1a786","modified":1726325395737},{"_id":"themes/butterfly/languages/zh-TW.yml","hash":"8a8d3879996d7ad80d7d7d1a4bea9fc9f120ca51","modified":1726325395737},{"_id":"themes/butterfly/layout/category.pug","hash":"bf07d9624ac7285214c7f1d505da3a813c164c8c","modified":1726325395737},{"_id":"themes/butterfly/LICENSE","hash":"1128f8f91104ba9ef98d37eea6523a888dcfa5de","modified":1726325395736},{"_id":"themes/butterfly/README.md","hash":"5665c66b876f8e0ce230a7741b5adc437e1951d0","modified":1726325395736},{"_id":"themes/butterfly/layout/page.pug","hash":"dc69cbc1c087466023ee3b97f252b4d63ae22b6c","modified":1726325395745},{"_id":"themes/butterfly/layout/post.pug","hash":"e30923c2ec7deca7b2f64d0a099ee727f7069a52","modified":1726325395745},{"_id":"themes/butterfly/layout/archive.pug","hash":"bb32c9c476372de747dfa563b83f77d7a917a77d","modified":1726325395737},{"_id":"themes/butterfly/layout/index.pug","hash":"6aba5fd01aba75fd38ef2e2c1d406d951b8c5560","modified":1726325395745},{"_id":"themes/butterfly/layout/tag.pug","hash":"98c0084a4c62415775ca9e261e3d4eeb7668f35b","modified":1726325395746},{"_id":"themes/butterfly/.github/FUNDING.yml","hash":"da5e77f5e0cdb7e11b36546fb6796d10e3dfbe5d","modified":1726325395736},{"_id":"themes/butterfly/README_CN.md","hash":"087cdad408fb63a47bd64ab956fbadf0b674eb9b","modified":1726325395737},{"_id":"themes/butterfly/.github/workflows/stale.yml","hash":"ac62b989b5550c756e1986fcc68f243170705383","modified":1726325395736},{"_id":"themes/butterfly/.github/workflows/publish.yml","hash":"05857c2f265246d8de00e31037f2720709540c09","modified":1726325395736},{"_id":"themes/butterfly/layout/includes/additional-js.pug","hash":"28fd82d62234eb283771800fc62e1afe45c94487","modified":1726325395737},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/bug_report.yml","hash":"df07add8fca55a7a12173af53201d306000fd9e0","modified":1726325395736},{"_id":"themes/butterfly/layout/includes/footer.pug","hash":"02390a5b6ae1f57497b22ba2e6be9f13cfb7acac","modified":1726325395737},{"_id":"themes/butterfly/layout/includes/pagination.pug","hash":"02ed94f1077b84fec59d6256e71112643fd11206","modified":1726325395740},{"_id":"themes/butterfly/layout/includes/rightside.pug","hash":"7d3581a446285b0cd9362266d54b59fe8768af9e","modified":1726325395740},{"_id":"themes/butterfly/scripts/events/404.js","hash":"a196e0d2eb40d1643bcf53a467ad37104f877ca5","modified":1726325395746},{"_id":"themes/butterfly/layout/includes/head.pug","hash":"82548510310fb44587371fcc9afd7f0bbdb673b1","modified":1726325395737},{"_id":"themes/butterfly/layout/includes/layout.pug","hash":"7e27b96b198ea865bc3d35eb4a625217d421d517","modified":1726325395739},{"_id":"themes/butterfly/layout/includes/sidebar.pug","hash":"4959e5e7690b195d5af5582d324b8f34c9abeeeb","modified":1726325395740},{"_id":"themes/butterfly/scripts/events/cdn.js","hash":"21fb5aabe043486d095c4c8cce361ed85ba88a26","modified":1726325395746},{"_id":"themes/butterfly/scripts/events/stylus.js","hash":"1ac9527c510ca757724f15dec84b0ead032411b2","modified":1726325395746},{"_id":"themes/butterfly/scripts/events/merge_config.js","hash":"538fc0d04ece13d2ee7ed4622b91caca0e71f6c0","modified":1726325395746},{"_id":"themes/butterfly/scripts/events/init.js","hash":"428b94c7b9e83f7ea36227dee66bfe3c23aee4a8","modified":1726325395746},{"_id":"themes/butterfly/scripts/events/comment.js","hash":"5351e0bc09e6b5b3f6d30f333a2520626a28ca3a","modified":1726325395746},{"_id":"themes/butterfly/scripts/filters/post_lazyload.js","hash":"860f967ecf3c6a6ea785b560a7aae4d0757cd18a","modified":1726325395746},{"_id":"themes/butterfly/scripts/events/welcome.js","hash":"8ad9911b755cba13dde2cc055c3f857a6b0dd20e","modified":1726325395746},{"_id":"themes/butterfly/scripts/helpers/aside_categories.js","hash":"96f861151e3b889ef0ffe78821d489ad2625ee43","modified":1726325395747},{"_id":"themes/butterfly/scripts/helpers/getArchiveLength.js","hash":"1b37a484cbcc81f51953ea093644b70499c26314","modified":1726325395747},{"_id":"themes/butterfly/scripts/helpers/aside_archives.js","hash":"2ec66513d5322f185d2071acc052978ba9415a8e","modified":1726325395747},{"_id":"themes/butterfly/scripts/filters/random_cover.js","hash":"a8eef3f37428436554f58a2b6bac7c255fbdf38d","modified":1726325395747},{"_id":"themes/butterfly/scripts/helpers/related_post.js","hash":"bab1d6322924aa2cc4268f1540464958bc8415c2","modified":1726325395747},{"_id":"themes/butterfly/scripts/helpers/inject_head_js.js","hash":"7f44e5b1d30e10d9e000f8b64c35a14effbdcd44","modified":1726325395747},{"_id":"themes/butterfly/scripts/helpers/series.js","hash":"821e973d41f7b3b64cde91e0e836ea49c43e3c06","modified":1726325395747},{"_id":"themes/butterfly/scripts/helpers/page.js","hash":"eb08656fd3c7e313796bf64b3a2cb7a77bba556e","modified":1726325395747},{"_id":"themes/butterfly/scripts/tag/button.js","hash":"93229d44b35b9da92e647b89d6d3087085974a29","modified":1726325395747},{"_id":"themes/butterfly/scripts/tag/flink.js","hash":"ab62919fa567b95fbe14889517abda649991b1ee","modified":1726325395747},{"_id":"themes/butterfly/scripts/tag/hide.js","hash":"365db87ddfc582bf8c15cb440c48bed95106e4b1","modified":1726325395747},{"_id":"themes/butterfly/scripts/tag/mermaid.js","hash":"5c2a07df5874b5377540884e4da14dd21489378f","modified":1726325395748},{"_id":"themes/butterfly/scripts/tag/series.js","hash":"803d5f7845ba9ec0fb0b849cc4639e2a59244a81","modified":1726325395748},{"_id":"themes/butterfly/scripts/tag/gallery.js","hash":"1d435ea5d0a8c2c062d42bad1747ed7d1d7c73ae","modified":1726325395747},{"_id":"themes/butterfly/scripts/tag/label.js","hash":"22bc3a24c3610b5a3c3a2043b7d10e26d00018b8","modified":1726325395748},{"_id":"themes/butterfly/scripts/tag/inlineImg.js","hash":"512c68a22ae4a58d6a6b24b368a0c00c2ccb4fcb","modified":1726325395747},{"_id":"themes/butterfly/scripts/tag/score.js","hash":"5cb273e95846874e3a58074074c501df23c5e912","modified":1726325395748},{"_id":"themes/butterfly/scripts/tag/note.js","hash":"1acefc59ead75ebd8cafee36efc7da4fa426d088","modified":1726325395748},{"_id":"themes/butterfly/scripts/tag/tabs.js","hash":"fe3d9cc0e72d1e8fccee1da6a2a8a7faa3434528","modified":1726325395748},{"_id":"themes/butterfly/scripts/tag/timeline.js","hash":"4526c75e5bf84609d67e92b6af3524bcb278e852","modified":1726325395748},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/config.yml","hash":"7b4831ae8f8f8c55dd1b856781210c517c63e6dd","modified":1726325395736},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/feature_request.yml","hash":"996640605ed1e8e35182f0fd9a60a88783b24b03","modified":1726325395736},{"_id":"themes/butterfly/source/css/index.styl","hash":"755490867fd8afe47d5cce24faea2ca172b0c4dd","modified":1726325395753},{"_id":"themes/butterfly/source/css/var.styl","hash":"637bcd14638bad1f296c6eda300bd55076695d4f","modified":1726325395753},{"_id":"themes/butterfly/source/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1726325395753},{"_id":"themes/butterfly/source/img/favicon.ico","hash":"5afa977c0e959a965e16cf29d8bd078713f23f24","modified":1726795587122},{"_id":"themes/butterfly/source/img/apple-touch-icon.png","hash":"55f86abd2bd78e15fabc3d3cc6d285be894504bc","modified":1726795758043},{"_id":"themes/butterfly/source/img/favicon-16x16.png","hash":"416ebe5f9ad03032ad22408e2b896583cea69d38","modified":1726795326870},{"_id":"themes/butterfly/source/img/error-page.png","hash":"d2519710498a871ca3e913c57e2ba20a805b6430","modified":1726325395754},{"_id":"themes/butterfly/source/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1726325395755},{"_id":"themes/butterfly/source/img/favicon-32x32.png","hash":"450e687c4fda4ec2c05e02565d2c070ecd9007c0","modified":1726795326878},{"_id":"themes/butterfly/layout/includes/head/config.pug","hash":"93c78d39526cb883fa20f02bec9d99b0da52b4f3","modified":1726325395738},{"_id":"themes/butterfly/layout/includes/head/config_site.pug","hash":"96673dadd545cf5e0fa19bff279ab68da61ec30a","modified":1726325395738},{"_id":"themes/butterfly/layout/includes/head/Open_Graph.pug","hash":"2beb68bdd43b09a539c8f4ed0cb7c0838c03409a","modified":1726325395738},{"_id":"themes/butterfly/layout/includes/head/analytics.pug","hash":"e5a26d2e2ca789dffc6bd9cfc13ff9e530c9911c","modified":1726325395738},{"_id":"themes/butterfly/layout/includes/head/google_adsense.pug","hash":"95a37e92b39c44bcbea4be7e29ddb3921c5b8220","modified":1726325395738},{"_id":"themes/butterfly/layout/includes/head/preconnect.pug","hash":"5208fe1e75d97a05fd9bdd6cc53c59d8b741b94b","modified":1726325395738},{"_id":"themes/butterfly/layout/includes/head/pwa.pug","hash":"3d492cfe645d37c94d30512e0b230b0a09913148","modified":1726325395738},{"_id":"themes/butterfly/layout/includes/header/index.pug","hash":"d158d1f5d4607d12f2e290cce4b21e5319792d81","modified":1726537391215},{"_id":"themes/butterfly/layout/includes/header/menu_item.pug","hash":"29a241a25a778db88a76b5d095293313b49991a5","modified":1726325395738},{"_id":"themes/butterfly/layout/includes/header/post-info.pug","hash":"f50e6a17073677933c5bc78481bf587a4a9e6da0","modified":1726325395739},{"_id":"themes/butterfly/layout/includes/head/site_verification.pug","hash":"e2e8d681f183f00ce5ee239c42d2e36b3744daad","modified":1726325395738},{"_id":"themes/butterfly/layout/includes/loading/fullpage-loading.pug","hash":"321bf4927b276e7c1a87b13a7b60d926f8c8db65","modified":1727059609892},{"_id":"themes/butterfly/layout/includes/header/nav.pug","hash":"7f279e82dbb82739d2c205ee56b44d889f915922","modified":1726325395738},{"_id":"themes/butterfly/layout/includes/header/social.pug","hash":"5de9a82032cdad1db3b868b797460921cd775fc2","modified":1726325395739},{"_id":"themes/butterfly/layout/includes/loading/pace.pug","hash":"38b85f46c8e1bcbc43d2a4875d94ea201518eeeb","modified":1726325395739},{"_id":"themes/butterfly/layout/includes/mixins/article-sort.pug","hash":"90554c2ca5ba946f4c02e1bc5fe2859cef1b1594","modified":1726325395739},{"_id":"themes/butterfly/layout/includes/mixins/indexPostUI.pug","hash":"beacf4800fd97d433f72bebb42479dab46acdd6b","modified":1726325395739},{"_id":"themes/butterfly/layout/includes/page/404.pug","hash":"ca9cc03a51561413728d7211f0a544654c5d4e36","modified":1726325395739},{"_id":"themes/butterfly/layout/includes/loading/index.pug","hash":"131f344d68b4c241d6e03849b243ee792fcd3cea","modified":1726325395739},{"_id":"themes/butterfly/layout/includes/page/categories.pug","hash":"5276a8d2835e05bd535fedc9f593a0ce8c3e8437","modified":1726325395739},{"_id":"themes/butterfly/layout/includes/page/default-page.pug","hash":"12c65c174d26a41821df9bad26cdf1087ec5b0ca","modified":1726325395739},{"_id":"themes/butterfly/layout/includes/page/shuoshuo.pug","hash":"2d43ea26e3e0d4866373aa0802fd461c3499076c","modified":1726325395740},{"_id":"themes/butterfly/layout/includes/page/flink.pug","hash":"f9ce83978b217a71a2eb8761dc14b09866faa3f4","modified":1726325395739},{"_id":"themes/butterfly/layout/includes/post/post-copyright.pug","hash":"5574804fdea5edf7fd52aad2caf030614d5e7f2f","modified":1726325395740},{"_id":"themes/butterfly/layout/includes/post/reward.pug","hash":"a096ff8eb6b2a22395be881f827ff2a686ba5596","modified":1726325395740},{"_id":"themes/butterfly/layout/includes/page/tags.pug","hash":"b62bda168bde8fc44ed4302020a371b96bf49c54","modified":1726325395740},{"_id":"themes/butterfly/layout/includes/third-party/aplayer.pug","hash":"0595d60dbf701e2ffa92181923861b1457a02112","modified":1726325395740},{"_id":"themes/butterfly/layout/includes/third-party/effect.pug","hash":"1d39670ee6225f85f5c53bf5c84f3fd6e19290e8","modified":1726325395742},{"_id":"themes/butterfly/layout/includes/third-party/pangu.pug","hash":"0c1affa498b28e79e5a465f3f8f18035993bcb88","modified":1726325395744},{"_id":"themes/butterfly/layout/includes/third-party/prismjs.pug","hash":"512111475060798925eb1a7bc7617c34b8bd32ab","modified":1726325395744},{"_id":"themes/butterfly/layout/includes/widget/card_ad.pug","hash":"60dc48a7b5d89c2a49123c3fc5893ab9c57dd225","modified":1726325395744},{"_id":"themes/butterfly/layout/includes/third-party/subtitle.pug","hash":"21d42f43f26a2075abf2e6d13d35fb1aaf53a8b4","modified":1726325395744},{"_id":"themes/butterfly/source/js/tw_cn.js","hash":"2c0b9c4a93cf0d9a32f29d5d6e0468b782d391f5","modified":1726325395755},{"_id":"themes/butterfly/layout/includes/third-party/pjax.pug","hash":"dd29bb7a77e9e99f11d7bb62ea49c2a9e449ef6e","modified":1726325395744},{"_id":"themes/butterfly/layout/includes/widget/card_archives.pug","hash":"86897010fe71503e239887fd8f6a4f5851737be9","modified":1726325395745},{"_id":"themes/butterfly/layout/includes/widget/card_announcement.pug","hash":"ae392459ad401a083ca51ee0b27526b3c1e1faed","modified":1726325395744},{"_id":"themes/butterfly/layout/includes/widget/card_author.pug","hash":"23f30b712cb9aa0c1387ce7174ba11c827c93dcb","modified":1726325395745},{"_id":"themes/butterfly/layout/includes/widget/card_categories.pug","hash":"d1a416d0a8a7916d0b1a41d73adc66f8c811e493","modified":1726325395745},{"_id":"themes/butterfly/layout/includes/widget/card_newest_comment.pug","hash":"ba95646b78688bcdcf77166407c4799e5e3c3e6d","modified":1726325395745},{"_id":"themes/butterfly/layout/includes/widget/card_post_series.pug","hash":"bd5ad01277f8c6ddf8a3a29af1518e5fe6eed23f","modified":1726325395745},{"_id":"themes/butterfly/layout/includes/widget/card_bottom_self.pug","hash":"13dc8ce922e2e2332fe6ad5856ebb5dbf9ea4444","modified":1726325395745},{"_id":"themes/butterfly/layout/includes/widget/card_post_toc.pug","hash":"a658a274c5f7896ee5122725bee45548693bdd66","modified":1726325395745},{"_id":"themes/butterfly/layout/includes/widget/card_recent_post.pug","hash":"e5aac7b28ed4123d75797263c64e74ac547945bc","modified":1726325395745},{"_id":"themes/butterfly/layout/includes/widget/card_tags.pug","hash":"eceb4420a64c720f0d2741e89d6229bbb3d87353","modified":1726325395745},{"_id":"themes/butterfly/layout/includes/widget/card_webinfo.pug","hash":"9bef844f2dc8b84d605095f2f4a4437178fbb095","modified":1726325395745},{"_id":"themes/butterfly/layout/includes/widget/index.pug","hash":"66f7a8b0cebc05c575ec3cb70b08d6854029d87a","modified":1726325395745},{"_id":"themes/butterfly/source/js/utils.js","hash":"649a9e0a86c71e347425e1e5c3e73f33e5eb0cab","modified":1726325395756},{"_id":"themes/butterfly/layout/includes/widget/card_top_self.pug","hash":"ae67c6d4130a6c075058a9c1faea1648bcc6f83e","modified":1726325395745},{"_id":"themes/butterfly/source/js/main.js","hash":"af34cf48e95f3fa7a985ed3b5b4c165dbcd47bd4","modified":1726325395755},{"_id":"themes/butterfly/source/css/_global/function.styl","hash":"25d0b254c0952d42721a9e4b0efa007bda3bae95","modified":1726325395748},{"_id":"themes/butterfly/source/css/_layout/aside.styl","hash":"ec22c7f2bb15f1e6ba3fceacaa61d1be979e6e3c","modified":1726325395749},{"_id":"themes/butterfly/source/css/_global/index.styl","hash":"3a3939ed4362c07993b64f0869ea638dc4ad7e26","modified":1726325395748},{"_id":"themes/butterfly/source/css/_layout/comments.styl","hash":"134811b2d696f9ed2c0cd578f3886f1c60770c0a","modified":1726325395749},{"_id":"themes/butterfly/source/css/_layout/footer.styl","hash":"4382ecffdb778de9fa05edf24765b68ae6da1220","modified":1726325395749},{"_id":"themes/butterfly/source/css/_layout/head.styl","hash":"d09ed5050ae3887b829d934be5676b70b567bfa3","modified":1726325395750},{"_id":"themes/butterfly/source/css/_layout/chat.styl","hash":"e8b1a6245329b4ecd61fadd7706116e9908af449","modified":1726325395749},{"_id":"themes/butterfly/source/css/_layout/loading.styl","hash":"ac2aeee9926f75b2a0098efe1c114126987430f2","modified":1726325395750},{"_id":"themes/butterfly/source/css/_layout/post.styl","hash":"a894c46c4f9fb0da7f90fad489a12022a4e71eac","modified":1726325395750},{"_id":"themes/butterfly/source/css/_layout/pagination.styl","hash":"befebfc7878fffed0f421d24a3279633a236a8af","modified":1726325395750},{"_id":"themes/butterfly/source/css/_layout/relatedposts.styl","hash":"3fadcebaadab7939d913b052efc0124790fa731e","modified":1726325395750},{"_id":"themes/butterfly/source/css/_layout/sidebar.styl","hash":"be7ee2c63cedbc6b7f03cb3993ec533d9ae9d8bb","modified":1726325395750},{"_id":"themes/butterfly/source/css/_layout/rightside.styl","hash":"743f9dd5585ecac812f3aa908eede4093d84fbd7","modified":1726325395750},{"_id":"themes/butterfly/source/css/_layout/reward.styl","hash":"0d0ef8a9260b494e50ef545e5f395d649418f0a9","modified":1726325395750},{"_id":"themes/butterfly/source/css/_highlight/highlight.styl","hash":"d9cb3972c1f567c3dfb2b6865695bfa4a0466342","modified":1726325395748},{"_id":"themes/butterfly/source/css/_mode/darkmode.styl","hash":"aea8a25b8f5738ac1a3d7498a0302f14c30e86e0","modified":1726325395751},{"_id":"themes/butterfly/source/css/_mode/readmode.styl","hash":"c416d58fb98a2b7a0eedfee9842c6db866288cdb","modified":1726325395751},{"_id":"themes/butterfly/source/css/_layout/third-party.styl","hash":"9734b803fef9c601abbceda1aa02d23769e1f253","modified":1726325395750},{"_id":"themes/butterfly/source/css/_highlight/theme.styl","hash":"4765d72ab300910437d64991d3f70a82b41d4e3a","modified":1726325395749},{"_id":"themes/butterfly/source/css/_search/algolia.styl","hash":"23199b1552f11fb921c7996ee7c139491c3b0ba7","modified":1726325395752},{"_id":"themes/butterfly/source/css/_search/local-search.styl","hash":"961589da3c0a532c4709a4a4ea96bd579257f766","modified":1726325395752},{"_id":"themes/butterfly/source/css/_search/index.styl","hash":"dd005cf1bc12d5116d714a11099a528a64eb3613","modified":1726325395752},{"_id":"themes/butterfly/source/css/_page/categories.styl","hash":"643ff8c79d033947da312b70847b1b45850d7b29","modified":1726325395751},{"_id":"themes/butterfly/source/css/_page/common.styl","hash":"8aa755a3f588e6e598e4fb6510faa6e766d59a94","modified":1726325395751},{"_id":"themes/butterfly/source/css/_page/homepage.styl","hash":"3fa5aa012c62da3b5220654426c0708cab24e9af","modified":1726325395751},{"_id":"themes/butterfly/source/css/_page/404.styl","hash":"354902d03f13068cf8a3617fb0ea92669e6b2a86","modified":1726325395751},{"_id":"themes/butterfly/source/css/_page/shuoshuo.styl","hash":"6db1d9d0e69a26c46e3b7131e0436f5f1802cb7d","modified":1726325395751},{"_id":"themes/butterfly/source/css/_page/flink.styl","hash":"6c17877d4178809365627eada155da9cacaafca8","modified":1726325395751},{"_id":"themes/butterfly/source/css/_page/tags.styl","hash":"d4c3abf0939f8546c39ec3b5a99aeb0c073a7bdb","modified":1726325395752},{"_id":"themes/butterfly/source/css/_page/archives.styl","hash":"a0b38bd64b8406c2adffa059e8bf8003fd465f82","modified":1726325395751},{"_id":"themes/butterfly/source/css/_tags/button.styl","hash":"2cf298c6a767473c7c7cc2cb9e0366308a2af335","modified":1726325395752},{"_id":"themes/butterfly/source/css/_tags/hide.styl","hash":"8f8835e2a4a206ca9d1f8804fd2528c06d20a495","modified":1726325395752},{"_id":"themes/butterfly/source/css/_tags/inlineImg.styl","hash":"df9d405c33a9a68946b530410f64096bcb72560c","modified":1726325395752},{"_id":"themes/butterfly/source/css/_tags/gallery.styl","hash":"50ee1b8491c56939640655741703ab88565aff82","modified":1726325395752},{"_id":"themes/butterfly/source/css/_tags/label.styl","hash":"4a651e47d658340443bb63b7d15a1e9e34f76aca","modified":1726325395752},{"_id":"themes/butterfly/source/css/_tags/note.styl","hash":"909bb5079b26b6ee68177919f522566503654058","modified":1726325395752},{"_id":"themes/butterfly/source/css/_tags/series.styl","hash":"31f9bdd21cf8ea29f1c334a9505240ee37085c48","modified":1726325395752},{"_id":"themes/butterfly/source/css/_tags/tabs.styl","hash":"9be799d09f5e73da06dc435df6e125a3a8764ecf","modified":1726325395753},{"_id":"themes/butterfly/source/css/_tags/timeline.styl","hash":"f071156d439556e7463ed4bc61ceee87170d5d08","modified":1726325395753},{"_id":"themes/butterfly/source/css/_third-party/normalize.min.css","hash":"2c18a1c9604af475b4749def8f1959df88d8b276","modified":1726325395753},{"_id":"themes/butterfly/layout/includes/third-party/abcjs/abcjs.pug","hash":"0e593c73e0dc7f07f10546092da981a7d8d771f2","modified":1726325395740},{"_id":"themes/butterfly/layout/includes/third-party/abcjs/index.pug","hash":"f58f1648d2d71311bafca4833f20b605bb5f18c8","modified":1726325395740},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/disqus.pug","hash":"c5f7081ca29db8cc80f808dfc29e36d5fa22fd7e","modified":1726325395741},{"_id":"themes/butterfly/source/css/_tags/hexo.styl","hash":"d76c38adf1d9c1279ef4241835667789f5b736e0","modified":1726325395752},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/artalk.pug","hash":"71af0b679e00290b0854384368b3c7e9b3e5f26a","modified":1726325395740},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/remark42.pug","hash":"001e8be47854b891efe04013c240c38fed4185eb","modified":1726325395741},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/fb.pug","hash":"b28aaac46c84babbc451cfd6d59869c5d21cecb5","modified":1726325395741},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/valine.pug","hash":"5715fc2dc75808af0a434fe66b81d0f651d03ed3","modified":1726325395741},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/twikoo.pug","hash":"007bb96fd84f38852b7ab5f761e6867b6058422f","modified":1726325395741},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/index.pug","hash":"b2d274db84ef22fbd6d5ea8f4404821898934209","modified":1726325395741},{"_id":"themes/butterfly/layout/includes/third-party/chat/chatra.pug","hash":"443f4fe85030c0b9290009ab341d76daa45d2fcb","modified":1726325395741},{"_id":"themes/butterfly/layout/includes/third-party/chat/daovoice.pug","hash":"153bd348d1e3377b8ea748277c60d4cfdfb019b6","modified":1726325395741},{"_id":"themes/butterfly/layout/includes/third-party/chat/index.pug","hash":"fc0d0ccd194d448c50b59c801cf9a5094763594c","modified":1726325395741},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/waline.pug","hash":"3a5ccfc69bd8ccb4b8f3ce3502023f7914f2a022","modified":1726325395741},{"_id":"themes/butterfly/layout/includes/third-party/chat/crisp.pug","hash":"e986a7d5e288ab51b7cd94e57fea571767e503cb","modified":1726325395741},{"_id":"themes/butterfly/layout/includes/third-party/comments/artalk.pug","hash":"b2ce4524c7172fed8c5152d6058356971f113763","modified":1726325395741},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqus.pug","hash":"62f16a602e57e5f7f7c5249dd37b42d436dc032a","modified":1726325395742},{"_id":"themes/butterfly/layout/includes/third-party/chat/messenger.pug","hash":"b031f863e46a1eb9febb7b51f5a3044f7a6264aa","modified":1726325395741},{"_id":"themes/butterfly/layout/includes/third-party/comments/facebook_comments.pug","hash":"95273112052eb220f683dbe8eece45a0f6a4f2e5","modified":1726325395742},{"_id":"themes/butterfly/layout/includes/third-party/comments/gitalk.pug","hash":"6731e96d2e35b3d93fa4760186aeefe5c94050ba","modified":1726325395742},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqusjs.pug","hash":"da5cb9e4676b4b1b7b51c39863d2a3b3995d563d","modified":1726325395742},{"_id":"themes/butterfly/layout/includes/third-party/chat/tidio.pug","hash":"4d906fe65d2239721ce137c70ad04823ea29f051","modified":1726325395741},{"_id":"themes/butterfly/layout/includes/third-party/comments/js.pug","hash":"00ed91c52939b9675b316137f854d13684c895a6","modified":1726325395742},{"_id":"themes/butterfly/layout/includes/third-party/comments/giscus.pug","hash":"086086db39e623a4b6e89f38e44121f9b4cc9e94","modified":1726325395742},{"_id":"themes/butterfly/layout/includes/third-party/comments/index.pug","hash":"a9709905593d960954e2dd572f09f48a6c2b1ef7","modified":1726325395742},{"_id":"themes/butterfly/layout/includes/third-party/comments/livere.pug","hash":"63cea2b5c8f7b59f5919379d61a2bb2ce8ed7623","modified":1726325395742},{"_id":"themes/butterfly/layout/includes/third-party/comments/twikoo.pug","hash":"fef9f8c31e4dfa14313bc6aed3bad4264011da8d","modified":1726325395742},{"_id":"themes/butterfly/layout/includes/third-party/comments/utterances.pug","hash":"3939adafed13d4da166c2879ad4d32a5c1b71eef","modified":1726325395742},{"_id":"themes/butterfly/layout/includes/third-party/comments/remark42.pug","hash":"f15699abb8c7a255aabad0222ae53eee387c66a3","modified":1726325395742},{"_id":"themes/butterfly/layout/includes/third-party/math/index.pug","hash":"3c1599204cba02d709837558cd0c67d5e5a07578","modified":1726325395742},{"_id":"themes/butterfly/layout/includes/third-party/math/katex.pug","hash":"ab7bde80f2c367e286f2642948a2f118d6fb34a6","modified":1726325395743},{"_id":"themes/butterfly/layout/includes/third-party/comments/waline.pug","hash":"1fbd4ac669a9699ae32f3909c1749c882a19e7f1","modified":1726325395742},{"_id":"themes/butterfly/layout/includes/third-party/comments/valine.pug","hash":"95c9608b31c284170b5cdb1f942c6dff278ce490","modified":1726325395742},{"_id":"themes/butterfly/layout/includes/third-party/math/mathjax.pug","hash":"49aece5be2a0a8e414257ecbfc2abd7d0d5f8c64","modified":1726325395743},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/artalk.pug","hash":"2154d47a15f11aedc76db07a0cee0b1476805146","modified":1726325395743},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/disqus-comment.pug","hash":"33433644355372738216d6fe5f926da80d2e89fa","modified":1726325395743},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/github-issues.pug","hash":"979f0efb21b0ebd3b6e871916e2add1226217aff","modified":1726325395743},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/index.pug","hash":"4ec0642f2d5444acfab570a6f8c7868e7ff43fde","modified":1726325395743},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/remark42.pug","hash":"0b5a55796a61aa5d4a5436b97b50d0a6ec08fc1d","modified":1726325395743},{"_id":"themes/butterfly/layout/includes/third-party/math/mermaid.pug","hash":"2e0a793fc3e4d799944468cdc16e0d593e31dd68","modified":1726325395743},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/twikoo-comment.pug","hash":"9dd662f914ba95715de8f817f29ea6e96604034b","modified":1726325395743},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/valine.pug","hash":"ab27c5bcadca51629b4aa61b6b1384e0a1a7854d","modified":1726325395743},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/waline.pug","hash":"f434d9688556cc232ae5d440af9fb7844783177a","modified":1726325395744},{"_id":"themes/butterfly/layout/includes/third-party/search/docsearch.pug","hash":"18b492731f67d449bb32d7fac321deb57a92e75f","modified":1726325395744},{"_id":"themes/butterfly/layout/includes/third-party/share/addtoany.pug","hash":"85c92f8a7e44d7cd1c86f089a05be438535e5362","modified":1726325395744},{"_id":"themes/butterfly/layout/includes/third-party/search/local-search.pug","hash":"b1be0e8095576d00f0022946c9f569378c5626e4","modified":1726325395744},{"_id":"themes/butterfly/layout/includes/third-party/search/algolia.pug","hash":"9c3c109a12d2b6916e8b4965cca12f521510ead9","modified":1726325395744},{"_id":"themes/butterfly/layout/includes/third-party/search/index.pug","hash":"11a4e7decb634fbd6af454aa5ec230945837b6a9","modified":1726325395744},{"_id":"themes/butterfly/layout/includes/third-party/share/index.pug","hash":"8a7d5cdca6a87897d435fc88ebcb7ec0b7ec8591","modified":1726325395744},{"_id":"themes/butterfly/layout/includes/third-party/share/share-js.pug","hash":"393c94702fd65c585e37bcf9a4f33c638d8bac72","modified":1726325395744},{"_id":"themes/butterfly/source/js/search/local-search.js","hash":"e10563c5d11c655e8621e872ec4b58341c6d6013","modified":1726325395755},{"_id":"themes/butterfly/source/css/_highlight/highlight/diff.styl","hash":"fdcc5a88505fcbf0593aa04ecb4ac0c8ad4f8fa3","modified":1726325395749},{"_id":"themes/butterfly/source/css/_highlight/highlight/index.styl","hash":"18804c58239d95798fa86d0597f32d7f7dd30051","modified":1726325395749},{"_id":"themes/butterfly/source/js/search/algolia.js","hash":"37200cd9fb535bd0f99ea495498dcb56400d9262","modified":1726325395755},{"_id":"themes/butterfly/source/css/_highlight/prismjs/diff.styl","hash":"dcd3af96d8be1a6358a88daf2c66165cc9b792d9","modified":1726325395749},{"_id":"source/images/icon.jpeg","hash":"3d28a9ffc52529254ffdc31c96ac1c363fae7f74","modified":1726759281969},{"_id":"source/images/Line-Bot/create-account/create-account1.png","hash":"9f1e0ffe3c1b3ad63330028386a13782660ddcb1","modified":1726714590089},{"_id":"source/images/Line-Bot/create-account/create-account10.png","hash":"ed2991f4deb0dd0740154ca3f39a0abaf961afdc","modified":1726714590117},{"_id":"themes/butterfly/source/css/_highlight/prismjs/line-number.styl","hash":"ced5fbccabd89ca19dddf6c41b685aea5edaede0","modified":1726325395749},{"_id":"themes/butterfly/source/css/_highlight/prismjs/index.styl","hash":"e76b08f3e72a25c91eff30cbdfc95a2c24f59d83","modified":1726325395749},{"_id":"source/images/Line-Bot/create-account/create-account8.png","hash":"657ff7185262932c3edbfef9de104111e6800de9","modified":1726714590113},{"_id":"source/images/Line-Bot/create-account/create-account4.png","hash":"38c89231c34fd62fb63baee89ffdf7659a5f6798","modified":1726714590102},{"_id":"source/images/openai/openai-api4.png","hash":"cf6b447ffcebb61706a5897e5c65e23134902acc","modified":1726800278860},{"_id":"source/images/Line-Bot/create-account/create-account3.png","hash":"a55c3dcf1ed981c392d5bb8a2a21bac0d826a4c2","modified":1726714590100},{"_id":"source/images/Line-Bot/create-account/create-account9.png","hash":"94065ffb80467577af8220bd4027076cedf2dd71","modified":1726714590115},{"_id":"source/images/openai/openai-api1.png","hash":"66b194b66f959432efc174347330cb98f281f0c8","modified":1726800309230},{"_id":"source/images/CPE_sub.webp","hash":"8cb973f3ce4df277aeff21a4ae14fe5f3454a7f5","modified":1726549576326},{"_id":"source/images/openai/openai-api5.png","hash":"48618eebe12a18589320dd97e41e016970e2d936","modified":1726800287495},{"_id":"themes/butterfly/source/img/butterfly-icon.png","hash":"f5dd732fed5c3bcd4aa76bac3441bac8485fb432","modified":1726325395754},{"_id":"source/images/Line-Bot/create-account/create-account5.png","hash":"1075d37390698d46aeab9e68badd1e4804db686c","modified":1726714590104},{"_id":"source/images/Line-Bot/create-account/create-account6.png","hash":"c224e7b7ed15cb424a142abb4ac6ccdc62a9dc26","modified":1726714590109},{"_id":"source/images/Line-Bot/create-account/create-account7.png","hash":"6258c918de844422a74faa81e7d0e0c5e2339a8e","modified":1726714590112},{"_id":"source/images/openai/openai-api3.png","hash":"214a2456ab1ce22a7338a00caaa4072cd59e1bdb","modified":1726800230994},{"_id":"source/images/Line-Bot/create-account/create-account11.png","hash":"54ccbe5df67ac93255d4262ad93bfeca39cc7e19","modified":1726714590123},{"_id":"source/images/CPE.webp","hash":"4fb5c699f799f447b2059c9f846dce834fe40353","modified":1726549355619},{"_id":"source/images/openai/openai-api2.png","hash":"8006d57e5589be3e5902103dbcb1f19deb9bcb92","modified":1726800115053},{"_id":"source/images/banner.jpeg","hash":"e899cd5f0647af5684f39fcbc1a72a28096c465c","modified":1726407047569},{"_id":"source/images/Line-Bot/create-account/create-account2.png","hash":"745265243bd9ac06cd40f1d63ded063252fbcc97","modified":1726799980005},{"_id":"public/css/custom.css","hash":"1ba8aeb41cd3efa674cd98eae66f5a59c1f1bc89","modified":1727061551899},{"_id":"public/css/wave.css","hash":"2772c32f1ffa36d326eb4010c184ad9f00f917df","modified":1727061551899},{"_id":"public/index.html","hash":"d0517483bf3884cbf6d40d7c9f70a116beed6353","modified":1732454667468},{"_id":"public/tags/index.html","hash":"049403d201d10f49360416a7ab6c878ff1997929","modified":1732454667468},{"_id":"public/link/index.html","hash":"f32967fbbb1e2d0e3936f409c21c72e259b4db2c","modified":1732454667468},{"_id":"public/2024/09/22/本地專案推送至Bitbucket遠端存放庫/index.html","hash":"5268b597e9aaef58c85033f1681317c39f36595d","modified":1732454667468},{"_id":"public/2024/09/19/Line-Bot與Chatgpt應用-建立機器人帳號/index.html","hash":"271bbbd1e596c05c7e5fa485098760ad70bfd3f9","modified":1732454667468},{"_id":"public/2024/09/17/UVA-10420-List-of-Conquests/index.html","hash":"2948ab318e97ea807ea0fd61244886ea66d1df6b","modified":1732454667468},{"_id":"public/2024/09/16/UVA-10041-Vito-s-Family/index.html","hash":"2c1212e57cbaf6a42b142770ea1d225a9e6bf524","modified":1732454667468},{"_id":"public/archives/index.html","hash":"b8722d223ff68d90198ce86699c2fb3372ac6ddb","modified":1732454667468},{"_id":"public/archives/2024/index.html","hash":"22c4cc6b7f921a7f5ff1d2237e3754ae9c7a3255","modified":1732454667468},{"_id":"public/archives/2024/09/index.html","hash":"6e69d969442d4e43d01f2a29ebeb8a026f5716d4","modified":1732454667468},{"_id":"public/tags/Line-Bot/index.html","hash":"39a8db750efee8dc8a752c82110ff6214551163f","modified":1732454667468},{"_id":"public/categories/index.html","hash":"7ee7aec3f3a9f7430eb066f45c1100bdba744fe8","modified":1732454667468},{"_id":"public/tags/CPE/index.html","hash":"0eba197686ab3de0bc34c3022e72b604a747480f","modified":1732454667468},{"_id":"public/tags/Bitbucket/index.html","hash":"662f9d5b5bcb984718038cfcbba3b79d83415c39","modified":1732454667468},{"_id":"public/404.html","hash":"1911378ffbf833f228e1cd83788757f89eeeb674","modified":1732454667468},{"_id":"public/categories/Line-Bot/index.html","hash":"b498e5b7ffd54a12e8946c56758c31bad3bd5896","modified":1732454667468},{"_id":"public/categories/程式解題/index.html","hash":"0b3d872c0d4008a76b990089f8dc5bdb27517348","modified":1732454667468},{"_id":"public/categories/程式解題/CPE49題/index.html","hash":"499bc627cb5e5705d3007ee6d9f22941db6aa6e1","modified":1732454667468},{"_id":"public/categories/遠端存放庫/index.html","hash":"866604eb59f651f720a52c387402734af428c995","modified":1732454667468},{"_id":"public/categories/遠端存放庫/Bitbucket/index.html","hash":"48ecc2a7ecc0a01cb36427a45e31a6b9d7b885ba","modified":1732454667468},{"_id":"public/img/error-page.png","hash":"d2519710498a871ca3e913c57e2ba20a805b6430","modified":1727061551899},{"_id":"public/img/favicon.ico","hash":"5afa977c0e959a965e16cf29d8bd078713f23f24","modified":1727061551899},{"_id":"public/img/apple-touch-icon.png","hash":"55f86abd2bd78e15fabc3d3cc6d285be894504bc","modified":1727061551899},{"_id":"public/img/favicon-16x16.png","hash":"416ebe5f9ad03032ad22408e2b896583cea69d38","modified":1727061551899},{"_id":"public/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1727061551899},{"_id":"public/img/favicon-32x32.png","hash":"450e687c4fda4ec2c05e02565d2c070ecd9007c0","modified":1727061551899},{"_id":"public/images/Logo.png","hash":"3f88903fb1e19e29066ce407a2ffa421cf3e64de","modified":1727061551899},{"_id":"public/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1727061551899},{"_id":"public/images/favicon/favicon-32x32.png","hash":"450e687c4fda4ec2c05e02565d2c070ecd9007c0","modified":1727061551899},{"_id":"public/images/favicon.ico","hash":"5afa977c0e959a965e16cf29d8bd078713f23f24","modified":1727061551899},{"_id":"public/assets/js/Meting.min.js","hash":"a0585220b918d78649a7893279e1ec4fb5abe835","modified":1727061551899},{"_id":"public/assets/js/APlayer.min.js","hash":"22caa28ff6b41a16ff40f15d38f1739e22359478","modified":1727061551899},{"_id":"public/assets/css/APlayer.min.css","hash":"07372a2ba507388d0fed166d761b1c2c2a659dce","modified":1727061551899},{"_id":"public/css/var.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1727061551899},{"_id":"public/css/index.css","hash":"5d925bc72a272d2772a2483c4ca896a31e0fb8de","modified":1727061551899},{"_id":"public/js/utils.js","hash":"649a9e0a86c71e347425e1e5c3e73f33e5eb0cab","modified":1727061551899},{"_id":"public/js/main.js","hash":"af34cf48e95f3fa7a985ed3b5b4c165dbcd47bd4","modified":1727061551899},{"_id":"public/js/search/local-search.js","hash":"e10563c5d11c655e8621e872ec4b58341c6d6013","modified":1727061551899},{"_id":"public/js/tw_cn.js","hash":"2c0b9c4a93cf0d9a32f29d5d6e0468b782d391f5","modified":1727061551899},{"_id":"public/js/search/algolia.js","hash":"37200cd9fb535bd0f99ea495498dcb56400d9262","modified":1727061551899},{"_id":"public/images/Avatar.jpeg","hash":"1381e0e5dbf7678c8418d8a07013065ca7c050b3","modified":1727061551899},{"_id":"public/images/icon.jpeg","hash":"3d28a9ffc52529254ffdc31c96ac1c363fae7f74","modified":1727061551899},{"_id":"public/images/Line-Bot/create-account/create-account10.png","hash":"ed2991f4deb0dd0740154ca3f39a0abaf961afdc","modified":1727061551899},{"_id":"public/images/Line-Bot/create-account/create-account1.png","hash":"9f1e0ffe3c1b3ad63330028386a13782660ddcb1","modified":1727061551899},{"_id":"public/images/Line-Bot/create-account/create-account4.png","hash":"38c89231c34fd62fb63baee89ffdf7659a5f6798","modified":1727061551899},{"_id":"public/images/Line-Bot/create-account/create-account9.png","hash":"94065ffb80467577af8220bd4027076cedf2dd71","modified":1727061551899},{"_id":"public/img/butterfly-icon.png","hash":"f5dd732fed5c3bcd4aa76bac3441bac8485fb432","modified":1727061551899},{"_id":"public/images/openai/openai-api4.png","hash":"cf6b447ffcebb61706a5897e5c65e23134902acc","modified":1727061551899},{"_id":"public/images/Line-Bot/create-account/create-account8.png","hash":"657ff7185262932c3edbfef9de104111e6800de9","modified":1727061551899},{"_id":"public/images/Line-Bot/create-account/create-account3.png","hash":"a55c3dcf1ed981c392d5bb8a2a21bac0d826a4c2","modified":1727061551899},{"_id":"public/images/openai/openai-api1.png","hash":"66b194b66f959432efc174347330cb98f281f0c8","modified":1727061551899},{"_id":"public/images/CPE_sub.webp","hash":"8cb973f3ce4df277aeff21a4ae14fe5f3454a7f5","modified":1727061551899},{"_id":"public/images/openai/openai-api5.png","hash":"48618eebe12a18589320dd97e41e016970e2d936","modified":1727061551899},{"_id":"public/images/Line-Bot/create-account/create-account6.png","hash":"c224e7b7ed15cb424a142abb4ac6ccdc62a9dc26","modified":1727061551899},{"_id":"public/images/Line-Bot/create-account/create-account5.png","hash":"1075d37390698d46aeab9e68badd1e4804db686c","modified":1727061551899},{"_id":"public/images/Line-Bot/create-account/create-account7.png","hash":"6258c918de844422a74faa81e7d0e0c5e2339a8e","modified":1727061551899},{"_id":"public/images/openai/openai-api3.png","hash":"214a2456ab1ce22a7338a00caaa4072cd59e1bdb","modified":1727061551899},{"_id":"public/images/Line-Bot/create-account/create-account11.png","hash":"54ccbe5df67ac93255d4262ad93bfeca39cc7e19","modified":1727061551899},{"_id":"public/images/CPE.webp","hash":"4fb5c699f799f447b2059c9f846dce834fe40353","modified":1727061551899},{"_id":"public/images/openai/openai-api2.png","hash":"8006d57e5589be3e5902103dbcb1f19deb9bcb92","modified":1727061551899},{"_id":"public/images/banner.jpeg","hash":"e899cd5f0647af5684f39fcbc1a72a28096c465c","modified":1727061551899},{"_id":"public/images/Line-Bot/create-account/create-account2.png","hash":"745265243bd9ac06cd40f1d63ded063252fbcc97","modified":1727061551899},{"_id":"source/_posts/Wordpress-動態選單.md","hash":"0233c495d88117f590b87ae120241caaca8f0653","modified":1727282904162},{"_id":"public/2024/09/26/Wordpress-動態選單/index.html","hash":"418fccf703b186be72b22fb126a383ae6205d176","modified":1732454667468},{"_id":"public/tags/Wordpress/index.html","hash":"7fdfc955a5f44cdca5021f8052decbb177d6e683","modified":1732454667468},{"_id":"public/categories/Wordpress/index.html","hash":"39d1f2d2041ad82aac8c967791366ccb93371078","modified":1732454667468},{"_id":"public/categories/Wordpress/動態選單/index.html","hash":"4971ba9be29a6a4a6d81bf252f0be089410578e6","modified":1732454667468},{"_id":"source/_posts/Line-Bot與Chatgpt應用-串接replit大神程式.md","hash":"264f4da80087758328b7ed123a518122a2e9c810","modified":1727354839912},{"_id":"public/2024/09/26/Line-Bot與Chatgpt應用-串接replit大神程式/index.html","hash":"501ffb336d2b68e683a86d3cf2096fe96f1651e6","modified":1732454667468},{"_id":"public/categories/Line-Bot/replit設定/index.html","hash":"0c368b6776db3551707143d00b50de1ba0b3533e","modified":1732454667468},{"_id":"public/categories/Line-Bot/建立帳號Line-Bot帳號/index.html","hash":"47bc26cb9873bbc2cbb117ae9349f9fd26715760","modified":1732454667468},{"_id":"source/_posts/在-Mac-vscode-中使用-Code-Runner-和-C-C-插件來編譯與執行-C-程式.md","hash":"c66c2cd11099aa03211ea72424bb0adbfb49377e","modified":1727712061717},{"_id":"public/2024/09/30/在-Mac-vscode-中使用-Code-Runner-和-C-C-插件來編譯與執行-C-程式/index.html","hash":"c8f95707446450f1da419a2a7cacd735cdea8e40","modified":1732454667468},{"_id":"public/tags/開發環境/index.html","hash":"f49b80914ac6a46d18c208d8d31ca7e58a977a4d","modified":1732454667468},{"_id":"public/categories/開發環境/index.html","hash":"5aca02f10ac37a0a5527a05994ed9b0a00671172","modified":1732454667468},{"_id":"public/categories/開發環境/使用Mac在vscode執行C/index.html","hash":"072cf92528e914adc5e42ddd886a7edf75e16373","modified":1732454667468},{"_id":"source/_posts/Mac-Django-建置環境.md","hash":"962b3e6b433e589dde72f568e9c25f5c6351981d","modified":1727761807647},{"_id":"public/archives/2024/10/index.html","hash":"5715669a259895953057425b75a3c4c8095a735d","modified":1732454667468},{"_id":"public/2024/10/01/Mac-Django-建置環境/index.html","hash":"c682859cc7f49b167c6a3a38cb1ca2d7218026f8","modified":1732454667468},{"_id":"public/categories/Python/index.html","hash":"9b5a6860ecb0f47ec538efe33f3460134fbf7d36","modified":1732454667468},{"_id":"public/categories/Python/Django/index.html","hash":"1e60d8a54d6c51aecbc4f60eb682338dd8f43076","modified":1732454667468},{"_id":"public/tags/Python-Django/index.html","hash":"b004f38877e7c40d029b7c07b3b71b974706c04b","modified":1732454667468},{"_id":"source/_posts/Line-Bot-與-Openai-SQL-成績查詢.md","hash":"9b398b936cd25100090c987910cffdc4352a9ace","modified":1727871631536},{"_id":"public/2024/10/02/Line-Bot-與-Openai-SQL-成績查詢/index.html","hash":"2e32e2c311313dba049eec333dc5b4cfcbdcbb66","modified":1732454667468},{"_id":"public/categories/Line-Bot/成績查詢練習/index.html","hash":"c269edee62b125928bbe21eebd3f3c87cb5d8670","modified":1732454667468},{"_id":"source/_posts/Django-WebSocket.md","hash":"69dab87cc5153d028c7d4e007023377b76982808","modified":1729736330676},{"_id":"public/2024/10/24/Django-WebSocket/index.html","hash":"b9381342ac127810d94f6342c51e482dc0d11d82","modified":1732454667468},{"_id":"public/categories/WebSocket/index.html","hash":"0bee6ab6d34ad5259d7893eeb066cf9f37c6db90","modified":1732454667468},{"_id":"public/tags/Django/index.html","hash":"2659aa3a6b87ec95d36ae8b80a9e3048685f3b59","modified":1729736078294},{"_id":"source/_posts/post.md","hash":"41c7bbd466856e94dc75b9831989e4cfb97b0dfc","modified":1730520051558},{"_id":"public/2024/11/02/post/index.html","hash":"673a9a721f29b537952de2e64a6bce71f95b309e","modified":1730520083717},{"_id":"public/archives/page/2/index.html","hash":"ecc354329fdd88ffc822e137d9d990bd6e439138","modified":1732454667468},{"_id":"public/archives/2024/page/2/index.html","hash":"2705cf40fd213b062c8f85702f644fbe10fc2615","modified":1732454667468},{"_id":"public/archives/2024/11/index.html","hash":"545b95a278eec7cfd0558e2e7f5f9f27cad4e4ae","modified":1732454667468},{"_id":"public/categories/Python/Email/index.html","hash":"5e3ce00e380f62c4556d688833efc154fa06341b","modified":1732454667468},{"_id":"public/tags/Python-Email/index.html","hash":"292ffdf5892df46754234a879b89ac29cfa183c3","modified":1732454667468},{"_id":"public/page/2/index.html","hash":"c35d60def16f535c646024d1beb0fa07109fe43a","modified":1732454667468},{"_id":"source/_posts/post-1.md","hash":"1b2036e5eef023355fb3b29e25336f8fadee1f72","modified":1732112016514},{"_id":"source/_posts/撰寫 Python 發送成績給學生確認.md","hash":"41c7bbd466856e94dc75b9831989e4cfb97b0dfc","modified":1730520051558},{"_id":"public/2024/11/20/post-1/index.html","hash":"1d503ce7280bfca1779e15006bf0519bd24e3e5d","modified":1732454667468},{"_id":"public/2024/11/02/撰寫 Python 發送成績給學生確認/index.html","hash":"aaed2041452b436d699236375b7220e026d85e59","modified":1732454667468},{"_id":"public/categories/C/Vector/index.html","hash":"61022ec441ee35ef6dcd96cc223c52b3ad01e005","modified":1732454667468},{"_id":"public/categories/C/index.html","hash":"b27551d3277ec544805ccb565404954121d881c2","modified":1732454667468},{"_id":"public/tags/C/index.html","hash":"f67354567b2ede6450bd6659e2d223539969ea44","modified":1732454667468},{"_id":"source/_posts/Daphne 無法抓取 CSS 解決方法.md","hash":"54a49ba5fcca3b15237541b6304904bad9456442","modified":1732454584965},{"_id":"public/2024/11/24/Daphne 無法抓取 CSS 解決方法/index.html","hash":"bbf5bc2092cc5696d250a7b15e8a97faca261ee5","modified":1732454667468},{"_id":"public/categories/Python/Django/Daphne/index.html","hash":"7361cc07a1460f8ce2feff285c87a5b12f8a7774","modified":1732454667468}],"Category":[{"name":"Line Bot","_id":"cm1eerjeg0004g6exfe4vbk75"},{"name":"程式解題","_id":"cm1eerjeh0009g6exflglb4pq"},{"name":"CPE49題","parent":"cm1eerjeh0009g6exflglb4pq","_id":"cm1eerjeh000gg6ex5x233p48"},{"name":"遠端存放庫","_id":"cm1eerjej000mg6exeajk7zn6"},{"name":"Bitbucket","parent":"cm1eerjej000mg6exeajk7zn6","_id":"cm1eerjej000rg6ex7efy44zi"},{"name":"Wordpress","_id":"cm1i3j5ba0001ulex1dw6386h"},{"name":"動態選單","parent":"cm1i3j5ba0001ulex1dw6386h","_id":"cm1i3j5bc0004ulexe4y53pm4"},{"name":"replit設定","parent":"cm1eerjeg0004g6exfe4vbk75","_id":"cm1j5j2jk0002ebexgu0we2zo"},{"name":"建立帳號Line Bot帳號","parent":"cm1eerjeg0004g6exfe4vbk75","_id":"cm1jan45p0000txex2f4ubr8j"},{"name":"開發環境","_id":"cm1p76acq000085exg67bg5jh"},{"name":"使用Mac在vscode執行C++","parent":"cm1p76acq000085exg67bg5jh","_id":"cm1p76acr000385ex3i2od10g"},{"name":"Python","_id":"cm1q0kt5l0001czex3xvphevf"},{"name":"Django","parent":"cm1q0kt5l0001czex3xvphevf","_id":"cm1q0kt5m0004czex0cz0brlz"},{"name":"成績查詢練習","parent":"cm1eerjeg0004g6exfe4vbk75","_id":"cm1rp7wcn0002ceexg6rl72ii"},{"name":"WebSocket","_id":"cm2mnxpvs0001a8ex996509pl"},{"name":"Email","parent":"cm1q0kt5l0001czex3xvphevf","_id":"cm2zmqfs10002laexf241f64u"},{"name":"C++","_id":"cm3pyqfu50002jmex2b8fe8iz"},{"name":"Vector","parent":"cm3pyqfu50002jmex2b8fe8iz","_id":"cm3pyqfu70007jmex4akv4itw"},{"name":"Daphne","parent":"cm1q0kt5m0004czex0cz0brlz","_id":"cm3vmqde00002iuexbhr08siw"}],"Data":[{"_id":"link","data":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}],"Page":[{"title":"Home","date":"2024-09-12T16:00:00.000Z","_content":"\nWelcome to FullStackPenguin's blog!\n","source":"index.md","raw":"---\ntitle: Home\ndate: 2024-09-13\n---\n\nWelcome to FullStackPenguin's blog!\n","updated":"2024-09-15T10:54:54.083Z","path":"index.html","comments":1,"layout":"page","_id":"cm1eerjec0000g6ex56079et3","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>Welcome to FullStackPenguin’s blog!</p>\n","cover":false,"excerpt":"","more":"<p>Welcome to FullStackPenguin’s blog!</p>\n"},{"title":"時間軸 (Timeline)","subtitle":"探索過去的記錄","top_img":"https://images.pexels.com/photos/28318918/pexels-photo-28318918.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2","type":"archives","_content":"","source":"archives/index.md","raw":"---\ntitle: \"時間軸 (Timeline)\"\nsubtitle: \"探索過去的記錄\"\ntop_img: \"https://images.pexels.com/photos/28318918/pexels-photo-28318918.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2\"\ntype: \"archives\"\n---\n","date":"2024-09-16T14:50:28.120Z","updated":"2024-09-16T14:50:28.120Z","path":"archives/index.html","comments":1,"layout":"page","_id":"cm1eerjef0002g6ex8uctgquo","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script>","cover":false,"excerpt":"","more":""},{"type":"categories","layout":"page","title":"所有分類 (Explore All Categories) 📂","date":"2024-09-14T12:51:14.000Z","tags":null,"top_img":"https://images.pexels.com/photos/1750268/pexels-photo-1750268.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2","_content":"","source":"categories/index.md","raw":"---\ntype: \"categories\"\nlayout: page\ntitle: 所有分類 (Explore All Categories) 📂\ndate: 2024-09-14 20:51:14\ntags:\ntop_img: https://images.pexels.com/photos/1750268/pexels-photo-1750268.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2\n---\n","updated":"2024-09-17T05:15:20.522Z","path":"categories/index.html","comments":1,"_id":"cm1eerjeg0006g6ex72sf8srw","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script>","cover":false,"excerpt":"","more":""},{"_content":"#page-header #post-info {\n  bottom: 100px;\n}\n\n#post-info {\n  display: flex;\n  flex-direction: column; /* 讓內容垂直排列 */\n  justify-content: center; /* 置中對齊內容 */\n  align-items: center; /* 置中對齊內容 */\n  text-align: center; /* 文字置中 */\n}\n\n.post-title {\n  font-size: 2.5em;\n  margin-bottom: 30px; /* 調整標題和元數據間的距離 */\n}\n\n#post-meta {\n  display: flex;\n  flex-direction: column; /* 元數據垂直排列 */\n  align-items: center; /* 元數據置中 */\n}\n\n.meta-firstline,\n.meta-secondline {\n  margin-bottom: 10px; /* 增加每行之間的距離 */\n}\n","source":"css/custom.css","raw":"#page-header #post-info {\n  bottom: 100px;\n}\n\n#post-info {\n  display: flex;\n  flex-direction: column; /* 讓內容垂直排列 */\n  justify-content: center; /* 置中對齊內容 */\n  align-items: center; /* 置中對齊內容 */\n  text-align: center; /* 文字置中 */\n}\n\n.post-title {\n  font-size: 2.5em;\n  margin-bottom: 30px; /* 調整標題和元數據間的距離 */\n}\n\n#post-meta {\n  display: flex;\n  flex-direction: column; /* 元數據垂直排列 */\n  align-items: center; /* 元數據置中 */\n}\n\n.meta-firstline,\n.meta-secondline {\n  margin-bottom: 10px; /* 增加每行之間的距離 */\n}\n","date":"2024-09-17T04:55:58.584Z","updated":"2024-09-17T04:55:58.584Z","path":"css/custom.css","layout":"false","title":"","comments":1,"_id":"cm1eerjeg0007g6ex53nk275q","content":"#page-header #post-info {\n  bottom: 100px;\n}\n\n#post-info {\n  display: flex;\n  flex-direction: column; /* 讓內容垂直排列 */\n  justify-content: center; /* 置中對齊內容 */\n  align-items: center; /* 置中對齊內容 */\n  text-align: center; /* 文字置中 */\n}\n\n.post-title {\n  font-size: 2.5em;\n  margin-bottom: 30px; /* 調整標題和元數據間的距離 */\n}\n\n#post-meta {\n  display: flex;\n  flex-direction: column; /* 元數據垂直排列 */\n  align-items: center; /* 元數據置中 */\n}\n\n.meta-firstline,\n.meta-secondline {\n  margin-bottom: 10px; /* 增加每行之間的距離 */\n}\n"},{"_content":"/* 波浪css */\n.main-hero-waves-area {\n  width: 100%;\n  position: absolute;\n  left: 0;\n  bottom: -11px;\n  z-index: 5;\n}\n.waves-area .waves-svg {\n  width: 100%;\n  height: 5rem;\n}\n/* Animation */\n\n.parallax > use {\n  animation: move-forever 25s cubic-bezier(0.55, 0.5, 0.45, 0.5) infinite;\n}\n.parallax > use:nth-child(1) {\n  animation-delay: -2s;\n  animation-duration: 7s;\n  fill: #f7f9febd;\n}\n.parallax > use:nth-child(2) {\n  animation-delay: -3s;\n  animation-duration: 10s;\n  fill: #f7f9fe82;\n}\n.parallax > use:nth-child(3) {\n  animation-delay: -4s;\n  animation-duration: 13s;\n  fill: #f7f9fe36;\n}\n.parallax > use:nth-child(4) {\n  animation-delay: -5s;\n  animation-duration: 20s;\n  fill: #f7f9fe;\n}\n/* 黑色模式背景 */\n[data-theme=\"dark\"] .parallax > use:nth-child(1) {\n  animation-delay: -2s;\n  animation-duration: 7s;\n  fill: #18171dc8;\n}\n[data-theme=\"dark\"] .parallax > use:nth-child(2) {\n  animation-delay: -3s;\n  animation-duration: 10s;\n  fill: #18171d80;\n}\n[data-theme=\"dark\"] .parallax > use:nth-child(3) {\n  animation-delay: -4s;\n  animation-duration: 13s;\n  fill: #18171d3e;\n}\n[data-theme=\"dark\"] .parallax > use:nth-child(4) {\n  animation-delay: -5s;\n  animation-duration: 20s;\n  fill: #18171d;\n}\n\n@keyframes move-forever {\n  0% {\n    transform: translate3d(-90px, 0, 0);\n  }\n  100% {\n    transform: translate3d(85px, 0, 0);\n  }\n}\n/*Shrinking for mobile*/\n@media (max-width: 768px) {\n  .waves-area .waves-svg {\n    height: 40px;\n    min-height: 40px;\n  }\n}\n","source":"css/wave.css","raw":"/* 波浪css */\n.main-hero-waves-area {\n  width: 100%;\n  position: absolute;\n  left: 0;\n  bottom: -11px;\n  z-index: 5;\n}\n.waves-area .waves-svg {\n  width: 100%;\n  height: 5rem;\n}\n/* Animation */\n\n.parallax > use {\n  animation: move-forever 25s cubic-bezier(0.55, 0.5, 0.45, 0.5) infinite;\n}\n.parallax > use:nth-child(1) {\n  animation-delay: -2s;\n  animation-duration: 7s;\n  fill: #f7f9febd;\n}\n.parallax > use:nth-child(2) {\n  animation-delay: -3s;\n  animation-duration: 10s;\n  fill: #f7f9fe82;\n}\n.parallax > use:nth-child(3) {\n  animation-delay: -4s;\n  animation-duration: 13s;\n  fill: #f7f9fe36;\n}\n.parallax > use:nth-child(4) {\n  animation-delay: -5s;\n  animation-duration: 20s;\n  fill: #f7f9fe;\n}\n/* 黑色模式背景 */\n[data-theme=\"dark\"] .parallax > use:nth-child(1) {\n  animation-delay: -2s;\n  animation-duration: 7s;\n  fill: #18171dc8;\n}\n[data-theme=\"dark\"] .parallax > use:nth-child(2) {\n  animation-delay: -3s;\n  animation-duration: 10s;\n  fill: #18171d80;\n}\n[data-theme=\"dark\"] .parallax > use:nth-child(3) {\n  animation-delay: -4s;\n  animation-duration: 13s;\n  fill: #18171d3e;\n}\n[data-theme=\"dark\"] .parallax > use:nth-child(4) {\n  animation-delay: -5s;\n  animation-duration: 20s;\n  fill: #18171d;\n}\n\n@keyframes move-forever {\n  0% {\n    transform: translate3d(-90px, 0, 0);\n  }\n  100% {\n    transform: translate3d(85px, 0, 0);\n  }\n}\n/*Shrinking for mobile*/\n@media (max-width: 768px) {\n  .waves-area .waves-svg {\n    height: 40px;\n    min-height: 40px;\n  }\n}\n","date":"2024-09-17T01:45:35.892Z","updated":"2024-09-17T01:45:35.892Z","path":"css/wave.css","layout":"false","title":"","comments":1,"_id":"cm1eerjeh0008g6excyw4dem6","content":"/* 波浪css */\n.main-hero-waves-area {\n  width: 100%;\n  position: absolute;\n  left: 0;\n  bottom: -11px;\n  z-index: 5;\n}\n.waves-area .waves-svg {\n  width: 100%;\n  height: 5rem;\n}\n/* Animation */\n\n.parallax > use {\n  animation: move-forever 25s cubic-bezier(0.55, 0.5, 0.45, 0.5) infinite;\n}\n.parallax > use:nth-child(1) {\n  animation-delay: -2s;\n  animation-duration: 7s;\n  fill: #f7f9febd;\n}\n.parallax > use:nth-child(2) {\n  animation-delay: -3s;\n  animation-duration: 10s;\n  fill: #f7f9fe82;\n}\n.parallax > use:nth-child(3) {\n  animation-delay: -4s;\n  animation-duration: 13s;\n  fill: #f7f9fe36;\n}\n.parallax > use:nth-child(4) {\n  animation-delay: -5s;\n  animation-duration: 20s;\n  fill: #f7f9fe;\n}\n/* 黑色模式背景 */\n[data-theme=\"dark\"] .parallax > use:nth-child(1) {\n  animation-delay: -2s;\n  animation-duration: 7s;\n  fill: #18171dc8;\n}\n[data-theme=\"dark\"] .parallax > use:nth-child(2) {\n  animation-delay: -3s;\n  animation-duration: 10s;\n  fill: #18171d80;\n}\n[data-theme=\"dark\"] .parallax > use:nth-child(3) {\n  animation-delay: -4s;\n  animation-duration: 13s;\n  fill: #18171d3e;\n}\n[data-theme=\"dark\"] .parallax > use:nth-child(4) {\n  animation-delay: -5s;\n  animation-duration: 20s;\n  fill: #18171d;\n}\n\n@keyframes move-forever {\n  0% {\n    transform: translate3d(-90px, 0, 0);\n  }\n  100% {\n    transform: translate3d(85px, 0, 0);\n  }\n}\n/*Shrinking for mobile*/\n@media (max-width: 768px) {\n  .waves-area .waves-svg {\n    height: 40px;\n    min-height: 40px;\n  }\n}\n"},{"title":"所有標籤 (Explore All Tags) 🏷️","date":"2018-01-04T16:00:00.000Z","type":"tags","orderby":"random","order":1,"top_img":"https://images.pexels.com/photos/354103/pexels-photo-354103.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2","_content":"","source":"tags/index.md","raw":"---\ntitle: 所有標籤 (Explore All Tags) 🏷️\ndate: 2018-01-05 00:00:00\ntype: \"tags\"\norderby: random\norder: 1\ntop_img: https://images.pexels.com/photos/354103/pexels-photo-354103.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2\n---\n","updated":"2024-09-17T05:13:43.762Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cm1eerjeh000cg6ex2r1w4phc","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script>","cover":false,"excerpt":"","more":""},{"title":"友情鏈接","date":"2024-09-16T14:17:49.000Z","type":"link","_content":"","source":"link/index.md","raw":"---\ntitle: 友情鏈接\ndate: 2024-09-16 22:17:49\ntype: \"link\"\n---\n","updated":"2024-09-16T03:38:15.741Z","path":"link/index.html","comments":1,"layout":"page","_id":"cm1eerjeh000dg6exc3n7cq9b","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script>","cover":false,"excerpt":"","more":""}],"Post":[{"layout":"post","title":"Line Bot 與 Chatgpt應用 01 - 建立帳號","date":"2024-09-19T02:49:52.000Z","top_img":"/images/Line-Bot/create-account/create-account2.png","cover":"/images/Line-Bot/create-account/create-account2.png","_content":"\n# Line Bot 建立流程\n\n我們將一步一步指導你如何建立一個新的 Line Bot 帳戶，並完成基本設定。\n\n## 1. 進入 Line Business 頁面\n\n首先，前往 [Line Business](https://developers.line.biz/en/?status=success) 官方網站，這是 Line Bot 開發者專用的後台管理平台。\n\n![create-account01](https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FLine-Bot%E5%92%8Cgpt%E5%AF%A6%E6%88%B0%E6%95%99%E5%AD%B8%2Fcreate-account1.png?alt=media&token=1a48bf32-ef29-4e39-b16a-55598225e676)\n\n## 2. 登入並進入 Console\n\n在頁面的右上角，找到並點擊 **Console** 按鈕，進入 Line Bot 後台控制台。\n\n![create-account02](https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FLine-Bot%E5%92%8Cgpt%E5%AF%A6%E6%88%B0%E6%95%99%E5%AD%B8%2Fcreate-account2.png?alt=media&token=efd7f776-8637-4fe2-8b39-39dc8709367f)\n\n## 3. 進入後台控制台\n\n系統會將你引導至後台管理畫面，在這裡可以管理和創建你的 Line Bot 專案。\n\n![create-account03](https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FLine-Bot%E5%92%8Cgpt%E5%AF%A6%E6%88%B0%E6%95%99%E5%AD%B8%2Fcreate-account3.png?alt=media&token=bf809ba3-4017-4dfd-9ae0-26057f312fd5)\n\n## 4. 選擇 Providers\n\n在控制台頁面中，找到並點擊 **Providers**，我都想成這是用來管理多個專案的文件資料夾。\n\n![create-account04](https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FLine-Bot%E5%92%8Cgpt%E5%AF%A6%E6%88%B0%E6%95%99%E5%AD%B8%2Fcreate-account4.png?alt=media&token=9d91588e-425e-45f1-ac3c-7cba2fd19e2e)\n\n## 5. 創建新的 Provider\n\n輸入一個你定義的 Provider 名稱。\n\n![create-account05](/images/Line-Bot/create-account/create-account5.png)\n\n## 6. 創建 Message API Channel\n\n選擇你剛剛創建的 Provider，接著在頁面中間位置找到並點擊 **Create a Message API channel**，以創建一個 Message API 機器人來管理訊息傳遞。\n\n![create-account06](/images/Line-Bot/create-account/create-account6.png)\n\n## 7. 創建 Line Official Account\n\n系統會引導你創建一個 **Line Official Account**，這是你的 Line Bot 與使用者互動所需的官方帳號，點擊 **Create a Line Official Account** 來開始。\n\n![create-account07](/images/Line-Bot/create-account/create-account7.png)\n\n## 8. 填寫帳號基本資訊\n\n系統會要求你填寫 Line Official Account 的基本資訊，如名稱、類別、國家等。根據實際需求進行填寫。\n\n![create-account08](/images/Line-Bot/create-account/create-account8.png)\n\n## 9. 確認並創建\n\n確認你所填寫的資訊無誤後，點擊 **確定** 以完成帳號創建。\n\n![create-account09](/images/Line-Bot/create-account/create-account9.png)\n\n## 10. 完成 Line Bot 設定\n\n創建完成後，系統會顯示一個確認訊息，代表你的 Line Bot 已成功建立。\n\n![create-account10](/images/Line-Bot/create-account/create-account10.png)\n\n## 11. 設定 Line Bot\n\n最後，你可以進入 Line Bot 的設定介面，進行 webhook URL 設定、回應訊息設定等。\n\n![create-account12](/images/Line-Bot/create-account/create-account11.png)\n","source":"_posts/Line-Bot與Chatgpt應用-建立機器人帳號.md","raw":"---\nlayout: post\ntitle: Line Bot 與 Chatgpt應用 01 - 建立帳號\ndate: 2024-09-19 10:49:52\ntags: [Line Bot]\ncategories: [Line Bot, 建立帳號Line Bot帳號]\ntop_img: /images/Line-Bot/create-account/create-account2.png\ncover: /images/Line-Bot/create-account/create-account2.png\n---\n\n# Line Bot 建立流程\n\n我們將一步一步指導你如何建立一個新的 Line Bot 帳戶，並完成基本設定。\n\n## 1. 進入 Line Business 頁面\n\n首先，前往 [Line Business](https://developers.line.biz/en/?status=success) 官方網站，這是 Line Bot 開發者專用的後台管理平台。\n\n![create-account01](https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FLine-Bot%E5%92%8Cgpt%E5%AF%A6%E6%88%B0%E6%95%99%E5%AD%B8%2Fcreate-account1.png?alt=media&token=1a48bf32-ef29-4e39-b16a-55598225e676)\n\n## 2. 登入並進入 Console\n\n在頁面的右上角，找到並點擊 **Console** 按鈕，進入 Line Bot 後台控制台。\n\n![create-account02](https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FLine-Bot%E5%92%8Cgpt%E5%AF%A6%E6%88%B0%E6%95%99%E5%AD%B8%2Fcreate-account2.png?alt=media&token=efd7f776-8637-4fe2-8b39-39dc8709367f)\n\n## 3. 進入後台控制台\n\n系統會將你引導至後台管理畫面，在這裡可以管理和創建你的 Line Bot 專案。\n\n![create-account03](https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FLine-Bot%E5%92%8Cgpt%E5%AF%A6%E6%88%B0%E6%95%99%E5%AD%B8%2Fcreate-account3.png?alt=media&token=bf809ba3-4017-4dfd-9ae0-26057f312fd5)\n\n## 4. 選擇 Providers\n\n在控制台頁面中，找到並點擊 **Providers**，我都想成這是用來管理多個專案的文件資料夾。\n\n![create-account04](https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FLine-Bot%E5%92%8Cgpt%E5%AF%A6%E6%88%B0%E6%95%99%E5%AD%B8%2Fcreate-account4.png?alt=media&token=9d91588e-425e-45f1-ac3c-7cba2fd19e2e)\n\n## 5. 創建新的 Provider\n\n輸入一個你定義的 Provider 名稱。\n\n![create-account05](/images/Line-Bot/create-account/create-account5.png)\n\n## 6. 創建 Message API Channel\n\n選擇你剛剛創建的 Provider，接著在頁面中間位置找到並點擊 **Create a Message API channel**，以創建一個 Message API 機器人來管理訊息傳遞。\n\n![create-account06](/images/Line-Bot/create-account/create-account6.png)\n\n## 7. 創建 Line Official Account\n\n系統會引導你創建一個 **Line Official Account**，這是你的 Line Bot 與使用者互動所需的官方帳號，點擊 **Create a Line Official Account** 來開始。\n\n![create-account07](/images/Line-Bot/create-account/create-account7.png)\n\n## 8. 填寫帳號基本資訊\n\n系統會要求你填寫 Line Official Account 的基本資訊，如名稱、類別、國家等。根據實際需求進行填寫。\n\n![create-account08](/images/Line-Bot/create-account/create-account8.png)\n\n## 9. 確認並創建\n\n確認你所填寫的資訊無誤後，點擊 **確定** 以完成帳號創建。\n\n![create-account09](/images/Line-Bot/create-account/create-account9.png)\n\n## 10. 完成 Line Bot 設定\n\n創建完成後，系統會顯示一個確認訊息，代表你的 Line Bot 已成功建立。\n\n![create-account10](/images/Line-Bot/create-account/create-account10.png)\n\n## 11. 設定 Line Bot\n\n最後，你可以進入 Line Bot 的設定介面，進行 webhook URL 設定、回應訊息設定等。\n\n![create-account12](/images/Line-Bot/create-account/create-account11.png)\n","slug":"Line-Bot與Chatgpt應用-建立機器人帳號","published":1,"updated":"2024-09-26T12:52:04.006Z","_id":"cm1eerjee0001g6exhzk86wqw","comments":1,"photos":[],"content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h1 id=\"Line-Bot-建立流程\"><a href=\"#Line-Bot-建立流程\" class=\"headerlink\" title=\"Line Bot 建立流程\"></a>Line Bot 建立流程</h1><p>我們將一步一步指導你如何建立一個新的 Line Bot 帳戶，並完成基本設定。</p>\n<h2 id=\"1-進入-Line-Business-頁面\"><a href=\"#1-進入-Line-Business-頁面\" class=\"headerlink\" title=\"1. 進入 Line Business 頁面\"></a>1. 進入 Line Business 頁面</h2><p>首先，前往 <a href=\"https://developers.line.biz/en/?status=success\">Line Business</a> 官方網站，這是 Line Bot 開發者專用的後台管理平台。</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FLine-Bot%E5%92%8Cgpt%E5%AF%A6%E6%88%B0%E6%95%99%E5%AD%B8%2Fcreate-account1.png?alt=media&token=1a48bf32-ef29-4e39-b16a-55598225e676\" alt=\"create-account01\"></p>\n<h2 id=\"2-登入並進入-Console\"><a href=\"#2-登入並進入-Console\" class=\"headerlink\" title=\"2. 登入並進入 Console\"></a>2. 登入並進入 Console</h2><p>在頁面的右上角，找到並點擊 <strong>Console</strong> 按鈕，進入 Line Bot 後台控制台。</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FLine-Bot%E5%92%8Cgpt%E5%AF%A6%E6%88%B0%E6%95%99%E5%AD%B8%2Fcreate-account2.png?alt=media&token=efd7f776-8637-4fe2-8b39-39dc8709367f\" alt=\"create-account02\"></p>\n<h2 id=\"3-進入後台控制台\"><a href=\"#3-進入後台控制台\" class=\"headerlink\" title=\"3. 進入後台控制台\"></a>3. 進入後台控制台</h2><p>系統會將你引導至後台管理畫面，在這裡可以管理和創建你的 Line Bot 專案。</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FLine-Bot%E5%92%8Cgpt%E5%AF%A6%E6%88%B0%E6%95%99%E5%AD%B8%2Fcreate-account3.png?alt=media&token=bf809ba3-4017-4dfd-9ae0-26057f312fd5\" alt=\"create-account03\"></p>\n<h2 id=\"4-選擇-Providers\"><a href=\"#4-選擇-Providers\" class=\"headerlink\" title=\"4. 選擇 Providers\"></a>4. 選擇 Providers</h2><p>在控制台頁面中，找到並點擊 <strong>Providers</strong>，我都想成這是用來管理多個專案的文件資料夾。</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FLine-Bot%E5%92%8Cgpt%E5%AF%A6%E6%88%B0%E6%95%99%E5%AD%B8%2Fcreate-account4.png?alt=media&token=9d91588e-425e-45f1-ac3c-7cba2fd19e2e\" alt=\"create-account04\"></p>\n<h2 id=\"5-創建新的-Provider\"><a href=\"#5-創建新的-Provider\" class=\"headerlink\" title=\"5. 創建新的 Provider\"></a>5. 創建新的 Provider</h2><p>輸入一個你定義的 Provider 名稱。</p>\n<p><img src=\"/images/Line-Bot/create-account/create-account5.png\" alt=\"create-account05\"></p>\n<h2 id=\"6-創建-Message-API-Channel\"><a href=\"#6-創建-Message-API-Channel\" class=\"headerlink\" title=\"6. 創建 Message API Channel\"></a>6. 創建 Message API Channel</h2><p>選擇你剛剛創建的 Provider，接著在頁面中間位置找到並點擊 <strong>Create a Message API channel</strong>，以創建一個 Message API 機器人來管理訊息傳遞。</p>\n<p><img src=\"/images/Line-Bot/create-account/create-account6.png\" alt=\"create-account06\"></p>\n<h2 id=\"7-創建-Line-Official-Account\"><a href=\"#7-創建-Line-Official-Account\" class=\"headerlink\" title=\"7. 創建 Line Official Account\"></a>7. 創建 Line Official Account</h2><p>系統會引導你創建一個 <strong>Line Official Account</strong>，這是你的 Line Bot 與使用者互動所需的官方帳號，點擊 <strong>Create a Line Official Account</strong> 來開始。</p>\n<p><img src=\"/images/Line-Bot/create-account/create-account7.png\" alt=\"create-account07\"></p>\n<h2 id=\"8-填寫帳號基本資訊\"><a href=\"#8-填寫帳號基本資訊\" class=\"headerlink\" title=\"8. 填寫帳號基本資訊\"></a>8. 填寫帳號基本資訊</h2><p>系統會要求你填寫 Line Official Account 的基本資訊，如名稱、類別、國家等。根據實際需求進行填寫。</p>\n<p><img src=\"/images/Line-Bot/create-account/create-account8.png\" alt=\"create-account08\"></p>\n<h2 id=\"9-確認並創建\"><a href=\"#9-確認並創建\" class=\"headerlink\" title=\"9. 確認並創建\"></a>9. 確認並創建</h2><p>確認你所填寫的資訊無誤後，點擊 <strong>確定</strong> 以完成帳號創建。</p>\n<p><img src=\"/images/Line-Bot/create-account/create-account9.png\" alt=\"create-account09\"></p>\n<h2 id=\"10-完成-Line-Bot-設定\"><a href=\"#10-完成-Line-Bot-設定\" class=\"headerlink\" title=\"10. 完成 Line Bot 設定\"></a>10. 完成 Line Bot 設定</h2><p>創建完成後，系統會顯示一個確認訊息，代表你的 Line Bot 已成功建立。</p>\n<p><img src=\"/images/Line-Bot/create-account/create-account10.png\" alt=\"create-account10\"></p>\n<h2 id=\"11-設定-Line-Bot\"><a href=\"#11-設定-Line-Bot\" class=\"headerlink\" title=\"11. 設定 Line Bot\"></a>11. 設定 Line Bot</h2><p>最後，你可以進入 Line Bot 的設定介面，進行 webhook URL 設定、回應訊息設定等。</p>\n<p><img src=\"/images/Line-Bot/create-account/create-account11.png\" alt=\"create-account12\"></p>\n","cover_type":"img","excerpt":"","more":"<h1 id=\"Line-Bot-建立流程\"><a href=\"#Line-Bot-建立流程\" class=\"headerlink\" title=\"Line Bot 建立流程\"></a>Line Bot 建立流程</h1><p>我們將一步一步指導你如何建立一個新的 Line Bot 帳戶，並完成基本設定。</p>\n<h2 id=\"1-進入-Line-Business-頁面\"><a href=\"#1-進入-Line-Business-頁面\" class=\"headerlink\" title=\"1. 進入 Line Business 頁面\"></a>1. 進入 Line Business 頁面</h2><p>首先，前往 <a href=\"https://developers.line.biz/en/?status=success\">Line Business</a> 官方網站，這是 Line Bot 開發者專用的後台管理平台。</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FLine-Bot%E5%92%8Cgpt%E5%AF%A6%E6%88%B0%E6%95%99%E5%AD%B8%2Fcreate-account1.png?alt=media&token=1a48bf32-ef29-4e39-b16a-55598225e676\" alt=\"create-account01\"></p>\n<h2 id=\"2-登入並進入-Console\"><a href=\"#2-登入並進入-Console\" class=\"headerlink\" title=\"2. 登入並進入 Console\"></a>2. 登入並進入 Console</h2><p>在頁面的右上角，找到並點擊 <strong>Console</strong> 按鈕，進入 Line Bot 後台控制台。</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FLine-Bot%E5%92%8Cgpt%E5%AF%A6%E6%88%B0%E6%95%99%E5%AD%B8%2Fcreate-account2.png?alt=media&token=efd7f776-8637-4fe2-8b39-39dc8709367f\" alt=\"create-account02\"></p>\n<h2 id=\"3-進入後台控制台\"><a href=\"#3-進入後台控制台\" class=\"headerlink\" title=\"3. 進入後台控制台\"></a>3. 進入後台控制台</h2><p>系統會將你引導至後台管理畫面，在這裡可以管理和創建你的 Line Bot 專案。</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FLine-Bot%E5%92%8Cgpt%E5%AF%A6%E6%88%B0%E6%95%99%E5%AD%B8%2Fcreate-account3.png?alt=media&token=bf809ba3-4017-4dfd-9ae0-26057f312fd5\" alt=\"create-account03\"></p>\n<h2 id=\"4-選擇-Providers\"><a href=\"#4-選擇-Providers\" class=\"headerlink\" title=\"4. 選擇 Providers\"></a>4. 選擇 Providers</h2><p>在控制台頁面中，找到並點擊 <strong>Providers</strong>，我都想成這是用來管理多個專案的文件資料夾。</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FLine-Bot%E5%92%8Cgpt%E5%AF%A6%E6%88%B0%E6%95%99%E5%AD%B8%2Fcreate-account4.png?alt=media&token=9d91588e-425e-45f1-ac3c-7cba2fd19e2e\" alt=\"create-account04\"></p>\n<h2 id=\"5-創建新的-Provider\"><a href=\"#5-創建新的-Provider\" class=\"headerlink\" title=\"5. 創建新的 Provider\"></a>5. 創建新的 Provider</h2><p>輸入一個你定義的 Provider 名稱。</p>\n<p><img src=\"/images/Line-Bot/create-account/create-account5.png\" alt=\"create-account05\"></p>\n<h2 id=\"6-創建-Message-API-Channel\"><a href=\"#6-創建-Message-API-Channel\" class=\"headerlink\" title=\"6. 創建 Message API Channel\"></a>6. 創建 Message API Channel</h2><p>選擇你剛剛創建的 Provider，接著在頁面中間位置找到並點擊 <strong>Create a Message API channel</strong>，以創建一個 Message API 機器人來管理訊息傳遞。</p>\n<p><img src=\"/images/Line-Bot/create-account/create-account6.png\" alt=\"create-account06\"></p>\n<h2 id=\"7-創建-Line-Official-Account\"><a href=\"#7-創建-Line-Official-Account\" class=\"headerlink\" title=\"7. 創建 Line Official Account\"></a>7. 創建 Line Official Account</h2><p>系統會引導你創建一個 <strong>Line Official Account</strong>，這是你的 Line Bot 與使用者互動所需的官方帳號，點擊 <strong>Create a Line Official Account</strong> 來開始。</p>\n<p><img src=\"/images/Line-Bot/create-account/create-account7.png\" alt=\"create-account07\"></p>\n<h2 id=\"8-填寫帳號基本資訊\"><a href=\"#8-填寫帳號基本資訊\" class=\"headerlink\" title=\"8. 填寫帳號基本資訊\"></a>8. 填寫帳號基本資訊</h2><p>系統會要求你填寫 Line Official Account 的基本資訊，如名稱、類別、國家等。根據實際需求進行填寫。</p>\n<p><img src=\"/images/Line-Bot/create-account/create-account8.png\" alt=\"create-account08\"></p>\n<h2 id=\"9-確認並創建\"><a href=\"#9-確認並創建\" class=\"headerlink\" title=\"9. 確認並創建\"></a>9. 確認並創建</h2><p>確認你所填寫的資訊無誤後，點擊 <strong>確定</strong> 以完成帳號創建。</p>\n<p><img src=\"/images/Line-Bot/create-account/create-account9.png\" alt=\"create-account09\"></p>\n<h2 id=\"10-完成-Line-Bot-設定\"><a href=\"#10-完成-Line-Bot-設定\" class=\"headerlink\" title=\"10. 完成 Line Bot 設定\"></a>10. 完成 Line Bot 設定</h2><p>創建完成後，系統會顯示一個確認訊息，代表你的 Line Bot 已成功建立。</p>\n<p><img src=\"/images/Line-Bot/create-account/create-account10.png\" alt=\"create-account10\"></p>\n<h2 id=\"11-設定-Line-Bot\"><a href=\"#11-設定-Line-Bot\" class=\"headerlink\" title=\"11. 設定 Line Bot\"></a>11. 設定 Line Bot</h2><p>最後，你可以進入 Line Bot 的設定介面，進行 webhook URL 設定、回應訊息設定等。</p>\n<p><img src=\"/images/Line-Bot/create-account/create-account11.png\" alt=\"create-account12\"></p>\n"},{"layout":"post","title":"UVA 10041 - Vito's Family","date":"2024-09-16T15:49:32.000Z","top_img":"/images/CPE_sub.webp","cover":"/images/CPE.webp","_content":"\n題目來源：[UVA 10041 - Vito's Family](https://onlinejudge.org/external/100/10041.pdf)\n\n## 題目描述\n\nVito 的家族住在同一條街上，但每個人的住址可能不同。Vito 想找到一個住址，使得該住址到家族成員所有住址的總距離最小。給定每位家族成員的住址，找出這個最佳的住址，並計算最小總距離。\n\n## 解題思路\n\n本題的核心在於如何選擇一個最佳住址，使得所有成員到該住址的總距離最小。最佳的住址是所有家族成員住址的中位數，因為中位數在統計學中能最小化絕對差距的總和。\n\n### 步驟：\n\n1. **輸入測試案例數量**。\n2. **輸入家族成員數量與其住址**。\n3. **對住址進行排序，找出中位數作為最佳住址**。\n4. **計算每個住址與中位數之間的距離總和**。\n5. **輸出最小總距離**。\n\n## 程式碼\n\n```cpp\n#include <iostream>\n#include <algorithm>\n#include <vector>\nusing namespace std;\n\nint main()\n{\n    int testCases;\n    cin >> testCases;\n\n    while(testCases--) {\n        int numRelatives;\n        cin >> numRelatives;\n\n        vector<int> addresses(numRelatives);\n        for(int i = 0; i < numRelatives; i++) {\n            cin >> addresses[i];\n        }\n\n        // 排序住址，找到中位數\n        sort(addresses.begin(), addresses.end());\n        int medianAddress = addresses[numRelatives / 2];\n        int totalDistance = 0;\n\n        // 計算總距離\n        for(int i = 0; i < numRelatives; i++) {\n            totalDistance += abs(addresses[i] - medianAddress);\n        }\n\n        // 輸出結果\n        cout << totalDistance << endl;\n    }\n\n    return 0;\n}\n```\n","source":"_posts/UVA-10041-Vito-s-Family.md","raw":"---\nlayout: post\ntitle: UVA 10041 - Vito's Family\ndate: 2024-09-16 23:49:32\ntags: [CPE]\ncategories: [程式解題, CPE49題]\ntop_img: /images/CPE_sub.webp\ncover: /images/CPE.webp\n---\n\n題目來源：[UVA 10041 - Vito's Family](https://onlinejudge.org/external/100/10041.pdf)\n\n## 題目描述\n\nVito 的家族住在同一條街上，但每個人的住址可能不同。Vito 想找到一個住址，使得該住址到家族成員所有住址的總距離最小。給定每位家族成員的住址，找出這個最佳的住址，並計算最小總距離。\n\n## 解題思路\n\n本題的核心在於如何選擇一個最佳住址，使得所有成員到該住址的總距離最小。最佳的住址是所有家族成員住址的中位數，因為中位數在統計學中能最小化絕對差距的總和。\n\n### 步驟：\n\n1. **輸入測試案例數量**。\n2. **輸入家族成員數量與其住址**。\n3. **對住址進行排序，找出中位數作為最佳住址**。\n4. **計算每個住址與中位數之間的距離總和**。\n5. **輸出最小總距離**。\n\n## 程式碼\n\n```cpp\n#include <iostream>\n#include <algorithm>\n#include <vector>\nusing namespace std;\n\nint main()\n{\n    int testCases;\n    cin >> testCases;\n\n    while(testCases--) {\n        int numRelatives;\n        cin >> numRelatives;\n\n        vector<int> addresses(numRelatives);\n        for(int i = 0; i < numRelatives; i++) {\n            cin >> addresses[i];\n        }\n\n        // 排序住址，找到中位數\n        sort(addresses.begin(), addresses.end());\n        int medianAddress = addresses[numRelatives / 2];\n        int totalDistance = 0;\n\n        // 計算總距離\n        for(int i = 0; i < numRelatives; i++) {\n            totalDistance += abs(addresses[i] - medianAddress);\n        }\n\n        // 輸出結果\n        cout << totalDistance << endl;\n    }\n\n    return 0;\n}\n```\n","slug":"UVA-10041-Vito-s-Family","published":1,"updated":"2024-09-18T03:32:04.444Z","comments":1,"photos":[],"_id":"cm1eerjef0003g6ex9vhpba90","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>題目來源：<a href=\"https://onlinejudge.org/external/100/10041.pdf\">UVA 10041 - Vito’s Family</a></p>\n<h2 id=\"題目描述\"><a href=\"#題目描述\" class=\"headerlink\" title=\"題目描述\"></a>題目描述</h2><p>Vito 的家族住在同一條街上，但每個人的住址可能不同。Vito 想找到一個住址，使得該住址到家族成員所有住址的總距離最小。給定每位家族成員的住址，找出這個最佳的住址，並計算最小總距離。</p>\n<h2 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h2><p>本題的核心在於如何選擇一個最佳住址，使得所有成員到該住址的總距離最小。最佳的住址是所有家族成員住址的中位數，因為中位數在統計學中能最小化絕對差距的總和。</p>\n<h3 id=\"步驟：\"><a href=\"#步驟：\" class=\"headerlink\" title=\"步驟：\"></a>步驟：</h3><ol>\n<li><strong>輸入測試案例數量</strong>。</li>\n<li><strong>輸入家族成員數量與其住址</strong>。</li>\n<li><strong>對住址進行排序，找出中位數作為最佳住址</strong>。</li>\n<li><strong>計算每個住址與中位數之間的距離總和</strong>。</li>\n<li><strong>輸出最小總距離</strong>。</li>\n</ol>\n<h2 id=\"程式碼\"><a href=\"#程式碼\" class=\"headerlink\" title=\"程式碼\"></a>程式碼</h2><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> testCases;</span><br><span class=\"line\">    cin &gt;&gt; testCases;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span>(testCases--) &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> numRelatives;</span><br><span class=\"line\">        cin &gt;&gt; numRelatives;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">addresses</span><span class=\"params\">(numRelatives)</span></span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; numRelatives; i++) &#123;</span><br><span class=\"line\">            cin &gt;&gt; addresses[i];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 排序住址，找到中位數</span></span><br><span class=\"line\">        <span class=\"built_in\">sort</span>(addresses.<span class=\"built_in\">begin</span>(), addresses.<span class=\"built_in\">end</span>());</span><br><span class=\"line\">        <span class=\"type\">int</span> medianAddress = addresses[numRelatives / <span class=\"number\">2</span>];</span><br><span class=\"line\">        <span class=\"type\">int</span> totalDistance = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 計算總距離</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; numRelatives; i++) &#123;</span><br><span class=\"line\">            totalDistance += <span class=\"built_in\">abs</span>(addresses[i] - medianAddress);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 輸出結果</span></span><br><span class=\"line\">        cout &lt;&lt; totalDistance &lt;&lt; endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","cover_type":"img","excerpt":"","more":"<p>題目來源：<a href=\"https://onlinejudge.org/external/100/10041.pdf\">UVA 10041 - Vito’s Family</a></p>\n<h2 id=\"題目描述\"><a href=\"#題目描述\" class=\"headerlink\" title=\"題目描述\"></a>題目描述</h2><p>Vito 的家族住在同一條街上，但每個人的住址可能不同。Vito 想找到一個住址，使得該住址到家族成員所有住址的總距離最小。給定每位家族成員的住址，找出這個最佳的住址，並計算最小總距離。</p>\n<h2 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h2><p>本題的核心在於如何選擇一個最佳住址，使得所有成員到該住址的總距離最小。最佳的住址是所有家族成員住址的中位數，因為中位數在統計學中能最小化絕對差距的總和。</p>\n<h3 id=\"步驟：\"><a href=\"#步驟：\" class=\"headerlink\" title=\"步驟：\"></a>步驟：</h3><ol>\n<li><strong>輸入測試案例數量</strong>。</li>\n<li><strong>輸入家族成員數量與其住址</strong>。</li>\n<li><strong>對住址進行排序，找出中位數作為最佳住址</strong>。</li>\n<li><strong>計算每個住址與中位數之間的距離總和</strong>。</li>\n<li><strong>輸出最小總距離</strong>。</li>\n</ol>\n<h2 id=\"程式碼\"><a href=\"#程式碼\" class=\"headerlink\" title=\"程式碼\"></a>程式碼</h2><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> testCases;</span><br><span class=\"line\">    cin &gt;&gt; testCases;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span>(testCases--) &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> numRelatives;</span><br><span class=\"line\">        cin &gt;&gt; numRelatives;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">addresses</span><span class=\"params\">(numRelatives)</span></span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; numRelatives; i++) &#123;</span><br><span class=\"line\">            cin &gt;&gt; addresses[i];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 排序住址，找到中位數</span></span><br><span class=\"line\">        <span class=\"built_in\">sort</span>(addresses.<span class=\"built_in\">begin</span>(), addresses.<span class=\"built_in\">end</span>());</span><br><span class=\"line\">        <span class=\"type\">int</span> medianAddress = addresses[numRelatives / <span class=\"number\">2</span>];</span><br><span class=\"line\">        <span class=\"type\">int</span> totalDistance = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 計算總距離</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; numRelatives; i++) &#123;</span><br><span class=\"line\">            totalDistance += <span class=\"built_in\">abs</span>(addresses[i] - medianAddress);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 輸出結果</span></span><br><span class=\"line\">        cout &lt;&lt; totalDistance &lt;&lt; endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"layout":"post","title":"UVA 10420 - List of Conquests","date":"2024-09-17T06:39:31.000Z","top_img":"/images/CPE_sub.webp","cover":"/images/CPE.webp","_content":"\n## 題目描述\n\n題要求我們統計來自不同國家的名字出現次數。輸入包括多行，每行以一個國家名稱開頭，後接一個人名。我們只需要統計每個國家出現的次數，而不需要考慮人名。\n\n- 題目來源：[UVA 10420 - List of Conquests](https://onlinejudge.org/external/104/10420.pdf)\n\n## 解題思路\n\n1. **輸入處理**：每行的輸入以國家名稱開頭，後面跟著人名。我們只需要提取每行中的國家名稱並忽略後面的內容。\n2. **統計國家出現次數**：我們可以使用 `map` 來儲存國家名稱和對應的出現次數。\n3. **排序與輸出**：`map` 會自動根據國家名稱字典序進行排序，因此輸出時會直接按順序列出。\n\n### 步驟：\n\n1. **讀取輸入行數**：首先讀取輸入的總行數。\n2. **讀取每行的國家名稱**：使用 `getline()` 函數讀取整行，並透過 `find()` 函數找到第一個空格來提取國家名稱。\n3. **統計國家出現次數**：利用 `map` 來儲存每個國家的出現次數。\n4. **輸出結果**：遍歷 `map`，輸出國家名稱及其出現次數。\n\n## 程式碼\n\n```cpp\n#include <iostream>\n#include <map>\n#include <string>\nusing namespace std;\n\nint main()\n{\n    int number;\n    string country;\n    cin >> number;\n    cin.ignore();\n\n    map<string, int> country_count;\n\n    while(number--) {\n        string line;\n        getline(cin, line);\n        int pos = line.find(' ');\n        country = line.substr(0, pos);\n        country_count[country]++;\n    }\n\n    // 輸出結果\n    for(const pair<string, int>& entry : country_count) {\n        cout << entry.first << \" \" << entry.second << endl;\n    }\n\n    return 0;\n}\n```\n","source":"_posts/UVA-10420-List-of-Conquests.md","raw":"---\nlayout: post\ntitle: UVA 10420 - List of Conquests\ndate: 2024-09-17 14:39:31\ntags: [CPE]\ncategories: [程式解題, CPE49題]\ntop_img: /images/CPE_sub.webp\ncover: /images/CPE.webp\n---\n\n## 題目描述\n\n題要求我們統計來自不同國家的名字出現次數。輸入包括多行，每行以一個國家名稱開頭，後接一個人名。我們只需要統計每個國家出現的次數，而不需要考慮人名。\n\n- 題目來源：[UVA 10420 - List of Conquests](https://onlinejudge.org/external/104/10420.pdf)\n\n## 解題思路\n\n1. **輸入處理**：每行的輸入以國家名稱開頭，後面跟著人名。我們只需要提取每行中的國家名稱並忽略後面的內容。\n2. **統計國家出現次數**：我們可以使用 `map` 來儲存國家名稱和對應的出現次數。\n3. **排序與輸出**：`map` 會自動根據國家名稱字典序進行排序，因此輸出時會直接按順序列出。\n\n### 步驟：\n\n1. **讀取輸入行數**：首先讀取輸入的總行數。\n2. **讀取每行的國家名稱**：使用 `getline()` 函數讀取整行，並透過 `find()` 函數找到第一個空格來提取國家名稱。\n3. **統計國家出現次數**：利用 `map` 來儲存每個國家的出現次數。\n4. **輸出結果**：遍歷 `map`，輸出國家名稱及其出現次數。\n\n## 程式碼\n\n```cpp\n#include <iostream>\n#include <map>\n#include <string>\nusing namespace std;\n\nint main()\n{\n    int number;\n    string country;\n    cin >> number;\n    cin.ignore();\n\n    map<string, int> country_count;\n\n    while(number--) {\n        string line;\n        getline(cin, line);\n        int pos = line.find(' ');\n        country = line.substr(0, pos);\n        country_count[country]++;\n    }\n\n    // 輸出結果\n    for(const pair<string, int>& entry : country_count) {\n        cout << entry.first << \" \" << entry.second << endl;\n    }\n\n    return 0;\n}\n```\n","slug":"UVA-10420-List-of-Conquests","published":1,"updated":"2024-09-17T13:41:15.386Z","comments":1,"photos":[],"_id":"cm1eerjei000jg6exft5cfrc5","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h2 id=\"題目描述\"><a href=\"#題目描述\" class=\"headerlink\" title=\"題目描述\"></a>題目描述</h2><p>題要求我們統計來自不同國家的名字出現次數。輸入包括多行，每行以一個國家名稱開頭，後接一個人名。我們只需要統計每個國家出現的次數，而不需要考慮人名。</p>\n<ul>\n<li>題目來源：<a href=\"https://onlinejudge.org/external/104/10420.pdf\">UVA 10420 - List of Conquests</a></li>\n</ul>\n<h2 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h2><ol>\n<li><strong>輸入處理</strong>：每行的輸入以國家名稱開頭，後面跟著人名。我們只需要提取每行中的國家名稱並忽略後面的內容。</li>\n<li><strong>統計國家出現次數</strong>：我們可以使用 <code>map</code> 來儲存國家名稱和對應的出現次數。</li>\n<li><strong>排序與輸出</strong>：<code>map</code> 會自動根據國家名稱字典序進行排序，因此輸出時會直接按順序列出。</li>\n</ol>\n<h3 id=\"步驟：\"><a href=\"#步驟：\" class=\"headerlink\" title=\"步驟：\"></a>步驟：</h3><ol>\n<li><strong>讀取輸入行數</strong>：首先讀取輸入的總行數。</li>\n<li><strong>讀取每行的國家名稱</strong>：使用 <code>getline()</code> 函數讀取整行，並透過 <code>find()</code> 函數找到第一個空格來提取國家名稱。</li>\n<li><strong>統計國家出現次數</strong>：利用 <code>map</code> 來儲存每個國家的出現次數。</li>\n<li><strong>輸出結果</strong>：遍歷 <code>map</code>，輸出國家名稱及其出現次數。</li>\n</ol>\n<h2 id=\"程式碼\"><a href=\"#程式碼\" class=\"headerlink\" title=\"程式碼\"></a>程式碼</h2><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;map&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;string&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> number;</span><br><span class=\"line\">    string country;</span><br><span class=\"line\">    cin &gt;&gt; number;</span><br><span class=\"line\">    cin.<span class=\"built_in\">ignore</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    map&lt;string, <span class=\"type\">int</span>&gt; country_count;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span>(number--) &#123;</span><br><span class=\"line\">        string line;</span><br><span class=\"line\">        <span class=\"built_in\">getline</span>(cin, line);</span><br><span class=\"line\">        <span class=\"type\">int</span> pos = line.<span class=\"built_in\">find</span>(<span class=\"string\">&#x27; &#x27;</span>);</span><br><span class=\"line\">        country = line.<span class=\"built_in\">substr</span>(<span class=\"number\">0</span>, pos);</span><br><span class=\"line\">        country_count[country]++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 輸出結果</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">const</span> pair&lt;string, <span class=\"type\">int</span>&gt;&amp; entry : country_count) &#123;</span><br><span class=\"line\">        cout &lt;&lt; entry.first &lt;&lt; <span class=\"string\">&quot; &quot;</span> &lt;&lt; entry.second &lt;&lt; endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","cover_type":"img","excerpt":"","more":"<h2 id=\"題目描述\"><a href=\"#題目描述\" class=\"headerlink\" title=\"題目描述\"></a>題目描述</h2><p>題要求我們統計來自不同國家的名字出現次數。輸入包括多行，每行以一個國家名稱開頭，後接一個人名。我們只需要統計每個國家出現的次數，而不需要考慮人名。</p>\n<ul>\n<li>題目來源：<a href=\"https://onlinejudge.org/external/104/10420.pdf\">UVA 10420 - List of Conquests</a></li>\n</ul>\n<h2 id=\"解題思路\"><a href=\"#解題思路\" class=\"headerlink\" title=\"解題思路\"></a>解題思路</h2><ol>\n<li><strong>輸入處理</strong>：每行的輸入以國家名稱開頭，後面跟著人名。我們只需要提取每行中的國家名稱並忽略後面的內容。</li>\n<li><strong>統計國家出現次數</strong>：我們可以使用 <code>map</code> 來儲存國家名稱和對應的出現次數。</li>\n<li><strong>排序與輸出</strong>：<code>map</code> 會自動根據國家名稱字典序進行排序，因此輸出時會直接按順序列出。</li>\n</ol>\n<h3 id=\"步驟：\"><a href=\"#步驟：\" class=\"headerlink\" title=\"步驟：\"></a>步驟：</h3><ol>\n<li><strong>讀取輸入行數</strong>：首先讀取輸入的總行數。</li>\n<li><strong>讀取每行的國家名稱</strong>：使用 <code>getline()</code> 函數讀取整行，並透過 <code>find()</code> 函數找到第一個空格來提取國家名稱。</li>\n<li><strong>統計國家出現次數</strong>：利用 <code>map</code> 來儲存每個國家的出現次數。</li>\n<li><strong>輸出結果</strong>：遍歷 <code>map</code>，輸出國家名稱及其出現次數。</li>\n</ol>\n<h2 id=\"程式碼\"><a href=\"#程式碼\" class=\"headerlink\" title=\"程式碼\"></a>程式碼</h2><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;map&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;string&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> number;</span><br><span class=\"line\">    string country;</span><br><span class=\"line\">    cin &gt;&gt; number;</span><br><span class=\"line\">    cin.<span class=\"built_in\">ignore</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    map&lt;string, <span class=\"type\">int</span>&gt; country_count;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span>(number--) &#123;</span><br><span class=\"line\">        string line;</span><br><span class=\"line\">        <span class=\"built_in\">getline</span>(cin, line);</span><br><span class=\"line\">        <span class=\"type\">int</span> pos = line.<span class=\"built_in\">find</span>(<span class=\"string\">&#x27; &#x27;</span>);</span><br><span class=\"line\">        country = line.<span class=\"built_in\">substr</span>(<span class=\"number\">0</span>, pos);</span><br><span class=\"line\">        country_count[country]++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 輸出結果</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">const</span> pair&lt;string, <span class=\"type\">int</span>&gt;&amp; entry : country_count) &#123;</span><br><span class=\"line\">        cout &lt;&lt; entry.first &lt;&lt; <span class=\"string\">&quot; &quot;</span> &lt;&lt; entry.second &lt;&lt; endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"layout":"post","title":"本地專案推送至Bitbucket遠端存放庫","date":"2024-09-22T04:47:29.000Z","top_img":"https://www.interviewbit.com/blog/wp-content/uploads/2021/10/What-is-Bitbucket-550x413.jpeg","cover":"https://www.interviewbit.com/blog/wp-content/uploads/2021/10/What-is-Bitbucket-550x413.jpeg","_content":"\n我的工作常常會使用到 bitbucket 遠端存放庫，前幾次使用不是很熟悉，因此我將步驟記錄下來讓我對 git 語法更熟悉：\n\n````markdown\n# 將本地專案推送到 Bitbucket 的教學文案\n\n本文介紹了如何將本地的 Git 專案推送到 Bitbucket，包括每個步驟執行指令後的顯示內容。\n\n---\n\n## 步驟 1: 初始化本地 Git 儲存庫\n\n如果尚未初始化 Git 儲存庫，首先進入專案目錄並執行以下命令：\n\n```bash\ngit init\n```\n````\n\n### 顯示內容\n\n```bash\nInitialized empty Git repository in /Users/zhuang/iavogue/.git/\n```\n\n---\n\n## 步驟 2: 新增 Bitbucket 遠端倉庫\n\n將 Bitbucket 的儲存庫 URL 新增到本地專案的 Git 遠端倉庫列表中：\n\n```bash\ngit remote add origin git@bitbucket.org:iambigd/wp-iavogue.git\n```\n\n檢查遠端倉庫是否正確添加：\n\n```bash\nbash\ngit remote -v\n```\n\n### 顯示內容\n\n```bash\norigin  git@bitbucket.org:iambigd/wp-iavogue.git (fetch)\norigin  git@bitbucket.org:iambigd/wp-iavogue.git (push)\n```\n\n---\n\n## 步驟 3: 添加專案檔案到暫存區\n\n將本地專案中的檔案添加到 Git 暫存區中，準備提交變更：\n\n```bash\ngit add .\n```\n\n檢查添加的檔案：\n\n```bash\ngit status\n```\n\n### 顯示內容\n\n```bash\nOn branch main\nYour branch is up-to-date with 'origin/main'.\nChanges to be committed:\n  (use \"git reset HEAD <file>...\" to unstage)\n\n\tnew file:   index.html\n\tnew file:   styles.css\n```\n\n---\n\n## 步驟 4: 提交變更\n\n提交這些檔案並附上提交訊息：\n\n```bash\ngit commit -m \"第一次提交\"\n```\n\n### 顯示內容\n\n```bash\n[main (root-commit) fd4c3c0] 第一次提交\n 2 files changed, 190 insertions(+)\n create mode 100644 index.html\n create mode 100644 styles.css\n```\n\n---\n\n## 步驟 5: 推送到遠端 Bitbucket 儲存庫\n\n嘗試將本地專案推送到遠端儲存庫：\n\n```bash\ngit push -u origin main\n```\n\n### 顯示內容（成功時）\n\n```bash\n枚舉物件: 72, 完成.\n物件計數中: 100% (72/72), 完成.\n使用 8 個執行緒進行壓縮\n壓縮物件中: 100% (66/66), 完成.\n寫入物件中: 100% (71/71), 1.70 MiB | 27.14 MiB/s, 完成.\n總共 71 (差異 0)，復用 0 (差異 0)，重用包 0 (總共 0)\nTo bitbucket.org:iambigd/wp-iavogue.git\n   145a286..9a1623a  main -> main\nBranch 'main' set up to track remote branch 'main' from 'origin'.\n```\n\n---\n\n## 常見問題：推送被拒絕 (non-fast-forward)\n\n### 顯示內容\n\n```bash\n! [rejected]        main -> main (non-fast-forward)\n錯誤: 推送一些引用到 'bitbucket.org:iambigd/wp-iavogue.git' 失敗\n提示： 更新被拒絕，因為您目前分支的最新提交落後於其對應的遠端分支。\n```\n\n### 解決方案\n\n拉取遠端的變更並重新推送：\n\n```bash\ngit pull origin main --rebase\ngit push origin main\n```\n\n### 顯示內容\n\n```bash\n來自 bitbucket.org:iambigd/wp-iavogue\n * branch            main       -> FETCH_HEAD\n成功重定基底並更新 refs/heads/main。\n\n枚舉物件: 72, 完成.\n物件計數中: 100% (72/72), 完成.\n使用 8 個執行緒進行壓縮\n壓縮物件中: 100% (66/66), 完成.\n寫入物件中: 100% (71/71), 1.70 MiB | 27.14 MiB/s, 完成.\n總共 71 (差異 0)，復用 0 (差異 0)，重用包 0 (總共 0)\nTo bitbucket.org:iambigd/wp-iavogue.git\n   145a286..9a1623a  main -> main\n```\n\n---\n\n## 強制推送（如需要）\n\n如果你不在意遠端歷史，或者希望覆蓋遠端的變更，你可以使用 `--force` 強制推送：\n\n```bash\ngit push -f origin main\n```\n\n---\n","source":"_posts/本地專案推送至Bitbucket遠端存放庫.md","raw":"---\nlayout: post\ntitle: 本地專案推送至Bitbucket遠端存放庫\ndate: 2024-09-22 12:47:29\ntags: [Bitbucket]\ncategories: [遠端存放庫, Bitbucket]\ntop_img: https://www.interviewbit.com/blog/wp-content/uploads/2021/10/What-is-Bitbucket-550x413.jpeg\ncover: https://www.interviewbit.com/blog/wp-content/uploads/2021/10/What-is-Bitbucket-550x413.jpeg\n---\n\n我的工作常常會使用到 bitbucket 遠端存放庫，前幾次使用不是很熟悉，因此我將步驟記錄下來讓我對 git 語法更熟悉：\n\n````markdown\n# 將本地專案推送到 Bitbucket 的教學文案\n\n本文介紹了如何將本地的 Git 專案推送到 Bitbucket，包括每個步驟執行指令後的顯示內容。\n\n---\n\n## 步驟 1: 初始化本地 Git 儲存庫\n\n如果尚未初始化 Git 儲存庫，首先進入專案目錄並執行以下命令：\n\n```bash\ngit init\n```\n````\n\n### 顯示內容\n\n```bash\nInitialized empty Git repository in /Users/zhuang/iavogue/.git/\n```\n\n---\n\n## 步驟 2: 新增 Bitbucket 遠端倉庫\n\n將 Bitbucket 的儲存庫 URL 新增到本地專案的 Git 遠端倉庫列表中：\n\n```bash\ngit remote add origin git@bitbucket.org:iambigd/wp-iavogue.git\n```\n\n檢查遠端倉庫是否正確添加：\n\n```bash\nbash\ngit remote -v\n```\n\n### 顯示內容\n\n```bash\norigin  git@bitbucket.org:iambigd/wp-iavogue.git (fetch)\norigin  git@bitbucket.org:iambigd/wp-iavogue.git (push)\n```\n\n---\n\n## 步驟 3: 添加專案檔案到暫存區\n\n將本地專案中的檔案添加到 Git 暫存區中，準備提交變更：\n\n```bash\ngit add .\n```\n\n檢查添加的檔案：\n\n```bash\ngit status\n```\n\n### 顯示內容\n\n```bash\nOn branch main\nYour branch is up-to-date with 'origin/main'.\nChanges to be committed:\n  (use \"git reset HEAD <file>...\" to unstage)\n\n\tnew file:   index.html\n\tnew file:   styles.css\n```\n\n---\n\n## 步驟 4: 提交變更\n\n提交這些檔案並附上提交訊息：\n\n```bash\ngit commit -m \"第一次提交\"\n```\n\n### 顯示內容\n\n```bash\n[main (root-commit) fd4c3c0] 第一次提交\n 2 files changed, 190 insertions(+)\n create mode 100644 index.html\n create mode 100644 styles.css\n```\n\n---\n\n## 步驟 5: 推送到遠端 Bitbucket 儲存庫\n\n嘗試將本地專案推送到遠端儲存庫：\n\n```bash\ngit push -u origin main\n```\n\n### 顯示內容（成功時）\n\n```bash\n枚舉物件: 72, 完成.\n物件計數中: 100% (72/72), 完成.\n使用 8 個執行緒進行壓縮\n壓縮物件中: 100% (66/66), 完成.\n寫入物件中: 100% (71/71), 1.70 MiB | 27.14 MiB/s, 完成.\n總共 71 (差異 0)，復用 0 (差異 0)，重用包 0 (總共 0)\nTo bitbucket.org:iambigd/wp-iavogue.git\n   145a286..9a1623a  main -> main\nBranch 'main' set up to track remote branch 'main' from 'origin'.\n```\n\n---\n\n## 常見問題：推送被拒絕 (non-fast-forward)\n\n### 顯示內容\n\n```bash\n! [rejected]        main -> main (non-fast-forward)\n錯誤: 推送一些引用到 'bitbucket.org:iambigd/wp-iavogue.git' 失敗\n提示： 更新被拒絕，因為您目前分支的最新提交落後於其對應的遠端分支。\n```\n\n### 解決方案\n\n拉取遠端的變更並重新推送：\n\n```bash\ngit pull origin main --rebase\ngit push origin main\n```\n\n### 顯示內容\n\n```bash\n來自 bitbucket.org:iambigd/wp-iavogue\n * branch            main       -> FETCH_HEAD\n成功重定基底並更新 refs/heads/main。\n\n枚舉物件: 72, 完成.\n物件計數中: 100% (72/72), 完成.\n使用 8 個執行緒進行壓縮\n壓縮物件中: 100% (66/66), 完成.\n寫入物件中: 100% (71/71), 1.70 MiB | 27.14 MiB/s, 完成.\n總共 71 (差異 0)，復用 0 (差異 0)，重用包 0 (總共 0)\nTo bitbucket.org:iambigd/wp-iavogue.git\n   145a286..9a1623a  main -> main\n```\n\n---\n\n## 強制推送（如需要）\n\n如果你不在意遠端歷史，或者希望覆蓋遠端的變更，你可以使用 `--force` 強制推送：\n\n```bash\ngit push -f origin main\n```\n\n---\n","slug":"本地專案推送至Bitbucket遠端存放庫","published":1,"updated":"2024-09-23T02:40:57.869Z","comments":1,"photos":[],"_id":"cm1eerjei000kg6ex7znmfqd2","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>我的工作常常會使用到 bitbucket 遠端存放庫，前幾次使用不是很熟悉，因此我將步驟記錄下來讓我對 git 語法更熟悉：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\"># 將本地專案推送到 Bitbucket 的教學文案</span></span><br><span class=\"line\"></span><br><span class=\"line\">本文介紹了如何將本地的 Git 專案推送到 Bitbucket，包括每個步驟執行指令後的顯示內容。</span><br><span class=\"line\"></span><br><span class=\"line\">---</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">## 步驟 1: 初始化本地 Git 儲存庫</span></span><br><span class=\"line\"></span><br><span class=\"line\">如果尚未初始化 Git 儲存庫，首先進入專案目錄並執行以下命令：</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"code\">```bash</span></span><br><span class=\"line\"><span class=\"code\">git init</span></span><br><span class=\"line\"><span class=\"code\">```</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"顯示內容\"><a href=\"#顯示內容\" class=\"headerlink\" title=\"顯示內容\"></a>顯示內容</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Initialized empty Git repository <span class=\"keyword\">in</span> /Users/zhuang/iavogue/.git/</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"步驟-2-新增-Bitbucket-遠端倉庫\"><a href=\"#步驟-2-新增-Bitbucket-遠端倉庫\" class=\"headerlink\" title=\"步驟 2: 新增 Bitbucket 遠端倉庫\"></a>步驟 2: 新增 Bitbucket 遠端倉庫</h2><p>將 Bitbucket 的儲存庫 URL 新增到本地專案的 Git 遠端倉庫列表中：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote add origin git@bitbucket.org:iambigd/wp-iavogue.git</span><br></pre></td></tr></table></figure>\n\n<p>檢查遠端倉庫是否正確添加：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bash</span><br><span class=\"line\">git remote -v</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"顯示內容-1\"><a href=\"#顯示內容-1\" class=\"headerlink\" title=\"顯示內容\"></a>顯示內容</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">origin  git@bitbucket.org:iambigd/wp-iavogue.git (fetch)</span><br><span class=\"line\">origin  git@bitbucket.org:iambigd/wp-iavogue.git (push)</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"步驟-3-添加專案檔案到暫存區\"><a href=\"#步驟-3-添加專案檔案到暫存區\" class=\"headerlink\" title=\"步驟 3: 添加專案檔案到暫存區\"></a>步驟 3: 添加專案檔案到暫存區</h2><p>將本地專案中的檔案添加到 Git 暫存區中，準備提交變更：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add .</span><br></pre></td></tr></table></figure>\n\n<p>檢查添加的檔案：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git status</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"顯示內容-2\"><a href=\"#顯示內容-2\" class=\"headerlink\" title=\"顯示內容\"></a>顯示內容</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">On branch main</span><br><span class=\"line\">Your branch is up-to-date with <span class=\"string\">&#x27;origin/main&#x27;</span>.</span><br><span class=\"line\">Changes to be committed:</span><br><span class=\"line\">  (use <span class=\"string\">&quot;git reset HEAD &lt;file&gt;...&quot;</span> to unstage)</span><br><span class=\"line\"></span><br><span class=\"line\">\tnew file:   index.html</span><br><span class=\"line\">\tnew file:   styles.css</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"步驟-4-提交變更\"><a href=\"#步驟-4-提交變更\" class=\"headerlink\" title=\"步驟 4: 提交變更\"></a>步驟 4: 提交變更</h2><p>提交這些檔案並附上提交訊息：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git commit -m <span class=\"string\">&quot;第一次提交&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"顯示內容-3\"><a href=\"#顯示內容-3\" class=\"headerlink\" title=\"顯示內容\"></a>顯示內容</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[main (root-commit) fd4c3c0] 第一次提交</span><br><span class=\"line\"> 2 files changed, 190 insertions(+)</span><br><span class=\"line\"> create mode 100644 index.html</span><br><span class=\"line\"> create mode 100644 styles.css</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"步驟-5-推送到遠端-Bitbucket-儲存庫\"><a href=\"#步驟-5-推送到遠端-Bitbucket-儲存庫\" class=\"headerlink\" title=\"步驟 5: 推送到遠端 Bitbucket 儲存庫\"></a>步驟 5: 推送到遠端 Bitbucket 儲存庫</h2><p>嘗試將本地專案推送到遠端儲存庫：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push -u origin main</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"顯示內容（成功時）\"><a href=\"#顯示內容（成功時）\" class=\"headerlink\" title=\"顯示內容（成功時）\"></a>顯示內容（成功時）</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">枚舉物件: 72, 完成.</span><br><span class=\"line\">物件計數中: 100% (72/72), 完成.</span><br><span class=\"line\">使用 8 個執行緒進行壓縮</span><br><span class=\"line\">壓縮物件中: 100% (66/66), 完成.</span><br><span class=\"line\">寫入物件中: 100% (71/71), 1.70 MiB | 27.14 MiB/s, 完成.</span><br><span class=\"line\">總共 71 (差異 0)，復用 0 (差異 0)，重用包 0 (總共 0)</span><br><span class=\"line\">To bitbucket.org:iambigd/wp-iavogue.git</span><br><span class=\"line\">   145a286..9a1623a  main -&gt; main</span><br><span class=\"line\">Branch <span class=\"string\">&#x27;main&#x27;</span> <span class=\"built_in\">set</span> up to track remote branch <span class=\"string\">&#x27;main&#x27;</span> from <span class=\"string\">&#x27;origin&#x27;</span>.</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"常見問題：推送被拒絕-non-fast-forward\"><a href=\"#常見問題：推送被拒絕-non-fast-forward\" class=\"headerlink\" title=\"常見問題：推送被拒絕 (non-fast-forward)\"></a>常見問題：推送被拒絕 (non-fast-forward)</h2><h3 id=\"顯示內容-4\"><a href=\"#顯示內容-4\" class=\"headerlink\" title=\"顯示內容\"></a>顯示內容</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">! [rejected]        main -&gt; main (non-fast-forward)</span><br><span class=\"line\">錯誤: 推送一些引用到 <span class=\"string\">&#x27;bitbucket.org:iambigd/wp-iavogue.git&#x27;</span> 失敗</span><br><span class=\"line\">提示： 更新被拒絕，因為您目前分支的最新提交落後於其對應的遠端分支。</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"解決方案\"><a href=\"#解決方案\" class=\"headerlink\" title=\"解決方案\"></a>解決方案</h3><p>拉取遠端的變更並重新推送：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git pull origin main --rebase</span><br><span class=\"line\">git push origin main</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"顯示內容-5\"><a href=\"#顯示內容-5\" class=\"headerlink\" title=\"顯示內容\"></a>顯示內容</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">來自 bitbucket.org:iambigd/wp-iavogue</span><br><span class=\"line\"> * branch            main       -&gt; FETCH_HEAD</span><br><span class=\"line\">成功重定基底並更新 refs/heads/main。</span><br><span class=\"line\"></span><br><span class=\"line\">枚舉物件: 72, 完成.</span><br><span class=\"line\">物件計數中: 100% (72/72), 完成.</span><br><span class=\"line\">使用 8 個執行緒進行壓縮</span><br><span class=\"line\">壓縮物件中: 100% (66/66), 完成.</span><br><span class=\"line\">寫入物件中: 100% (71/71), 1.70 MiB | 27.14 MiB/s, 完成.</span><br><span class=\"line\">總共 71 (差異 0)，復用 0 (差異 0)，重用包 0 (總共 0)</span><br><span class=\"line\">To bitbucket.org:iambigd/wp-iavogue.git</span><br><span class=\"line\">   145a286..9a1623a  main -&gt; main</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"強制推送（如需要）\"><a href=\"#強制推送（如需要）\" class=\"headerlink\" title=\"強制推送（如需要）\"></a>強制推送（如需要）</h2><p>如果你不在意遠端歷史，或者希望覆蓋遠端的變更，你可以使用 <code>--force</code> 強制推送：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push -f origin main</span><br></pre></td></tr></table></figure>\n\n<hr>\n","cover_type":"img","excerpt":"","more":"<p>我的工作常常會使用到 bitbucket 遠端存放庫，前幾次使用不是很熟悉，因此我將步驟記錄下來讓我對 git 語法更熟悉：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\"># 將本地專案推送到 Bitbucket 的教學文案</span></span><br><span class=\"line\"></span><br><span class=\"line\">本文介紹了如何將本地的 Git 專案推送到 Bitbucket，包括每個步驟執行指令後的顯示內容。</span><br><span class=\"line\"></span><br><span class=\"line\">---</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">## 步驟 1: 初始化本地 Git 儲存庫</span></span><br><span class=\"line\"></span><br><span class=\"line\">如果尚未初始化 Git 儲存庫，首先進入專案目錄並執行以下命令：</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"code\">```bash</span></span><br><span class=\"line\"><span class=\"code\">git init</span></span><br><span class=\"line\"><span class=\"code\">```</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"顯示內容\"><a href=\"#顯示內容\" class=\"headerlink\" title=\"顯示內容\"></a>顯示內容</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Initialized empty Git repository <span class=\"keyword\">in</span> /Users/zhuang/iavogue/.git/</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"步驟-2-新增-Bitbucket-遠端倉庫\"><a href=\"#步驟-2-新增-Bitbucket-遠端倉庫\" class=\"headerlink\" title=\"步驟 2: 新增 Bitbucket 遠端倉庫\"></a>步驟 2: 新增 Bitbucket 遠端倉庫</h2><p>將 Bitbucket 的儲存庫 URL 新增到本地專案的 Git 遠端倉庫列表中：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote add origin git@bitbucket.org:iambigd/wp-iavogue.git</span><br></pre></td></tr></table></figure>\n\n<p>檢查遠端倉庫是否正確添加：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bash</span><br><span class=\"line\">git remote -v</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"顯示內容-1\"><a href=\"#顯示內容-1\" class=\"headerlink\" title=\"顯示內容\"></a>顯示內容</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">origin  git@bitbucket.org:iambigd/wp-iavogue.git (fetch)</span><br><span class=\"line\">origin  git@bitbucket.org:iambigd/wp-iavogue.git (push)</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"步驟-3-添加專案檔案到暫存區\"><a href=\"#步驟-3-添加專案檔案到暫存區\" class=\"headerlink\" title=\"步驟 3: 添加專案檔案到暫存區\"></a>步驟 3: 添加專案檔案到暫存區</h2><p>將本地專案中的檔案添加到 Git 暫存區中，準備提交變更：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add .</span><br></pre></td></tr></table></figure>\n\n<p>檢查添加的檔案：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git status</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"顯示內容-2\"><a href=\"#顯示內容-2\" class=\"headerlink\" title=\"顯示內容\"></a>顯示內容</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">On branch main</span><br><span class=\"line\">Your branch is up-to-date with <span class=\"string\">&#x27;origin/main&#x27;</span>.</span><br><span class=\"line\">Changes to be committed:</span><br><span class=\"line\">  (use <span class=\"string\">&quot;git reset HEAD &lt;file&gt;...&quot;</span> to unstage)</span><br><span class=\"line\"></span><br><span class=\"line\">\tnew file:   index.html</span><br><span class=\"line\">\tnew file:   styles.css</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"步驟-4-提交變更\"><a href=\"#步驟-4-提交變更\" class=\"headerlink\" title=\"步驟 4: 提交變更\"></a>步驟 4: 提交變更</h2><p>提交這些檔案並附上提交訊息：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git commit -m <span class=\"string\">&quot;第一次提交&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"顯示內容-3\"><a href=\"#顯示內容-3\" class=\"headerlink\" title=\"顯示內容\"></a>顯示內容</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[main (root-commit) fd4c3c0] 第一次提交</span><br><span class=\"line\"> 2 files changed, 190 insertions(+)</span><br><span class=\"line\"> create mode 100644 index.html</span><br><span class=\"line\"> create mode 100644 styles.css</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"步驟-5-推送到遠端-Bitbucket-儲存庫\"><a href=\"#步驟-5-推送到遠端-Bitbucket-儲存庫\" class=\"headerlink\" title=\"步驟 5: 推送到遠端 Bitbucket 儲存庫\"></a>步驟 5: 推送到遠端 Bitbucket 儲存庫</h2><p>嘗試將本地專案推送到遠端儲存庫：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push -u origin main</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"顯示內容（成功時）\"><a href=\"#顯示內容（成功時）\" class=\"headerlink\" title=\"顯示內容（成功時）\"></a>顯示內容（成功時）</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">枚舉物件: 72, 完成.</span><br><span class=\"line\">物件計數中: 100% (72/72), 完成.</span><br><span class=\"line\">使用 8 個執行緒進行壓縮</span><br><span class=\"line\">壓縮物件中: 100% (66/66), 完成.</span><br><span class=\"line\">寫入物件中: 100% (71/71), 1.70 MiB | 27.14 MiB/s, 完成.</span><br><span class=\"line\">總共 71 (差異 0)，復用 0 (差異 0)，重用包 0 (總共 0)</span><br><span class=\"line\">To bitbucket.org:iambigd/wp-iavogue.git</span><br><span class=\"line\">   145a286..9a1623a  main -&gt; main</span><br><span class=\"line\">Branch <span class=\"string\">&#x27;main&#x27;</span> <span class=\"built_in\">set</span> up to track remote branch <span class=\"string\">&#x27;main&#x27;</span> from <span class=\"string\">&#x27;origin&#x27;</span>.</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"常見問題：推送被拒絕-non-fast-forward\"><a href=\"#常見問題：推送被拒絕-non-fast-forward\" class=\"headerlink\" title=\"常見問題：推送被拒絕 (non-fast-forward)\"></a>常見問題：推送被拒絕 (non-fast-forward)</h2><h3 id=\"顯示內容-4\"><a href=\"#顯示內容-4\" class=\"headerlink\" title=\"顯示內容\"></a>顯示內容</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">! [rejected]        main -&gt; main (non-fast-forward)</span><br><span class=\"line\">錯誤: 推送一些引用到 <span class=\"string\">&#x27;bitbucket.org:iambigd/wp-iavogue.git&#x27;</span> 失敗</span><br><span class=\"line\">提示： 更新被拒絕，因為您目前分支的最新提交落後於其對應的遠端分支。</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"解決方案\"><a href=\"#解決方案\" class=\"headerlink\" title=\"解決方案\"></a>解決方案</h3><p>拉取遠端的變更並重新推送：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git pull origin main --rebase</span><br><span class=\"line\">git push origin main</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"顯示內容-5\"><a href=\"#顯示內容-5\" class=\"headerlink\" title=\"顯示內容\"></a>顯示內容</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">來自 bitbucket.org:iambigd/wp-iavogue</span><br><span class=\"line\"> * branch            main       -&gt; FETCH_HEAD</span><br><span class=\"line\">成功重定基底並更新 refs/heads/main。</span><br><span class=\"line\"></span><br><span class=\"line\">枚舉物件: 72, 完成.</span><br><span class=\"line\">物件計數中: 100% (72/72), 完成.</span><br><span class=\"line\">使用 8 個執行緒進行壓縮</span><br><span class=\"line\">壓縮物件中: 100% (66/66), 完成.</span><br><span class=\"line\">寫入物件中: 100% (71/71), 1.70 MiB | 27.14 MiB/s, 完成.</span><br><span class=\"line\">總共 71 (差異 0)，復用 0 (差異 0)，重用包 0 (總共 0)</span><br><span class=\"line\">To bitbucket.org:iambigd/wp-iavogue.git</span><br><span class=\"line\">   145a286..9a1623a  main -&gt; main</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"強制推送（如需要）\"><a href=\"#強制推送（如需要）\" class=\"headerlink\" title=\"強制推送（如需要）\"></a>強制推送（如需要）</h2><p>如果你不在意遠端歷史，或者希望覆蓋遠端的變更，你可以使用 <code>--force</code> 強制推送：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push -f origin main</span><br></pre></td></tr></table></figure>\n\n<hr>\n"},{"layout":"post","title":"Wordpress 動態選單","date":"2024-09-25T16:33:48.000Z","top_img":"https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2Fwordpress%20%E5%8B%95%E6%85%8B%E9%81%B8%E5%96%AE%E6%95%99%E5%AD%B8%2Fdynamic-wp-nav.webp?alt=media&token=b20209da-6039-49f2-8df4-35b3e48be9e4","cover":"https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2Fwordpress%20%E5%8B%95%E6%85%8B%E9%81%B8%E5%96%AE%E6%95%99%E5%AD%B8%2Fdynamic-wp-nav.webp?alt=media&token=b20209da-6039-49f2-8df4-35b3e48be9e4","_content":"\n## 步驟 1：連結對應選單\n\n```php\n$menu_items = wp_get_nav_menu_items('首頁選單');\n```\n\n這段程式碼使用了 `wp_get_nav_menu_items()` 函數，傳入選單的名稱 `'首頁選單'`，該名稱對應的是你在 WordPress 後台中設定的選單名稱。\n\n👇🏻 後台長這樣 👇🏻\n![wordpress-background](https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2Fwordpress%20%E5%8B%95%E6%85%8B%E9%81%B8%E5%96%AE%E6%95%99%E5%AD%B8%2Fwp-back-nav.png?alt=media&token=1bbfaa5c-1e34-4b9c-9683-6f64a99e62c4)\n\n### 範例：\n\n假設你在 WordPress 後台創建了一個選單，並命名為「首頁選單」，該選單中包含以下項目：\n\n1. Home\n2. Services\n   - Web Development\n   - App Development\n3. About Us\n4. Contact\n\n`wp_get_nav_menu_items()` 會返回這些選單項目作為一個物件陣列，每個項目包含：\n\n- `ID`：選單項目的唯一標識符\n- `title`：選單項目的標題（如 \"Home\", \"Services\"）\n- `url`：選單項目的連結\n- `menu_item_parent`：父選單項目的 ID（若是頂層項目則為 0）\n\n## 步驟 2：組織選單層次結構\n\n接下來，你需要將這些選單項目按父子關係組織起來，以便生成一個層次結構清晰的選單。這段程式碼的目的是將選單項目分類為父選單和子選單。\n\n```php\n$tree_menu_items = array();\n\nforeach ($menu_items as $menu_item) {\n    if ($menu_item->menu_item_parent == 0) {\n        // 父選單項目\n        $tree_menu_items[$menu_item->ID] = $menu_item;\n        $tree_menu_items[$menu_item->ID]->children = array(); // 初始化子選單陣列\n    } else {\n        // 子選單項目，添加到父選單項目的 children 陣列中\n        $tree_menu_items[$menu_item->menu_item_parent]->children[] = $menu_item;\n    }\n}\n```\n\n### 範例：\n\n- 假設 \"Services\" 是一個父選單項目，它的 `menu_item_parent` 是 `0`。\n- \"Web Development\" 和 \"App Development\" 是它的子選單項目，它們的 `menu_item_parent` 為 \"Services\" 的 ID。\n\n程式會將這些項目組織為：\n\n- `Home`：無子選單\n- `Services`：\n  - 子選單：`Web Development`, `App Development`\n- `About Us`：無子選單\n- `Contact`：無子選單\n\n## 步驟 3：生成 HTML 選單\n\n這裡的程式碼將已整理好的選單結構動態地生成 HTML。\n\n```php\n<?php if (isset($tree_menu_items)): ?>\n    <?php foreach ($tree_menu_items as $menu_item): ?>\n        <li class=\"menu-item <?php if($hasSubmenu): ?>has-children<?php endif; ?>\">\n            <a id=\"menu-item-<?php echo $menu_item->ID; ?>\" href=\"<?php echo $menu_item->url; ?>\">\n                <?php echo esc_html($menu_item->title); ?>\n                <?php if ($hasSubmenu): ?>\n                    <span class=\"angle-down-wrap\"><i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i></span>\n                <?php endif; ?>\n            </a>\n\n            <?php if ($hasSubmenu): ?>\n                <ul class=\"menu-dropdown-list list-unstyled\">\n                    <?php foreach ($menu_item->children as $child_menu_item): ?>\n                        <li class=\"dropdown-list-item\">\n                            <a id=\"menu-item-<?php echo $child_menu_item->ID; ?>\" href=\"<?php echo $child_menu_item->url; ?>\">\n                                <?php echo esc_html($child_menu_item->title); ?>\n                            </a>\n                        </li>\n                    <?php endforeach; ?>\n                </ul>\n            <?php endif; ?>\n        </li>\n    <?php endforeach; ?>\n<?php endif; ?>\n```\n\n這段程式碼會生成以下的 HTML：\n\n```html\n<ul class=\"menu-box list-unstyled\">\n  <li class=\"menu-item\">\n    <a id=\"menu-item-1\" href=\"/home\">Home</a>\n  </li>\n  <li class=\"menu-item has-children\">\n    <a id=\"menu-item-2\" href=\"/services\"\n      >Services\n      <span class=\"angle-down-wrap\"\n        ><i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i\n      ></span>\n    </a>\n    <ul class=\"menu-dropdown-list list-unstyled\">\n      <li class=\"dropdown-list-item\">\n        <a id=\"menu-item-3\" href=\"/services/web-development\">Web Development</a>\n      </li>\n      <li class=\"dropdown-list-item\">\n        <a id=\"menu-item-4\" href=\"/services/app-development\">App Development</a>\n      </li>\n    </ul>\n  </li>\n  <li class=\"menu-item\">\n    <a id=\"menu-item-5\" href=\"/about-us\">About Us</a>\n  </li>\n  <li class=\"menu-item\">\n    <a id=\"menu-item-6\" href=\"/contact\">Contact</a>\n  </li>\n</ul>\n```\n\n- `menu-item-2` 是 `Services`，因為它有子選單，所以會附加 `has-children` class，並顯示一個下拉圖標（`<span class=\"angle-down-wrap\">`）。\n- 其子選單（`Web Development` 和 `App Development`）被放在一個內嵌的 `<ul class=\"menu-dropdown-list\">` 中。\n\n## 步驟 4：顯示和樣式\n\n這段程式碼最終將選單顯示在 `<header>` 中，並包含基於層次結構的樣式（如子選單的下拉圖標和層次結構的縮排）。\n\n## 補充 wp_get_nav_menu_items() 得到的結構\n\n在 WordPress 中，`wp_get_nav_menu_items()` 函數返回一個包含選單項目（`$menu_items`）的陣列。每個選單項目都是一個物件，包含許多屬性，這些屬性描述了選單中的每個項目。以下是 `$menu_items` 中每個選單項目的內容：\n\n### `$menu_items` 每個項目的結構：\n\n每個選單項目會包含以下常見屬性：\n\n1. **ID** (`$menu_item->ID`)\n   - 每個選單項目的唯一識別符。這個值可以用來區分不同的選單項目。\n2. **title** (`$menu_item->title`)\n   - 選單項目的名稱，這是會顯示在前端的文字。\n3. **url** (`$menu_item->url`)\n   - 選單項目的鏈接地址（例如，指向頁面的 URL）。\n4. **menu_item_parent** (`$menu_item->menu_item_parent`)\n   - 父選單項目的 ID。如果該選單項目是頂層選單，`menu_item_parent` 會是 `0`；如果它是子選單，`menu_item_parent` 會是其父選單項目的 ID。\n5. **post_type** (`$menu_item->post_type`)\n   - 指定該選單項目的類型，一般為 `nav_menu_item`。\n6. **object** (`$menu_item->object`)\n   - 選單項目的目標對象類型，例如 `page` 或 `category`。這表示選單鏈接指向的是一個頁面還是分類目錄等。\n7. **object_id** (`$menu_item->object_id`)\n   - 目標對象的 ID，例如，如果該選單項目連接到一個頁面，這裡會顯示該頁面的 ID。\n8. **type** (`$menu_item->type`)\n   - 選單項目的類型。通常為 `post_type` 或 `taxonomy`，指的是該選單項目連結到的對象是否是一個文章類型或分類法。\n9. **classes** (`$menu_item->classes`)\n   - 選單項目所包含的 CSS class。這是一個陣列，通常可用於為選單項目添加自定義樣式。\n10. **target** (`$menu_item->target`)\n    - 指定鏈接是否在新窗口或當前窗口打開，這與 HTML 的 `target=\"_blank\"` 類似。\n11. **attr_title** (`$menu_item->attr_title`)\n    - 為選單項目提供的 `title` 屬性，用來顯示在鼠標懸停在鏈接上時的提示文字。\n12. **description** (`$menu_item->description`)\n    - 選單項目的描述，通常不會顯示在前端，但在一些主題中可能會用於輔助說明。\n13. **xfn** (`$menu_item->xfn`)\n    - 用於指定鏈接關係（XFN，\"XHTML Friends Network\"），例如指定鏈接到該頁面的使用者關係（朋友、合作夥伴等）。\n14. **db_id** (`$menu_item->db_id`)\n    - 選單項目的資料庫 ID，與 `ID` 相同，用來唯一識別該選單項目。\n15. **menu_order** (`$menu_item->menu_order`)\n    - 選單項目的順序，用來指定該項目在選單中的顯示順序。\n\n### 範例：`$menu_items` 的內容範例\n\n假設有一個選單名為「首頁選單」，其中包含以下項目：\n\n1. Home（頂層選單）\n2. Services（頂層選單）\n   - Web Development（子選單）\n   - App Development（子選單）\n3. About Us（頂層選單）\n\n那麼，`$menu_items` 中的內容可能類似以下結構：\n\n```php\nArray (\n    [0] => stdClass Object (\n        [ID] => 1\n        [title] => Home\n        [url] => http://example.com/home\n        [menu_item_parent] => 0\n        [post_type] => nav_menu_item\n        [object] => page\n        [object_id] => 5\n        [type] => post_type\n        [classes] => Array ( )\n        [target] =>\n        [attr_title] =>\n        [description] =>\n        [xfn] =>\n        [db_id] => 1\n        [menu_order] => 1\n    )\n    [1] => stdClass Object (\n        [ID] => 2\n        [title] => Services\n        [url] => http://example.com/services\n        [menu_item_parent] => 0\n        [post_type] => nav_menu_item\n        [object] => page\n        [object_id] => 6\n        [type] => post_type\n        [classes] => Array ( )\n        [target] =>\n        [attr_title] =>\n        [description] =>\n        [xfn] =>\n        [db_id] => 2\n        [menu_order] => 2\n    )\n    [2] => stdClass Object (\n        [ID] => 3\n        [title] => Web Development\n        [url] => http://example.com/web-development\n        [menu_item_parent] => 2\n        [post_type] => nav_menu_item\n        [object] => page\n        [object_id] => 7\n        [type] => post_type\n        [classes] => Array ( )\n        [target] =>\n        [attr_title] =>\n        [description] =>\n        [xfn] =>\n        [db_id] => 3\n        [menu_order] => 3\n    )\n    [3] => stdClass Object (\n        [ID] => 4\n        [title] => App Development\n        [url] => http://example.com/app-development\n        [menu_item_parent] => 2\n        [post_type] => nav_menu_item\n        [object] => page\n        [object_id] => 8\n        [type] => post_type\n        [classes] => Array ( )\n        [target] =>\n        [attr_title] =>\n        [description] =>\n        [xfn] =>\n        [db_id] => 4\n        [menu_order] => 4\n    )\n    [4] => stdClass Object (\n        [ID] => 5\n        [title] => About Us\n        [url] => http://example.com/about-us\n        [menu_item_parent] => 0\n        [post_type] => nav_menu_item\n        [object] => page\n        [object_id] => 9\n        [type] => post_type\n        [classes] => Array ( )\n        [target] =>\n        [attr_title] =>\n        [description] =>\n        [xfn] =>\n        [db_id] => 5\n        [menu_order] => 5\n    )\n)\n\n```\n\n### 說明：\n\n1. `Home`：是一個頂層選單項目，`menu_item_parent` 為 `0`。\n2. `Services`：也是一個頂層選單項目，`menu_item_parent` 為 `0`，並且有子項目。\n3. `Web Development`：是 `Services` 的子選單，`menu_item_parent` 是 `Services` 的 `ID`（即 `2`）。\n4. `App Development`：也是 `Services` 的子選單，`menu_item_parent` 是 `Services` 的 `ID`（即 `2`）。\n5. `About Us`：是一個頂層選單項目，`menu_item_parent` 為 `0`。\n","source":"_posts/Wordpress-動態選單.md","raw":"---\nlayout: post\ntitle: Wordpress 動態選單\ndate: 2024-09-26 00:33:48\ntags: [Wordpress]\ncategories: [Wordpress, 動態選單]\ntop_img: https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2Fwordpress%20%E5%8B%95%E6%85%8B%E9%81%B8%E5%96%AE%E6%95%99%E5%AD%B8%2Fdynamic-wp-nav.webp?alt=media&token=b20209da-6039-49f2-8df4-35b3e48be9e4\ncover: https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2Fwordpress%20%E5%8B%95%E6%85%8B%E9%81%B8%E5%96%AE%E6%95%99%E5%AD%B8%2Fdynamic-wp-nav.webp?alt=media&token=b20209da-6039-49f2-8df4-35b3e48be9e4\n---\n\n## 步驟 1：連結對應選單\n\n```php\n$menu_items = wp_get_nav_menu_items('首頁選單');\n```\n\n這段程式碼使用了 `wp_get_nav_menu_items()` 函數，傳入選單的名稱 `'首頁選單'`，該名稱對應的是你在 WordPress 後台中設定的選單名稱。\n\n👇🏻 後台長這樣 👇🏻\n![wordpress-background](https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2Fwordpress%20%E5%8B%95%E6%85%8B%E9%81%B8%E5%96%AE%E6%95%99%E5%AD%B8%2Fwp-back-nav.png?alt=media&token=1bbfaa5c-1e34-4b9c-9683-6f64a99e62c4)\n\n### 範例：\n\n假設你在 WordPress 後台創建了一個選單，並命名為「首頁選單」，該選單中包含以下項目：\n\n1. Home\n2. Services\n   - Web Development\n   - App Development\n3. About Us\n4. Contact\n\n`wp_get_nav_menu_items()` 會返回這些選單項目作為一個物件陣列，每個項目包含：\n\n- `ID`：選單項目的唯一標識符\n- `title`：選單項目的標題（如 \"Home\", \"Services\"）\n- `url`：選單項目的連結\n- `menu_item_parent`：父選單項目的 ID（若是頂層項目則為 0）\n\n## 步驟 2：組織選單層次結構\n\n接下來，你需要將這些選單項目按父子關係組織起來，以便生成一個層次結構清晰的選單。這段程式碼的目的是將選單項目分類為父選單和子選單。\n\n```php\n$tree_menu_items = array();\n\nforeach ($menu_items as $menu_item) {\n    if ($menu_item->menu_item_parent == 0) {\n        // 父選單項目\n        $tree_menu_items[$menu_item->ID] = $menu_item;\n        $tree_menu_items[$menu_item->ID]->children = array(); // 初始化子選單陣列\n    } else {\n        // 子選單項目，添加到父選單項目的 children 陣列中\n        $tree_menu_items[$menu_item->menu_item_parent]->children[] = $menu_item;\n    }\n}\n```\n\n### 範例：\n\n- 假設 \"Services\" 是一個父選單項目，它的 `menu_item_parent` 是 `0`。\n- \"Web Development\" 和 \"App Development\" 是它的子選單項目，它們的 `menu_item_parent` 為 \"Services\" 的 ID。\n\n程式會將這些項目組織為：\n\n- `Home`：無子選單\n- `Services`：\n  - 子選單：`Web Development`, `App Development`\n- `About Us`：無子選單\n- `Contact`：無子選單\n\n## 步驟 3：生成 HTML 選單\n\n這裡的程式碼將已整理好的選單結構動態地生成 HTML。\n\n```php\n<?php if (isset($tree_menu_items)): ?>\n    <?php foreach ($tree_menu_items as $menu_item): ?>\n        <li class=\"menu-item <?php if($hasSubmenu): ?>has-children<?php endif; ?>\">\n            <a id=\"menu-item-<?php echo $menu_item->ID; ?>\" href=\"<?php echo $menu_item->url; ?>\">\n                <?php echo esc_html($menu_item->title); ?>\n                <?php if ($hasSubmenu): ?>\n                    <span class=\"angle-down-wrap\"><i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i></span>\n                <?php endif; ?>\n            </a>\n\n            <?php if ($hasSubmenu): ?>\n                <ul class=\"menu-dropdown-list list-unstyled\">\n                    <?php foreach ($menu_item->children as $child_menu_item): ?>\n                        <li class=\"dropdown-list-item\">\n                            <a id=\"menu-item-<?php echo $child_menu_item->ID; ?>\" href=\"<?php echo $child_menu_item->url; ?>\">\n                                <?php echo esc_html($child_menu_item->title); ?>\n                            </a>\n                        </li>\n                    <?php endforeach; ?>\n                </ul>\n            <?php endif; ?>\n        </li>\n    <?php endforeach; ?>\n<?php endif; ?>\n```\n\n這段程式碼會生成以下的 HTML：\n\n```html\n<ul class=\"menu-box list-unstyled\">\n  <li class=\"menu-item\">\n    <a id=\"menu-item-1\" href=\"/home\">Home</a>\n  </li>\n  <li class=\"menu-item has-children\">\n    <a id=\"menu-item-2\" href=\"/services\"\n      >Services\n      <span class=\"angle-down-wrap\"\n        ><i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i\n      ></span>\n    </a>\n    <ul class=\"menu-dropdown-list list-unstyled\">\n      <li class=\"dropdown-list-item\">\n        <a id=\"menu-item-3\" href=\"/services/web-development\">Web Development</a>\n      </li>\n      <li class=\"dropdown-list-item\">\n        <a id=\"menu-item-4\" href=\"/services/app-development\">App Development</a>\n      </li>\n    </ul>\n  </li>\n  <li class=\"menu-item\">\n    <a id=\"menu-item-5\" href=\"/about-us\">About Us</a>\n  </li>\n  <li class=\"menu-item\">\n    <a id=\"menu-item-6\" href=\"/contact\">Contact</a>\n  </li>\n</ul>\n```\n\n- `menu-item-2` 是 `Services`，因為它有子選單，所以會附加 `has-children` class，並顯示一個下拉圖標（`<span class=\"angle-down-wrap\">`）。\n- 其子選單（`Web Development` 和 `App Development`）被放在一個內嵌的 `<ul class=\"menu-dropdown-list\">` 中。\n\n## 步驟 4：顯示和樣式\n\n這段程式碼最終將選單顯示在 `<header>` 中，並包含基於層次結構的樣式（如子選單的下拉圖標和層次結構的縮排）。\n\n## 補充 wp_get_nav_menu_items() 得到的結構\n\n在 WordPress 中，`wp_get_nav_menu_items()` 函數返回一個包含選單項目（`$menu_items`）的陣列。每個選單項目都是一個物件，包含許多屬性，這些屬性描述了選單中的每個項目。以下是 `$menu_items` 中每個選單項目的內容：\n\n### `$menu_items` 每個項目的結構：\n\n每個選單項目會包含以下常見屬性：\n\n1. **ID** (`$menu_item->ID`)\n   - 每個選單項目的唯一識別符。這個值可以用來區分不同的選單項目。\n2. **title** (`$menu_item->title`)\n   - 選單項目的名稱，這是會顯示在前端的文字。\n3. **url** (`$menu_item->url`)\n   - 選單項目的鏈接地址（例如，指向頁面的 URL）。\n4. **menu_item_parent** (`$menu_item->menu_item_parent`)\n   - 父選單項目的 ID。如果該選單項目是頂層選單，`menu_item_parent` 會是 `0`；如果它是子選單，`menu_item_parent` 會是其父選單項目的 ID。\n5. **post_type** (`$menu_item->post_type`)\n   - 指定該選單項目的類型，一般為 `nav_menu_item`。\n6. **object** (`$menu_item->object`)\n   - 選單項目的目標對象類型，例如 `page` 或 `category`。這表示選單鏈接指向的是一個頁面還是分類目錄等。\n7. **object_id** (`$menu_item->object_id`)\n   - 目標對象的 ID，例如，如果該選單項目連接到一個頁面，這裡會顯示該頁面的 ID。\n8. **type** (`$menu_item->type`)\n   - 選單項目的類型。通常為 `post_type` 或 `taxonomy`，指的是該選單項目連結到的對象是否是一個文章類型或分類法。\n9. **classes** (`$menu_item->classes`)\n   - 選單項目所包含的 CSS class。這是一個陣列，通常可用於為選單項目添加自定義樣式。\n10. **target** (`$menu_item->target`)\n    - 指定鏈接是否在新窗口或當前窗口打開，這與 HTML 的 `target=\"_blank\"` 類似。\n11. **attr_title** (`$menu_item->attr_title`)\n    - 為選單項目提供的 `title` 屬性，用來顯示在鼠標懸停在鏈接上時的提示文字。\n12. **description** (`$menu_item->description`)\n    - 選單項目的描述，通常不會顯示在前端，但在一些主題中可能會用於輔助說明。\n13. **xfn** (`$menu_item->xfn`)\n    - 用於指定鏈接關係（XFN，\"XHTML Friends Network\"），例如指定鏈接到該頁面的使用者關係（朋友、合作夥伴等）。\n14. **db_id** (`$menu_item->db_id`)\n    - 選單項目的資料庫 ID，與 `ID` 相同，用來唯一識別該選單項目。\n15. **menu_order** (`$menu_item->menu_order`)\n    - 選單項目的順序，用來指定該項目在選單中的顯示順序。\n\n### 範例：`$menu_items` 的內容範例\n\n假設有一個選單名為「首頁選單」，其中包含以下項目：\n\n1. Home（頂層選單）\n2. Services（頂層選單）\n   - Web Development（子選單）\n   - App Development（子選單）\n3. About Us（頂層選單）\n\n那麼，`$menu_items` 中的內容可能類似以下結構：\n\n```php\nArray (\n    [0] => stdClass Object (\n        [ID] => 1\n        [title] => Home\n        [url] => http://example.com/home\n        [menu_item_parent] => 0\n        [post_type] => nav_menu_item\n        [object] => page\n        [object_id] => 5\n        [type] => post_type\n        [classes] => Array ( )\n        [target] =>\n        [attr_title] =>\n        [description] =>\n        [xfn] =>\n        [db_id] => 1\n        [menu_order] => 1\n    )\n    [1] => stdClass Object (\n        [ID] => 2\n        [title] => Services\n        [url] => http://example.com/services\n        [menu_item_parent] => 0\n        [post_type] => nav_menu_item\n        [object] => page\n        [object_id] => 6\n        [type] => post_type\n        [classes] => Array ( )\n        [target] =>\n        [attr_title] =>\n        [description] =>\n        [xfn] =>\n        [db_id] => 2\n        [menu_order] => 2\n    )\n    [2] => stdClass Object (\n        [ID] => 3\n        [title] => Web Development\n        [url] => http://example.com/web-development\n        [menu_item_parent] => 2\n        [post_type] => nav_menu_item\n        [object] => page\n        [object_id] => 7\n        [type] => post_type\n        [classes] => Array ( )\n        [target] =>\n        [attr_title] =>\n        [description] =>\n        [xfn] =>\n        [db_id] => 3\n        [menu_order] => 3\n    )\n    [3] => stdClass Object (\n        [ID] => 4\n        [title] => App Development\n        [url] => http://example.com/app-development\n        [menu_item_parent] => 2\n        [post_type] => nav_menu_item\n        [object] => page\n        [object_id] => 8\n        [type] => post_type\n        [classes] => Array ( )\n        [target] =>\n        [attr_title] =>\n        [description] =>\n        [xfn] =>\n        [db_id] => 4\n        [menu_order] => 4\n    )\n    [4] => stdClass Object (\n        [ID] => 5\n        [title] => About Us\n        [url] => http://example.com/about-us\n        [menu_item_parent] => 0\n        [post_type] => nav_menu_item\n        [object] => page\n        [object_id] => 9\n        [type] => post_type\n        [classes] => Array ( )\n        [target] =>\n        [attr_title] =>\n        [description] =>\n        [xfn] =>\n        [db_id] => 5\n        [menu_order] => 5\n    )\n)\n\n```\n\n### 說明：\n\n1. `Home`：是一個頂層選單項目，`menu_item_parent` 為 `0`。\n2. `Services`：也是一個頂層選單項目，`menu_item_parent` 為 `0`，並且有子項目。\n3. `Web Development`：是 `Services` 的子選單，`menu_item_parent` 是 `Services` 的 `ID`（即 `2`）。\n4. `App Development`：也是 `Services` 的子選單，`menu_item_parent` 是 `Services` 的 `ID`（即 `2`）。\n5. `About Us`：是一個頂層選單項目，`menu_item_parent` 為 `0`。\n","slug":"Wordpress-動態選單","published":1,"updated":"2024-09-25T16:48:24.162Z","_id":"cm1i34pd40000ulexfvst9l8j","comments":1,"photos":[],"content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h2 id=\"步驟-1：連結對應選單\"><a href=\"#步驟-1：連結對應選單\" class=\"headerlink\" title=\"步驟 1：連結對應選單\"></a>步驟 1：連結對應選單</h2><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$menu_items</span> = <span class=\"title function_ invoke__\">wp_get_nav_menu_items</span>(<span class=\"string\">&#x27;首頁選單&#x27;</span>);</span><br></pre></td></tr></table></figure>\n\n<p>這段程式碼使用了 <code>wp_get_nav_menu_items()</code> 函數，傳入選單的名稱 <code>&#39;首頁選單&#39;</code>，該名稱對應的是你在 WordPress 後台中設定的選單名稱。</p>\n<p>👇🏻 後台長這樣 👇🏻<br><img src=\"https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2Fwordpress%20%E5%8B%95%E6%85%8B%E9%81%B8%E5%96%AE%E6%95%99%E5%AD%B8%2Fwp-back-nav.png?alt=media&token=1bbfaa5c-1e34-4b9c-9683-6f64a99e62c4\" alt=\"wordpress-background\"></p>\n<h3 id=\"範例：\"><a href=\"#範例：\" class=\"headerlink\" title=\"範例：\"></a>範例：</h3><p>假設你在 WordPress 後台創建了一個選單，並命名為「首頁選單」，該選單中包含以下項目：</p>\n<ol>\n<li>Home</li>\n<li>Services<ul>\n<li>Web Development</li>\n<li>App Development</li>\n</ul>\n</li>\n<li>About Us</li>\n<li>Contact</li>\n</ol>\n<p><code>wp_get_nav_menu_items()</code> 會返回這些選單項目作為一個物件陣列，每個項目包含：</p>\n<ul>\n<li><code>ID</code>：選單項目的唯一標識符</li>\n<li><code>title</code>：選單項目的標題（如 “Home”, “Services”）</li>\n<li><code>url</code>：選單項目的連結</li>\n<li><code>menu_item_parent</code>：父選單項目的 ID（若是頂層項目則為 0）</li>\n</ul>\n<h2 id=\"步驟-2：組織選單層次結構\"><a href=\"#步驟-2：組織選單層次結構\" class=\"headerlink\" title=\"步驟 2：組織選單層次結構\"></a>步驟 2：組織選單層次結構</h2><p>接下來，你需要將這些選單項目按父子關係組織起來，以便生成一個層次結構清晰的選單。這段程式碼的目的是將選單項目分類為父選單和子選單。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$tree_menu_items</span> = <span class=\"keyword\">array</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">foreach</span> (<span class=\"variable\">$menu_items</span> <span class=\"keyword\">as</span> <span class=\"variable\">$menu_item</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"variable\">$menu_item</span>-&gt;menu_item_parent == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 父選單項目</span></span><br><span class=\"line\">        <span class=\"variable\">$tree_menu_items</span>[<span class=\"variable\">$menu_item</span>-&gt;ID] = <span class=\"variable\">$menu_item</span>;</span><br><span class=\"line\">        <span class=\"variable\">$tree_menu_items</span>[<span class=\"variable\">$menu_item</span>-&gt;ID]-&gt;children = <span class=\"keyword\">array</span>(); <span class=\"comment\">// 初始化子選單陣列</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 子選單項目，添加到父選單項目的 children 陣列中</span></span><br><span class=\"line\">        <span class=\"variable\">$tree_menu_items</span>[<span class=\"variable\">$menu_item</span>-&gt;menu_item_parent]-&gt;children[] = <span class=\"variable\">$menu_item</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"範例：-1\"><a href=\"#範例：-1\" class=\"headerlink\" title=\"範例：\"></a>範例：</h3><ul>\n<li>假設 “Services” 是一個父選單項目，它的 <code>menu_item_parent</code> 是 <code>0</code>。</li>\n<li>“Web Development” 和 “App Development” 是它的子選單項目，它們的 <code>menu_item_parent</code> 為 “Services” 的 ID。</li>\n</ul>\n<p>程式會將這些項目組織為：</p>\n<ul>\n<li><code>Home</code>：無子選單</li>\n<li><code>Services</code>：<ul>\n<li>子選單：<code>Web Development</code>, <code>App Development</code></li>\n</ul>\n</li>\n<li><code>About Us</code>：無子選單</li>\n<li><code>Contact</code>：無子選單</li>\n</ul>\n<h2 id=\"步驟-3：生成-HTML-選單\"><a href=\"#步驟-3：生成-HTML-選單\" class=\"headerlink\" title=\"步驟 3：生成 HTML 選單\"></a>步驟 3：生成 HTML 選單</h2><p>這裡的程式碼將已整理好的選單結構動態地生成 HTML。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span> <span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>(<span class=\"variable\">$tree_menu_items</span>)): <span class=\"meta\">?&gt;</span></span><br><span class=\"line\">    <span class=\"meta\">&lt;?php</span> <span class=\"keyword\">foreach</span> (<span class=\"variable\">$tree_menu_items</span> <span class=\"keyword\">as</span> <span class=\"variable\">$menu_item</span>): <span class=\"meta\">?&gt;</span></span><br><span class=\"line\">        &lt;li <span class=\"class\"><span class=\"keyword\">class</span>=&quot;<span class=\"title\">menu</span>-<span class=\"title\">item</span> &lt;?<span class=\"title\">php</span> <span class=\"title\">if</span>($<span class=\"title\">hasSubmenu</span>): ?&gt;<span class=\"title\">has</span>-<span class=\"title\">children</span>&lt;?<span class=\"title\">php</span> <span class=\"title\">endif</span>; ?&gt;&quot;&gt;</span></span><br><span class=\"line\"><span class=\"class\">            &lt;<span class=\"title\">a</span> <span class=\"title\">id</span>=&quot;<span class=\"title\">menu</span>-<span class=\"title\">item</span>-&lt;?<span class=\"title\">php</span> <span class=\"title\">echo</span> $<span class=\"title\">menu_item</span>-&gt;<span class=\"title\">ID</span>; ?&gt;&quot; <span class=\"title\">href</span>=&quot;&lt;?<span class=\"title\">php</span> <span class=\"title\">echo</span> $<span class=\"title\">menu_item</span>-&gt;<span class=\"title\">url</span>; ?&gt;&quot;&gt;</span></span><br><span class=\"line\"><span class=\"class\">                &lt;?<span class=\"title\">php</span> <span class=\"title\">echo</span> <span class=\"title\">esc_html</span>($<span class=\"title\">menu_item</span>-&gt;<span class=\"title\">title</span>); ?&gt;</span></span><br><span class=\"line\"><span class=\"class\">                &lt;?<span class=\"title\">php</span> <span class=\"title\">if</span> ($<span class=\"title\">hasSubmenu</span>): ?&gt;</span></span><br><span class=\"line\"><span class=\"class\">                    &lt;<span class=\"title\">span</span> <span class=\"title\">class</span>=&quot;<span class=\"title\">angle</span>-<span class=\"title\">down</span>-<span class=\"title\">wrap</span>&quot;&gt;&lt;<span class=\"title\">i</span> <span class=\"title\">class</span>=&quot;<span class=\"title\">fa</span> <span class=\"title\">fa</span>-<span class=\"title\">angle</span>-<span class=\"title\">down</span>&quot; <span class=\"title\">aria</span>-<span class=\"title\">hidden</span>=&quot;<span class=\"title\">true</span>&quot;&gt;&lt;/<span class=\"title\">i</span>&gt;&lt;/<span class=\"title\">span</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">                &lt;?<span class=\"title\">php</span> <span class=\"title\">endif</span>; ?&gt;</span></span><br><span class=\"line\"><span class=\"class\">            &lt;/<span class=\"title\">a</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\"></span></span><br><span class=\"line\"><span class=\"class\">            &lt;?<span class=\"title\">php</span> <span class=\"title\">if</span> ($<span class=\"title\">hasSubmenu</span>): ?&gt;</span></span><br><span class=\"line\"><span class=\"class\">                &lt;<span class=\"title\">ul</span> <span class=\"title\">class</span>=&quot;<span class=\"title\">menu</span>-<span class=\"title\">dropdown</span>-<span class=\"title\">list</span> <span class=\"title\">list</span>-<span class=\"title\">unstyled</span>&quot;&gt;</span></span><br><span class=\"line\"><span class=\"class\">                    &lt;?<span class=\"title\">php</span> <span class=\"title\">foreach</span> ($<span class=\"title\">menu_item</span>-&gt;<span class=\"title\">children</span> <span class=\"title\">as</span> $<span class=\"title\">child_menu_item</span>): ?&gt;</span></span><br><span class=\"line\"><span class=\"class\">                        &lt;<span class=\"title\">li</span> <span class=\"title\">class</span>=&quot;<span class=\"title\">dropdown</span>-<span class=\"title\">list</span>-<span class=\"title\">item</span>&quot;&gt;</span></span><br><span class=\"line\"><span class=\"class\">                            &lt;<span class=\"title\">a</span> <span class=\"title\">id</span>=&quot;<span class=\"title\">menu</span>-<span class=\"title\">item</span>-&lt;?<span class=\"title\">php</span> <span class=\"title\">echo</span> $<span class=\"title\">child_menu_item</span>-&gt;<span class=\"title\">ID</span>; ?&gt;&quot; <span class=\"title\">href</span>=&quot;&lt;?<span class=\"title\">php</span> <span class=\"title\">echo</span> $<span class=\"title\">child_menu_item</span>-&gt;<span class=\"title\">url</span>; ?&gt;&quot;&gt;</span></span><br><span class=\"line\"><span class=\"class\">                                &lt;?<span class=\"title\">php</span> <span class=\"title\">echo</span> <span class=\"title\">esc_html</span>($<span class=\"title\">child_menu_item</span>-&gt;<span class=\"title\">title</span>); ?&gt;</span></span><br><span class=\"line\"><span class=\"class\">                            &lt;/<span class=\"title\">a</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">                        &lt;/<span class=\"title\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">                    &lt;?<span class=\"title\">php</span> <span class=\"title\">endforeach</span>; ?&gt;</span></span><br><span class=\"line\"><span class=\"class\">                &lt;/<span class=\"title\">ul</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">            &lt;?<span class=\"title\">php</span> <span class=\"title\">endif</span>; ?&gt;</span></span><br><span class=\"line\"><span class=\"class\">        &lt;/<span class=\"title\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">    &lt;?<span class=\"title\">php</span> <span class=\"title\">endforeach</span>; ?&gt;</span></span><br><span class=\"line\"><span class=\"class\">&lt;?<span class=\"title\">php</span> <span class=\"title\">endif</span>; ?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>這段程式碼會生成以下的 HTML：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;menu-box list-unstyled&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;menu-item&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;menu-item-1&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;/home&quot;</span>&gt;</span>Home<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;menu-item has-children&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;menu-item-2&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;/services&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      &gt;</span>Services</span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;angle-down-wrap&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        &gt;</span><span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;fa fa-angle-down&quot;</span> <span class=\"attr\">aria-hidden</span>=<span class=\"string\">&quot;true&quot;</span>&gt;</span>&lt;/i</span><br><span class=\"line\">      &gt;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;menu-dropdown-list list-unstyled&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;dropdown-list-item&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;menu-item-3&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;/services/web-development&quot;</span>&gt;</span>Web Development<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;dropdown-list-item&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;menu-item-4&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;/services/app-development&quot;</span>&gt;</span>App Development<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;menu-item&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;menu-item-5&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;/about-us&quot;</span>&gt;</span>About Us<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;menu-item&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;menu-item-6&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;/contact&quot;</span>&gt;</span>Contact<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>menu-item-2</code> 是 <code>Services</code>，因為它有子選單，所以會附加 <code>has-children</code> class，並顯示一個下拉圖標（<code>&lt;span class=&quot;angle-down-wrap&quot;&gt;</code>）。</li>\n<li>其子選單（<code>Web Development</code> 和 <code>App Development</code>）被放在一個內嵌的 <code>&lt;ul class=&quot;menu-dropdown-list&quot;&gt;</code> 中。</li>\n</ul>\n<h2 id=\"步驟-4：顯示和樣式\"><a href=\"#步驟-4：顯示和樣式\" class=\"headerlink\" title=\"步驟 4：顯示和樣式\"></a>步驟 4：顯示和樣式</h2><p>這段程式碼最終將選單顯示在 <code>&lt;header&gt;</code> 中，並包含基於層次結構的樣式（如子選單的下拉圖標和層次結構的縮排）。</p>\n<h2 id=\"補充-wp-get-nav-menu-items-得到的結構\"><a href=\"#補充-wp-get-nav-menu-items-得到的結構\" class=\"headerlink\" title=\"補充 wp_get_nav_menu_items() 得到的結構\"></a>補充 wp_get_nav_menu_items() 得到的結構</h2><p>在 WordPress 中，<code>wp_get_nav_menu_items()</code> 函數返回一個包含選單項目（<code>$menu_items</code>）的陣列。每個選單項目都是一個物件，包含許多屬性，這些屬性描述了選單中的每個項目。以下是 <code>$menu_items</code> 中每個選單項目的內容：</p>\n<h3 id=\"menu-items-每個項目的結構：\"><a href=\"#menu-items-每個項目的結構：\" class=\"headerlink\" title=\"$menu_items 每個項目的結構：\"></a><code>$menu_items</code> 每個項目的結構：</h3><p>每個選單項目會包含以下常見屬性：</p>\n<ol>\n<li><strong>ID</strong> (<code>$menu_item-&gt;ID</code>)<ul>\n<li>每個選單項目的唯一識別符。這個值可以用來區分不同的選單項目。</li>\n</ul>\n</li>\n<li><strong>title</strong> (<code>$menu_item-&gt;title</code>)<ul>\n<li>選單項目的名稱，這是會顯示在前端的文字。</li>\n</ul>\n</li>\n<li><strong>url</strong> (<code>$menu_item-&gt;url</code>)<ul>\n<li>選單項目的鏈接地址（例如，指向頁面的 URL）。</li>\n</ul>\n</li>\n<li><strong>menu_item_parent</strong> (<code>$menu_item-&gt;menu_item_parent</code>)<ul>\n<li>父選單項目的 ID。如果該選單項目是頂層選單，<code>menu_item_parent</code> 會是 <code>0</code>；如果它是子選單，<code>menu_item_parent</code> 會是其父選單項目的 ID。</li>\n</ul>\n</li>\n<li><strong>post_type</strong> (<code>$menu_item-&gt;post_type</code>)<ul>\n<li>指定該選單項目的類型，一般為 <code>nav_menu_item</code>。</li>\n</ul>\n</li>\n<li><strong>object</strong> (<code>$menu_item-&gt;object</code>)<ul>\n<li>選單項目的目標對象類型，例如 <code>page</code> 或 <code>category</code>。這表示選單鏈接指向的是一個頁面還是分類目錄等。</li>\n</ul>\n</li>\n<li><strong>object_id</strong> (<code>$menu_item-&gt;object_id</code>)<ul>\n<li>目標對象的 ID，例如，如果該選單項目連接到一個頁面，這裡會顯示該頁面的 ID。</li>\n</ul>\n</li>\n<li><strong>type</strong> (<code>$menu_item-&gt;type</code>)<ul>\n<li>選單項目的類型。通常為 <code>post_type</code> 或 <code>taxonomy</code>，指的是該選單項目連結到的對象是否是一個文章類型或分類法。</li>\n</ul>\n</li>\n<li><strong>classes</strong> (<code>$menu_item-&gt;classes</code>)<ul>\n<li>選單項目所包含的 CSS class。這是一個陣列，通常可用於為選單項目添加自定義樣式。</li>\n</ul>\n</li>\n<li><strong>target</strong> (<code>$menu_item-&gt;target</code>)<ul>\n<li>指定鏈接是否在新窗口或當前窗口打開，這與 HTML 的 <code>target=&quot;_blank&quot;</code> 類似。</li>\n</ul>\n</li>\n<li><strong>attr_title</strong> (<code>$menu_item-&gt;attr_title</code>)<ul>\n<li>為選單項目提供的 <code>title</code> 屬性，用來顯示在鼠標懸停在鏈接上時的提示文字。</li>\n</ul>\n</li>\n<li><strong>description</strong> (<code>$menu_item-&gt;description</code>)<ul>\n<li>選單項目的描述，通常不會顯示在前端，但在一些主題中可能會用於輔助說明。</li>\n</ul>\n</li>\n<li><strong>xfn</strong> (<code>$menu_item-&gt;xfn</code>)<ul>\n<li>用於指定鏈接關係（XFN，”XHTML Friends Network”），例如指定鏈接到該頁面的使用者關係（朋友、合作夥伴等）。</li>\n</ul>\n</li>\n<li><strong>db_id</strong> (<code>$menu_item-&gt;db_id</code>)<ul>\n<li>選單項目的資料庫 ID，與 <code>ID</code> 相同，用來唯一識別該選單項目。</li>\n</ul>\n</li>\n<li><strong>menu_order</strong> (<code>$menu_item-&gt;menu_order</code>)<ul>\n<li>選單項目的順序，用來指定該項目在選單中的顯示順序。</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"範例：-menu-items-的內容範例\"><a href=\"#範例：-menu-items-的內容範例\" class=\"headerlink\" title=\"範例：$menu_items 的內容範例\"></a>範例：<code>$menu_items</code> 的內容範例</h3><p>假設有一個選單名為「首頁選單」，其中包含以下項目：</p>\n<ol>\n<li>Home（頂層選單）</li>\n<li>Services（頂層選單）<ul>\n<li>Web Development（子選單）</li>\n<li>App Development（子選單）</li>\n</ul>\n</li>\n<li>About Us（頂層選單）</li>\n</ol>\n<p>那麼，<code>$menu_items</code> 中的內容可能類似以下結構：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_ invoke__\">Array</span> (</span><br><span class=\"line\">    [<span class=\"number\">0</span>] =&gt; <span class=\"built_in\">stdClass</span> <span class=\"title function_ invoke__\">Object</span> (</span><br><span class=\"line\">        [ID] =&gt; <span class=\"number\">1</span></span><br><span class=\"line\">        [title] =&gt; Home</span><br><span class=\"line\">        [url] =&gt; <span class=\"attr\">http</span>://example.com/home</span><br><span class=\"line\">        [menu_item_parent] =&gt; <span class=\"number\">0</span></span><br><span class=\"line\">        [post_type] =&gt; nav_menu_item</span><br><span class=\"line\">        [<span class=\"keyword\">object</span>] =&gt; page</span><br><span class=\"line\">        [object_id] =&gt; <span class=\"number\">5</span></span><br><span class=\"line\">        [type] =&gt; post_type</span><br><span class=\"line\">        [classes] =&gt; <span class=\"title function_ invoke__\">Array</span> ( )</span><br><span class=\"line\">        [target] =&gt;</span><br><span class=\"line\">        [attr_title] =&gt;</span><br><span class=\"line\">        [description] =&gt;</span><br><span class=\"line\">        [xfn] =&gt;</span><br><span class=\"line\">        [db_id] =&gt; <span class=\"number\">1</span></span><br><span class=\"line\">        [menu_order] =&gt; <span class=\"number\">1</span></span><br><span class=\"line\">    )</span><br><span class=\"line\">    [<span class=\"number\">1</span>] =&gt; <span class=\"built_in\">stdClass</span> <span class=\"title function_ invoke__\">Object</span> (</span><br><span class=\"line\">        [ID] =&gt; <span class=\"number\">2</span></span><br><span class=\"line\">        [title] =&gt; Services</span><br><span class=\"line\">        [url] =&gt; <span class=\"attr\">http</span>://example.com/services</span><br><span class=\"line\">        [menu_item_parent] =&gt; <span class=\"number\">0</span></span><br><span class=\"line\">        [post_type] =&gt; nav_menu_item</span><br><span class=\"line\">        [<span class=\"keyword\">object</span>] =&gt; page</span><br><span class=\"line\">        [object_id] =&gt; <span class=\"number\">6</span></span><br><span class=\"line\">        [type] =&gt; post_type</span><br><span class=\"line\">        [classes] =&gt; <span class=\"title function_ invoke__\">Array</span> ( )</span><br><span class=\"line\">        [target] =&gt;</span><br><span class=\"line\">        [attr_title] =&gt;</span><br><span class=\"line\">        [description] =&gt;</span><br><span class=\"line\">        [xfn] =&gt;</span><br><span class=\"line\">        [db_id] =&gt; <span class=\"number\">2</span></span><br><span class=\"line\">        [menu_order] =&gt; <span class=\"number\">2</span></span><br><span class=\"line\">    )</span><br><span class=\"line\">    [<span class=\"number\">2</span>] =&gt; <span class=\"built_in\">stdClass</span> <span class=\"title function_ invoke__\">Object</span> (</span><br><span class=\"line\">        [ID] =&gt; <span class=\"number\">3</span></span><br><span class=\"line\">        [title] =&gt; Web Development</span><br><span class=\"line\">        [url] =&gt; <span class=\"attr\">http</span>://example.com/web-development</span><br><span class=\"line\">        [menu_item_parent] =&gt; <span class=\"number\">2</span></span><br><span class=\"line\">        [post_type] =&gt; nav_menu_item</span><br><span class=\"line\">        [<span class=\"keyword\">object</span>] =&gt; page</span><br><span class=\"line\">        [object_id] =&gt; <span class=\"number\">7</span></span><br><span class=\"line\">        [type] =&gt; post_type</span><br><span class=\"line\">        [classes] =&gt; <span class=\"title function_ invoke__\">Array</span> ( )</span><br><span class=\"line\">        [target] =&gt;</span><br><span class=\"line\">        [attr_title] =&gt;</span><br><span class=\"line\">        [description] =&gt;</span><br><span class=\"line\">        [xfn] =&gt;</span><br><span class=\"line\">        [db_id] =&gt; <span class=\"number\">3</span></span><br><span class=\"line\">        [menu_order] =&gt; <span class=\"number\">3</span></span><br><span class=\"line\">    )</span><br><span class=\"line\">    [<span class=\"number\">3</span>] =&gt; <span class=\"built_in\">stdClass</span> <span class=\"title function_ invoke__\">Object</span> (</span><br><span class=\"line\">        [ID] =&gt; <span class=\"number\">4</span></span><br><span class=\"line\">        [title] =&gt; App Development</span><br><span class=\"line\">        [url] =&gt; <span class=\"attr\">http</span>://example.com/app-development</span><br><span class=\"line\">        [menu_item_parent] =&gt; <span class=\"number\">2</span></span><br><span class=\"line\">        [post_type] =&gt; nav_menu_item</span><br><span class=\"line\">        [<span class=\"keyword\">object</span>] =&gt; page</span><br><span class=\"line\">        [object_id] =&gt; <span class=\"number\">8</span></span><br><span class=\"line\">        [type] =&gt; post_type</span><br><span class=\"line\">        [classes] =&gt; <span class=\"title function_ invoke__\">Array</span> ( )</span><br><span class=\"line\">        [target] =&gt;</span><br><span class=\"line\">        [attr_title] =&gt;</span><br><span class=\"line\">        [description] =&gt;</span><br><span class=\"line\">        [xfn] =&gt;</span><br><span class=\"line\">        [db_id] =&gt; <span class=\"number\">4</span></span><br><span class=\"line\">        [menu_order] =&gt; <span class=\"number\">4</span></span><br><span class=\"line\">    )</span><br><span class=\"line\">    [<span class=\"number\">4</span>] =&gt; <span class=\"built_in\">stdClass</span> <span class=\"title function_ invoke__\">Object</span> (</span><br><span class=\"line\">        [ID] =&gt; <span class=\"number\">5</span></span><br><span class=\"line\">        [title] =&gt; About Us</span><br><span class=\"line\">        [url] =&gt; <span class=\"attr\">http</span>://example.com/about-us</span><br><span class=\"line\">        [menu_item_parent] =&gt; <span class=\"number\">0</span></span><br><span class=\"line\">        [post_type] =&gt; nav_menu_item</span><br><span class=\"line\">        [<span class=\"keyword\">object</span>] =&gt; page</span><br><span class=\"line\">        [object_id] =&gt; <span class=\"number\">9</span></span><br><span class=\"line\">        [type] =&gt; post_type</span><br><span class=\"line\">        [classes] =&gt; <span class=\"title function_ invoke__\">Array</span> ( )</span><br><span class=\"line\">        [target] =&gt;</span><br><span class=\"line\">        [attr_title] =&gt;</span><br><span class=\"line\">        [description] =&gt;</span><br><span class=\"line\">        [xfn] =&gt;</span><br><span class=\"line\">        [db_id] =&gt; <span class=\"number\">5</span></span><br><span class=\"line\">        [menu_order] =&gt; <span class=\"number\">5</span></span><br><span class=\"line\">    )</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"說明：\"><a href=\"#說明：\" class=\"headerlink\" title=\"說明：\"></a>說明：</h3><ol>\n<li><code>Home</code>：是一個頂層選單項目，<code>menu_item_parent</code> 為 <code>0</code>。</li>\n<li><code>Services</code>：也是一個頂層選單項目，<code>menu_item_parent</code> 為 <code>0</code>，並且有子項目。</li>\n<li><code>Web Development</code>：是 <code>Services</code> 的子選單，<code>menu_item_parent</code> 是 <code>Services</code> 的 <code>ID</code>（即 <code>2</code>）。</li>\n<li><code>App Development</code>：也是 <code>Services</code> 的子選單，<code>menu_item_parent</code> 是 <code>Services</code> 的 <code>ID</code>（即 <code>2</code>）。</li>\n<li><code>About Us</code>：是一個頂層選單項目，<code>menu_item_parent</code> 為 <code>0</code>。</li>\n</ol>\n","cover_type":"img","excerpt":"","more":"<h2 id=\"步驟-1：連結對應選單\"><a href=\"#步驟-1：連結對應選單\" class=\"headerlink\" title=\"步驟 1：連結對應選單\"></a>步驟 1：連結對應選單</h2><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$menu_items</span> = <span class=\"title function_ invoke__\">wp_get_nav_menu_items</span>(<span class=\"string\">&#x27;首頁選單&#x27;</span>);</span><br></pre></td></tr></table></figure>\n\n<p>這段程式碼使用了 <code>wp_get_nav_menu_items()</code> 函數，傳入選單的名稱 <code>&#39;首頁選單&#39;</code>，該名稱對應的是你在 WordPress 後台中設定的選單名稱。</p>\n<p>👇🏻 後台長這樣 👇🏻<br><img src=\"https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2Fwordpress%20%E5%8B%95%E6%85%8B%E9%81%B8%E5%96%AE%E6%95%99%E5%AD%B8%2Fwp-back-nav.png?alt=media&token=1bbfaa5c-1e34-4b9c-9683-6f64a99e62c4\" alt=\"wordpress-background\"></p>\n<h3 id=\"範例：\"><a href=\"#範例：\" class=\"headerlink\" title=\"範例：\"></a>範例：</h3><p>假設你在 WordPress 後台創建了一個選單，並命名為「首頁選單」，該選單中包含以下項目：</p>\n<ol>\n<li>Home</li>\n<li>Services<ul>\n<li>Web Development</li>\n<li>App Development</li>\n</ul>\n</li>\n<li>About Us</li>\n<li>Contact</li>\n</ol>\n<p><code>wp_get_nav_menu_items()</code> 會返回這些選單項目作為一個物件陣列，每個項目包含：</p>\n<ul>\n<li><code>ID</code>：選單項目的唯一標識符</li>\n<li><code>title</code>：選單項目的標題（如 “Home”, “Services”）</li>\n<li><code>url</code>：選單項目的連結</li>\n<li><code>menu_item_parent</code>：父選單項目的 ID（若是頂層項目則為 0）</li>\n</ul>\n<h2 id=\"步驟-2：組織選單層次結構\"><a href=\"#步驟-2：組織選單層次結構\" class=\"headerlink\" title=\"步驟 2：組織選單層次結構\"></a>步驟 2：組織選單層次結構</h2><p>接下來，你需要將這些選單項目按父子關係組織起來，以便生成一個層次結構清晰的選單。這段程式碼的目的是將選單項目分類為父選單和子選單。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$tree_menu_items</span> = <span class=\"keyword\">array</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">foreach</span> (<span class=\"variable\">$menu_items</span> <span class=\"keyword\">as</span> <span class=\"variable\">$menu_item</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"variable\">$menu_item</span>-&gt;menu_item_parent == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 父選單項目</span></span><br><span class=\"line\">        <span class=\"variable\">$tree_menu_items</span>[<span class=\"variable\">$menu_item</span>-&gt;ID] = <span class=\"variable\">$menu_item</span>;</span><br><span class=\"line\">        <span class=\"variable\">$tree_menu_items</span>[<span class=\"variable\">$menu_item</span>-&gt;ID]-&gt;children = <span class=\"keyword\">array</span>(); <span class=\"comment\">// 初始化子選單陣列</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 子選單項目，添加到父選單項目的 children 陣列中</span></span><br><span class=\"line\">        <span class=\"variable\">$tree_menu_items</span>[<span class=\"variable\">$menu_item</span>-&gt;menu_item_parent]-&gt;children[] = <span class=\"variable\">$menu_item</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"範例：-1\"><a href=\"#範例：-1\" class=\"headerlink\" title=\"範例：\"></a>範例：</h3><ul>\n<li>假設 “Services” 是一個父選單項目，它的 <code>menu_item_parent</code> 是 <code>0</code>。</li>\n<li>“Web Development” 和 “App Development” 是它的子選單項目，它們的 <code>menu_item_parent</code> 為 “Services” 的 ID。</li>\n</ul>\n<p>程式會將這些項目組織為：</p>\n<ul>\n<li><code>Home</code>：無子選單</li>\n<li><code>Services</code>：<ul>\n<li>子選單：<code>Web Development</code>, <code>App Development</code></li>\n</ul>\n</li>\n<li><code>About Us</code>：無子選單</li>\n<li><code>Contact</code>：無子選單</li>\n</ul>\n<h2 id=\"步驟-3：生成-HTML-選單\"><a href=\"#步驟-3：生成-HTML-選單\" class=\"headerlink\" title=\"步驟 3：生成 HTML 選單\"></a>步驟 3：生成 HTML 選單</h2><p>這裡的程式碼將已整理好的選單結構動態地生成 HTML。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span> <span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>(<span class=\"variable\">$tree_menu_items</span>)): <span class=\"meta\">?&gt;</span></span><br><span class=\"line\">    <span class=\"meta\">&lt;?php</span> <span class=\"keyword\">foreach</span> (<span class=\"variable\">$tree_menu_items</span> <span class=\"keyword\">as</span> <span class=\"variable\">$menu_item</span>): <span class=\"meta\">?&gt;</span></span><br><span class=\"line\">        &lt;li <span class=\"class\"><span class=\"keyword\">class</span>=&quot;<span class=\"title\">menu</span>-<span class=\"title\">item</span> &lt;?<span class=\"title\">php</span> <span class=\"title\">if</span>($<span class=\"title\">hasSubmenu</span>): ?&gt;<span class=\"title\">has</span>-<span class=\"title\">children</span>&lt;?<span class=\"title\">php</span> <span class=\"title\">endif</span>; ?&gt;&quot;&gt;</span></span><br><span class=\"line\"><span class=\"class\">            &lt;<span class=\"title\">a</span> <span class=\"title\">id</span>=&quot;<span class=\"title\">menu</span>-<span class=\"title\">item</span>-&lt;?<span class=\"title\">php</span> <span class=\"title\">echo</span> $<span class=\"title\">menu_item</span>-&gt;<span class=\"title\">ID</span>; ?&gt;&quot; <span class=\"title\">href</span>=&quot;&lt;?<span class=\"title\">php</span> <span class=\"title\">echo</span> $<span class=\"title\">menu_item</span>-&gt;<span class=\"title\">url</span>; ?&gt;&quot;&gt;</span></span><br><span class=\"line\"><span class=\"class\">                &lt;?<span class=\"title\">php</span> <span class=\"title\">echo</span> <span class=\"title\">esc_html</span>($<span class=\"title\">menu_item</span>-&gt;<span class=\"title\">title</span>); ?&gt;</span></span><br><span class=\"line\"><span class=\"class\">                &lt;?<span class=\"title\">php</span> <span class=\"title\">if</span> ($<span class=\"title\">hasSubmenu</span>): ?&gt;</span></span><br><span class=\"line\"><span class=\"class\">                    &lt;<span class=\"title\">span</span> <span class=\"title\">class</span>=&quot;<span class=\"title\">angle</span>-<span class=\"title\">down</span>-<span class=\"title\">wrap</span>&quot;&gt;&lt;<span class=\"title\">i</span> <span class=\"title\">class</span>=&quot;<span class=\"title\">fa</span> <span class=\"title\">fa</span>-<span class=\"title\">angle</span>-<span class=\"title\">down</span>&quot; <span class=\"title\">aria</span>-<span class=\"title\">hidden</span>=&quot;<span class=\"title\">true</span>&quot;&gt;&lt;/<span class=\"title\">i</span>&gt;&lt;/<span class=\"title\">span</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">                &lt;?<span class=\"title\">php</span> <span class=\"title\">endif</span>; ?&gt;</span></span><br><span class=\"line\"><span class=\"class\">            &lt;/<span class=\"title\">a</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\"></span></span><br><span class=\"line\"><span class=\"class\">            &lt;?<span class=\"title\">php</span> <span class=\"title\">if</span> ($<span class=\"title\">hasSubmenu</span>): ?&gt;</span></span><br><span class=\"line\"><span class=\"class\">                &lt;<span class=\"title\">ul</span> <span class=\"title\">class</span>=&quot;<span class=\"title\">menu</span>-<span class=\"title\">dropdown</span>-<span class=\"title\">list</span> <span class=\"title\">list</span>-<span class=\"title\">unstyled</span>&quot;&gt;</span></span><br><span class=\"line\"><span class=\"class\">                    &lt;?<span class=\"title\">php</span> <span class=\"title\">foreach</span> ($<span class=\"title\">menu_item</span>-&gt;<span class=\"title\">children</span> <span class=\"title\">as</span> $<span class=\"title\">child_menu_item</span>): ?&gt;</span></span><br><span class=\"line\"><span class=\"class\">                        &lt;<span class=\"title\">li</span> <span class=\"title\">class</span>=&quot;<span class=\"title\">dropdown</span>-<span class=\"title\">list</span>-<span class=\"title\">item</span>&quot;&gt;</span></span><br><span class=\"line\"><span class=\"class\">                            &lt;<span class=\"title\">a</span> <span class=\"title\">id</span>=&quot;<span class=\"title\">menu</span>-<span class=\"title\">item</span>-&lt;?<span class=\"title\">php</span> <span class=\"title\">echo</span> $<span class=\"title\">child_menu_item</span>-&gt;<span class=\"title\">ID</span>; ?&gt;&quot; <span class=\"title\">href</span>=&quot;&lt;?<span class=\"title\">php</span> <span class=\"title\">echo</span> $<span class=\"title\">child_menu_item</span>-&gt;<span class=\"title\">url</span>; ?&gt;&quot;&gt;</span></span><br><span class=\"line\"><span class=\"class\">                                &lt;?<span class=\"title\">php</span> <span class=\"title\">echo</span> <span class=\"title\">esc_html</span>($<span class=\"title\">child_menu_item</span>-&gt;<span class=\"title\">title</span>); ?&gt;</span></span><br><span class=\"line\"><span class=\"class\">                            &lt;/<span class=\"title\">a</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">                        &lt;/<span class=\"title\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">                    &lt;?<span class=\"title\">php</span> <span class=\"title\">endforeach</span>; ?&gt;</span></span><br><span class=\"line\"><span class=\"class\">                &lt;/<span class=\"title\">ul</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">            &lt;?<span class=\"title\">php</span> <span class=\"title\">endif</span>; ?&gt;</span></span><br><span class=\"line\"><span class=\"class\">        &lt;/<span class=\"title\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">    &lt;?<span class=\"title\">php</span> <span class=\"title\">endforeach</span>; ?&gt;</span></span><br><span class=\"line\"><span class=\"class\">&lt;?<span class=\"title\">php</span> <span class=\"title\">endif</span>; ?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>這段程式碼會生成以下的 HTML：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;menu-box list-unstyled&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;menu-item&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;menu-item-1&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;/home&quot;</span>&gt;</span>Home<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;menu-item has-children&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;menu-item-2&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;/services&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">      &gt;</span>Services</span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;angle-down-wrap&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        &gt;</span><span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;fa fa-angle-down&quot;</span> <span class=\"attr\">aria-hidden</span>=<span class=\"string\">&quot;true&quot;</span>&gt;</span>&lt;/i</span><br><span class=\"line\">      &gt;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;menu-dropdown-list list-unstyled&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;dropdown-list-item&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;menu-item-3&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;/services/web-development&quot;</span>&gt;</span>Web Development<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;dropdown-list-item&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;menu-item-4&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;/services/app-development&quot;</span>&gt;</span>App Development<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;menu-item&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;menu-item-5&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;/about-us&quot;</span>&gt;</span>About Us<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;menu-item&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;menu-item-6&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;/contact&quot;</span>&gt;</span>Contact<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>menu-item-2</code> 是 <code>Services</code>，因為它有子選單，所以會附加 <code>has-children</code> class，並顯示一個下拉圖標（<code>&lt;span class=&quot;angle-down-wrap&quot;&gt;</code>）。</li>\n<li>其子選單（<code>Web Development</code> 和 <code>App Development</code>）被放在一個內嵌的 <code>&lt;ul class=&quot;menu-dropdown-list&quot;&gt;</code> 中。</li>\n</ul>\n<h2 id=\"步驟-4：顯示和樣式\"><a href=\"#步驟-4：顯示和樣式\" class=\"headerlink\" title=\"步驟 4：顯示和樣式\"></a>步驟 4：顯示和樣式</h2><p>這段程式碼最終將選單顯示在 <code>&lt;header&gt;</code> 中，並包含基於層次結構的樣式（如子選單的下拉圖標和層次結構的縮排）。</p>\n<h2 id=\"補充-wp-get-nav-menu-items-得到的結構\"><a href=\"#補充-wp-get-nav-menu-items-得到的結構\" class=\"headerlink\" title=\"補充 wp_get_nav_menu_items() 得到的結構\"></a>補充 wp_get_nav_menu_items() 得到的結構</h2><p>在 WordPress 中，<code>wp_get_nav_menu_items()</code> 函數返回一個包含選單項目（<code>$menu_items</code>）的陣列。每個選單項目都是一個物件，包含許多屬性，這些屬性描述了選單中的每個項目。以下是 <code>$menu_items</code> 中每個選單項目的內容：</p>\n<h3 id=\"menu-items-每個項目的結構：\"><a href=\"#menu-items-每個項目的結構：\" class=\"headerlink\" title=\"$menu_items 每個項目的結構：\"></a><code>$menu_items</code> 每個項目的結構：</h3><p>每個選單項目會包含以下常見屬性：</p>\n<ol>\n<li><strong>ID</strong> (<code>$menu_item-&gt;ID</code>)<ul>\n<li>每個選單項目的唯一識別符。這個值可以用來區分不同的選單項目。</li>\n</ul>\n</li>\n<li><strong>title</strong> (<code>$menu_item-&gt;title</code>)<ul>\n<li>選單項目的名稱，這是會顯示在前端的文字。</li>\n</ul>\n</li>\n<li><strong>url</strong> (<code>$menu_item-&gt;url</code>)<ul>\n<li>選單項目的鏈接地址（例如，指向頁面的 URL）。</li>\n</ul>\n</li>\n<li><strong>menu_item_parent</strong> (<code>$menu_item-&gt;menu_item_parent</code>)<ul>\n<li>父選單項目的 ID。如果該選單項目是頂層選單，<code>menu_item_parent</code> 會是 <code>0</code>；如果它是子選單，<code>menu_item_parent</code> 會是其父選單項目的 ID。</li>\n</ul>\n</li>\n<li><strong>post_type</strong> (<code>$menu_item-&gt;post_type</code>)<ul>\n<li>指定該選單項目的類型，一般為 <code>nav_menu_item</code>。</li>\n</ul>\n</li>\n<li><strong>object</strong> (<code>$menu_item-&gt;object</code>)<ul>\n<li>選單項目的目標對象類型，例如 <code>page</code> 或 <code>category</code>。這表示選單鏈接指向的是一個頁面還是分類目錄等。</li>\n</ul>\n</li>\n<li><strong>object_id</strong> (<code>$menu_item-&gt;object_id</code>)<ul>\n<li>目標對象的 ID，例如，如果該選單項目連接到一個頁面，這裡會顯示該頁面的 ID。</li>\n</ul>\n</li>\n<li><strong>type</strong> (<code>$menu_item-&gt;type</code>)<ul>\n<li>選單項目的類型。通常為 <code>post_type</code> 或 <code>taxonomy</code>，指的是該選單項目連結到的對象是否是一個文章類型或分類法。</li>\n</ul>\n</li>\n<li><strong>classes</strong> (<code>$menu_item-&gt;classes</code>)<ul>\n<li>選單項目所包含的 CSS class。這是一個陣列，通常可用於為選單項目添加自定義樣式。</li>\n</ul>\n</li>\n<li><strong>target</strong> (<code>$menu_item-&gt;target</code>)<ul>\n<li>指定鏈接是否在新窗口或當前窗口打開，這與 HTML 的 <code>target=&quot;_blank&quot;</code> 類似。</li>\n</ul>\n</li>\n<li><strong>attr_title</strong> (<code>$menu_item-&gt;attr_title</code>)<ul>\n<li>為選單項目提供的 <code>title</code> 屬性，用來顯示在鼠標懸停在鏈接上時的提示文字。</li>\n</ul>\n</li>\n<li><strong>description</strong> (<code>$menu_item-&gt;description</code>)<ul>\n<li>選單項目的描述，通常不會顯示在前端，但在一些主題中可能會用於輔助說明。</li>\n</ul>\n</li>\n<li><strong>xfn</strong> (<code>$menu_item-&gt;xfn</code>)<ul>\n<li>用於指定鏈接關係（XFN，”XHTML Friends Network”），例如指定鏈接到該頁面的使用者關係（朋友、合作夥伴等）。</li>\n</ul>\n</li>\n<li><strong>db_id</strong> (<code>$menu_item-&gt;db_id</code>)<ul>\n<li>選單項目的資料庫 ID，與 <code>ID</code> 相同，用來唯一識別該選單項目。</li>\n</ul>\n</li>\n<li><strong>menu_order</strong> (<code>$menu_item-&gt;menu_order</code>)<ul>\n<li>選單項目的順序，用來指定該項目在選單中的顯示順序。</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"範例：-menu-items-的內容範例\"><a href=\"#範例：-menu-items-的內容範例\" class=\"headerlink\" title=\"範例：$menu_items 的內容範例\"></a>範例：<code>$menu_items</code> 的內容範例</h3><p>假設有一個選單名為「首頁選單」，其中包含以下項目：</p>\n<ol>\n<li>Home（頂層選單）</li>\n<li>Services（頂層選單）<ul>\n<li>Web Development（子選單）</li>\n<li>App Development（子選單）</li>\n</ul>\n</li>\n<li>About Us（頂層選單）</li>\n</ol>\n<p>那麼，<code>$menu_items</code> 中的內容可能類似以下結構：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_ invoke__\">Array</span> (</span><br><span class=\"line\">    [<span class=\"number\">0</span>] =&gt; <span class=\"built_in\">stdClass</span> <span class=\"title function_ invoke__\">Object</span> (</span><br><span class=\"line\">        [ID] =&gt; <span class=\"number\">1</span></span><br><span class=\"line\">        [title] =&gt; Home</span><br><span class=\"line\">        [url] =&gt; <span class=\"attr\">http</span>://example.com/home</span><br><span class=\"line\">        [menu_item_parent] =&gt; <span class=\"number\">0</span></span><br><span class=\"line\">        [post_type] =&gt; nav_menu_item</span><br><span class=\"line\">        [<span class=\"keyword\">object</span>] =&gt; page</span><br><span class=\"line\">        [object_id] =&gt; <span class=\"number\">5</span></span><br><span class=\"line\">        [type] =&gt; post_type</span><br><span class=\"line\">        [classes] =&gt; <span class=\"title function_ invoke__\">Array</span> ( )</span><br><span class=\"line\">        [target] =&gt;</span><br><span class=\"line\">        [attr_title] =&gt;</span><br><span class=\"line\">        [description] =&gt;</span><br><span class=\"line\">        [xfn] =&gt;</span><br><span class=\"line\">        [db_id] =&gt; <span class=\"number\">1</span></span><br><span class=\"line\">        [menu_order] =&gt; <span class=\"number\">1</span></span><br><span class=\"line\">    )</span><br><span class=\"line\">    [<span class=\"number\">1</span>] =&gt; <span class=\"built_in\">stdClass</span> <span class=\"title function_ invoke__\">Object</span> (</span><br><span class=\"line\">        [ID] =&gt; <span class=\"number\">2</span></span><br><span class=\"line\">        [title] =&gt; Services</span><br><span class=\"line\">        [url] =&gt; <span class=\"attr\">http</span>://example.com/services</span><br><span class=\"line\">        [menu_item_parent] =&gt; <span class=\"number\">0</span></span><br><span class=\"line\">        [post_type] =&gt; nav_menu_item</span><br><span class=\"line\">        [<span class=\"keyword\">object</span>] =&gt; page</span><br><span class=\"line\">        [object_id] =&gt; <span class=\"number\">6</span></span><br><span class=\"line\">        [type] =&gt; post_type</span><br><span class=\"line\">        [classes] =&gt; <span class=\"title function_ invoke__\">Array</span> ( )</span><br><span class=\"line\">        [target] =&gt;</span><br><span class=\"line\">        [attr_title] =&gt;</span><br><span class=\"line\">        [description] =&gt;</span><br><span class=\"line\">        [xfn] =&gt;</span><br><span class=\"line\">        [db_id] =&gt; <span class=\"number\">2</span></span><br><span class=\"line\">        [menu_order] =&gt; <span class=\"number\">2</span></span><br><span class=\"line\">    )</span><br><span class=\"line\">    [<span class=\"number\">2</span>] =&gt; <span class=\"built_in\">stdClass</span> <span class=\"title function_ invoke__\">Object</span> (</span><br><span class=\"line\">        [ID] =&gt; <span class=\"number\">3</span></span><br><span class=\"line\">        [title] =&gt; Web Development</span><br><span class=\"line\">        [url] =&gt; <span class=\"attr\">http</span>://example.com/web-development</span><br><span class=\"line\">        [menu_item_parent] =&gt; <span class=\"number\">2</span></span><br><span class=\"line\">        [post_type] =&gt; nav_menu_item</span><br><span class=\"line\">        [<span class=\"keyword\">object</span>] =&gt; page</span><br><span class=\"line\">        [object_id] =&gt; <span class=\"number\">7</span></span><br><span class=\"line\">        [type] =&gt; post_type</span><br><span class=\"line\">        [classes] =&gt; <span class=\"title function_ invoke__\">Array</span> ( )</span><br><span class=\"line\">        [target] =&gt;</span><br><span class=\"line\">        [attr_title] =&gt;</span><br><span class=\"line\">        [description] =&gt;</span><br><span class=\"line\">        [xfn] =&gt;</span><br><span class=\"line\">        [db_id] =&gt; <span class=\"number\">3</span></span><br><span class=\"line\">        [menu_order] =&gt; <span class=\"number\">3</span></span><br><span class=\"line\">    )</span><br><span class=\"line\">    [<span class=\"number\">3</span>] =&gt; <span class=\"built_in\">stdClass</span> <span class=\"title function_ invoke__\">Object</span> (</span><br><span class=\"line\">        [ID] =&gt; <span class=\"number\">4</span></span><br><span class=\"line\">        [title] =&gt; App Development</span><br><span class=\"line\">        [url] =&gt; <span class=\"attr\">http</span>://example.com/app-development</span><br><span class=\"line\">        [menu_item_parent] =&gt; <span class=\"number\">2</span></span><br><span class=\"line\">        [post_type] =&gt; nav_menu_item</span><br><span class=\"line\">        [<span class=\"keyword\">object</span>] =&gt; page</span><br><span class=\"line\">        [object_id] =&gt; <span class=\"number\">8</span></span><br><span class=\"line\">        [type] =&gt; post_type</span><br><span class=\"line\">        [classes] =&gt; <span class=\"title function_ invoke__\">Array</span> ( )</span><br><span class=\"line\">        [target] =&gt;</span><br><span class=\"line\">        [attr_title] =&gt;</span><br><span class=\"line\">        [description] =&gt;</span><br><span class=\"line\">        [xfn] =&gt;</span><br><span class=\"line\">        [db_id] =&gt; <span class=\"number\">4</span></span><br><span class=\"line\">        [menu_order] =&gt; <span class=\"number\">4</span></span><br><span class=\"line\">    )</span><br><span class=\"line\">    [<span class=\"number\">4</span>] =&gt; <span class=\"built_in\">stdClass</span> <span class=\"title function_ invoke__\">Object</span> (</span><br><span class=\"line\">        [ID] =&gt; <span class=\"number\">5</span></span><br><span class=\"line\">        [title] =&gt; About Us</span><br><span class=\"line\">        [url] =&gt; <span class=\"attr\">http</span>://example.com/about-us</span><br><span class=\"line\">        [menu_item_parent] =&gt; <span class=\"number\">0</span></span><br><span class=\"line\">        [post_type] =&gt; nav_menu_item</span><br><span class=\"line\">        [<span class=\"keyword\">object</span>] =&gt; page</span><br><span class=\"line\">        [object_id] =&gt; <span class=\"number\">9</span></span><br><span class=\"line\">        [type] =&gt; post_type</span><br><span class=\"line\">        [classes] =&gt; <span class=\"title function_ invoke__\">Array</span> ( )</span><br><span class=\"line\">        [target] =&gt;</span><br><span class=\"line\">        [attr_title] =&gt;</span><br><span class=\"line\">        [description] =&gt;</span><br><span class=\"line\">        [xfn] =&gt;</span><br><span class=\"line\">        [db_id] =&gt; <span class=\"number\">5</span></span><br><span class=\"line\">        [menu_order] =&gt; <span class=\"number\">5</span></span><br><span class=\"line\">    )</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"說明：\"><a href=\"#說明：\" class=\"headerlink\" title=\"說明：\"></a>說明：</h3><ol>\n<li><code>Home</code>：是一個頂層選單項目，<code>menu_item_parent</code> 為 <code>0</code>。</li>\n<li><code>Services</code>：也是一個頂層選單項目，<code>menu_item_parent</code> 為 <code>0</code>，並且有子項目。</li>\n<li><code>Web Development</code>：是 <code>Services</code> 的子選單，<code>menu_item_parent</code> 是 <code>Services</code> 的 <code>ID</code>（即 <code>2</code>）。</li>\n<li><code>App Development</code>：也是 <code>Services</code> 的子選單，<code>menu_item_parent</code> 是 <code>Services</code> 的 <code>ID</code>（即 <code>2</code>）。</li>\n<li><code>About Us</code>：是一個頂層選單項目，<code>menu_item_parent</code> 為 <code>0</code>。</li>\n</ol>\n"},{"layout":"post","title":"Line Bot 與 Chatgpt應用 02 - 執行程式","date":"2024-09-26T12:42:52.000Z","top_img":"https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FLine-Bot%E5%92%8Cgpt%E5%AF%A6%E6%88%B0%E6%95%99%E5%AD%B8%2Freplit-python%2Fbanner.webp?alt=media&token=04b3ef21-5ea8-4c0d-9a96-318f3eeb974a","cover":"https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FLine-Bot%E5%92%8Cgpt%E5%AF%A6%E6%88%B0%E6%95%99%E5%AD%B8%2Freplit-python%2Fbanner.webp?alt=media&token=04b3ef21-5ea8-4c0d-9a96-318f3eeb974a","_content":"\n# Line Bot 和 GPT 實戰教學\n\n本教學將帶領你使用 Replit 平台運行由 GPT 支援的 Line Bot，並逐步指導你如何設定和執行這個 Python 程式碼。\n\n## 步驟 1: 進入 Replit 並複製專案\n\n首先，進入 Replit 上的大神已經寫好的 Python 程式碼頁面。\n\n[![Replit Python 程式碼](https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FLine-Bot%E5%92%8Cgpt%E5%AF%A6%E6%88%B0%E6%95%99%E5%AD%B8%2Freplit-python%2Freplit-python1.png?alt=media&token=55d33712-10f8-4ecb-a4f9-efa01177c7c1)](https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FLine-Bot%E5%92%8Cgpt%E5%AF%A6%E6%88%B0%E6%95%99%E5%AD%B8%2Freplit-python%2Freplit-python1.png?alt=media&token=55d33712-10f8-4ecb-a4f9-efa01177c7c1)\n\n點擊以下連結，進入 Replit 上的專案頁面並進行複製 (fork) 到你自己的工作區：\n\n[GPTDev_LINE_bot - Replit](https://replit.com/@uncletieke/GPTDevLINEbot)\n\n## 步驟 2: 複製專案到自己的工作區\n\n點擊 \"Fork\" 按鈕將專案複製到你的 Replit 帳戶中：\n\n[![Fork 按鈕](https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FLine-Bot%E5%92%8Cgpt%E5%AF%A6%E6%88%B0%E6%95%99%E5%AD%B8%2Freplit-python%2Freplit-python2.png?alt=media&token=ec3babd7-6fbd-4559-ae12-0678b9651292)](https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FLine-Bot%E5%92%8Cgpt%E5%AF%A6%E6%88%B0%E6%95%99%E5%AD%B8%2Freplit-python%2Freplit-python2.png?alt=media&token=ec3babd7-6fbd-4559-ae12-0678b9651292)\n\n## 步驟 3: 設定環境變數\n\n在 Replit 的專案設定中，輸入以下三個環境變數：\n\n- `LINE_SECRET`：你在 Line 開發者後台取得的 Secret\n- `LINE_TOKEN`：你在 Line 開發者後台取得的 Token\n- `OPENAI_API_KEY`：你從 OpenAI 取得的 API Key\n\n如圖所示：\n\n[![環境變數設定](https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FLine-Bot%E5%92%8Cgpt%E5%AF%A6%E6%88%B0%E6%95%99%E5%AD%B8%2Freplit-python%2Freplit-python3.png?alt=media&token=42bc5756-6ab9-4447-b3d8-dc7f0445fcca)](https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FLine-Bot%E5%92%8Cgpt%E5%AF%A6%E6%88%B0%E6%95%99%E5%AD%B8%2Freplit-python%2Freplit-python3.png?alt=media&token=42bc5756-6ab9-4447-b3d8-dc7f0445fcca)\n\n> **提示**: 如果你不知道如何取得這三個值，請私訊我以獲得幫助。\n\n## 步驟 4: 執行專案\n\n設定好環境變數後，點擊 \"Run\" 按鈕來執行程式。\n\n[![執行專案](https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FLine-Bot%E5%92%8Cgpt%E5%AF%A6%E6%88%B0%E6%95%99%E5%AD%B8%2Freplit-python%2Freplit-python5.png?alt=media&token=bb70af8f-177f-438f-a869-5c18eee774ff)](https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FLine-Bot%E5%92%8Cgpt%E5%AF%A6%E6%88%B0%E6%95%99%E5%AD%B8%2Freplit-python%2Freplit-python5.png?alt=media&token=bb70af8f-177f-438f-a869-5c18eee774ff)\n\n## 完成\n\n恭喜你，現在你的 Line Bot 已經與 GPT 整合並運行成功了！你可以開始與你的 Bot 互動，並根據需求進行進一步的開發。\n","source":"_posts/Line-Bot與Chatgpt應用-串接replit大神程式.md","raw":"---\nlayout: post\ntitle: Line Bot 與 Chatgpt應用 02 - 執行程式\ndate: 2024-09-26 20:42:52\ntags: [Line Bot]\ncategories: [Line Bot, replit設定]\ntop_img: https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FLine-Bot%E5%92%8Cgpt%E5%AF%A6%E6%88%B0%E6%95%99%E5%AD%B8%2Freplit-python%2Fbanner.webp?alt=media&token=04b3ef21-5ea8-4c0d-9a96-318f3eeb974a\ncover: https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FLine-Bot%E5%92%8Cgpt%E5%AF%A6%E6%88%B0%E6%95%99%E5%AD%B8%2Freplit-python%2Fbanner.webp?alt=media&token=04b3ef21-5ea8-4c0d-9a96-318f3eeb974a\n---\n\n# Line Bot 和 GPT 實戰教學\n\n本教學將帶領你使用 Replit 平台運行由 GPT 支援的 Line Bot，並逐步指導你如何設定和執行這個 Python 程式碼。\n\n## 步驟 1: 進入 Replit 並複製專案\n\n首先，進入 Replit 上的大神已經寫好的 Python 程式碼頁面。\n\n[![Replit Python 程式碼](https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FLine-Bot%E5%92%8Cgpt%E5%AF%A6%E6%88%B0%E6%95%99%E5%AD%B8%2Freplit-python%2Freplit-python1.png?alt=media&token=55d33712-10f8-4ecb-a4f9-efa01177c7c1)](https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FLine-Bot%E5%92%8Cgpt%E5%AF%A6%E6%88%B0%E6%95%99%E5%AD%B8%2Freplit-python%2Freplit-python1.png?alt=media&token=55d33712-10f8-4ecb-a4f9-efa01177c7c1)\n\n點擊以下連結，進入 Replit 上的專案頁面並進行複製 (fork) 到你自己的工作區：\n\n[GPTDev_LINE_bot - Replit](https://replit.com/@uncletieke/GPTDevLINEbot)\n\n## 步驟 2: 複製專案到自己的工作區\n\n點擊 \"Fork\" 按鈕將專案複製到你的 Replit 帳戶中：\n\n[![Fork 按鈕](https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FLine-Bot%E5%92%8Cgpt%E5%AF%A6%E6%88%B0%E6%95%99%E5%AD%B8%2Freplit-python%2Freplit-python2.png?alt=media&token=ec3babd7-6fbd-4559-ae12-0678b9651292)](https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FLine-Bot%E5%92%8Cgpt%E5%AF%A6%E6%88%B0%E6%95%99%E5%AD%B8%2Freplit-python%2Freplit-python2.png?alt=media&token=ec3babd7-6fbd-4559-ae12-0678b9651292)\n\n## 步驟 3: 設定環境變數\n\n在 Replit 的專案設定中，輸入以下三個環境變數：\n\n- `LINE_SECRET`：你在 Line 開發者後台取得的 Secret\n- `LINE_TOKEN`：你在 Line 開發者後台取得的 Token\n- `OPENAI_API_KEY`：你從 OpenAI 取得的 API Key\n\n如圖所示：\n\n[![環境變數設定](https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FLine-Bot%E5%92%8Cgpt%E5%AF%A6%E6%88%B0%E6%95%99%E5%AD%B8%2Freplit-python%2Freplit-python3.png?alt=media&token=42bc5756-6ab9-4447-b3d8-dc7f0445fcca)](https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FLine-Bot%E5%92%8Cgpt%E5%AF%A6%E6%88%B0%E6%95%99%E5%AD%B8%2Freplit-python%2Freplit-python3.png?alt=media&token=42bc5756-6ab9-4447-b3d8-dc7f0445fcca)\n\n> **提示**: 如果你不知道如何取得這三個值，請私訊我以獲得幫助。\n\n## 步驟 4: 執行專案\n\n設定好環境變數後，點擊 \"Run\" 按鈕來執行程式。\n\n[![執行專案](https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FLine-Bot%E5%92%8Cgpt%E5%AF%A6%E6%88%B0%E6%95%99%E5%AD%B8%2Freplit-python%2Freplit-python5.png?alt=media&token=bb70af8f-177f-438f-a869-5c18eee774ff)](https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FLine-Bot%E5%92%8Cgpt%E5%AF%A6%E6%88%B0%E6%95%99%E5%AD%B8%2Freplit-python%2Freplit-python5.png?alt=media&token=bb70af8f-177f-438f-a869-5c18eee774ff)\n\n## 完成\n\n恭喜你，現在你的 Line Bot 已經與 GPT 整合並運行成功了！你可以開始與你的 Bot 互動，並根據需求進行進一步的開發。\n","slug":"Line-Bot與Chatgpt應用-串接replit大神程式","published":1,"updated":"2024-09-26T12:47:19.912Z","_id":"cm1j5j2jg0000ebexg1n1euc3","comments":1,"photos":[],"content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h1 id=\"Line-Bot-和-GPT-實戰教學\"><a href=\"#Line-Bot-和-GPT-實戰教學\" class=\"headerlink\" title=\"Line Bot 和 GPT 實戰教學\"></a>Line Bot 和 GPT 實戰教學</h1><p>本教學將帶領你使用 Replit 平台運行由 GPT 支援的 Line Bot，並逐步指導你如何設定和執行這個 Python 程式碼。</p>\n<h2 id=\"步驟-1-進入-Replit-並複製專案\"><a href=\"#步驟-1-進入-Replit-並複製專案\" class=\"headerlink\" title=\"步驟 1: 進入 Replit 並複製專案\"></a>步驟 1: 進入 Replit 並複製專案</h2><p>首先，進入 Replit 上的大神已經寫好的 Python 程式碼頁面。</p>\n<p><a href=\"https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FLine-Bot%E5%92%8Cgpt%E5%AF%A6%E6%88%B0%E6%95%99%E5%AD%B8%2Freplit-python%2Freplit-python1.png?alt=media&token=55d33712-10f8-4ecb-a4f9-efa01177c7c1\"><img src=\"https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FLine-Bot%E5%92%8Cgpt%E5%AF%A6%E6%88%B0%E6%95%99%E5%AD%B8%2Freplit-python%2Freplit-python1.png?alt=media&token=55d33712-10f8-4ecb-a4f9-efa01177c7c1\" alt=\"Replit Python 程式碼\"></a></p>\n<p>點擊以下連結，進入 Replit 上的專案頁面並進行複製 (fork) 到你自己的工作區：</p>\n<p><a href=\"https://replit.com/@uncletieke/GPTDevLINEbot\">GPTDev_LINE_bot - Replit</a></p>\n<h2 id=\"步驟-2-複製專案到自己的工作區\"><a href=\"#步驟-2-複製專案到自己的工作區\" class=\"headerlink\" title=\"步驟 2: 複製專案到自己的工作區\"></a>步驟 2: 複製專案到自己的工作區</h2><p>點擊 “Fork” 按鈕將專案複製到你的 Replit 帳戶中：</p>\n<p><a href=\"https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FLine-Bot%E5%92%8Cgpt%E5%AF%A6%E6%88%B0%E6%95%99%E5%AD%B8%2Freplit-python%2Freplit-python2.png?alt=media&token=ec3babd7-6fbd-4559-ae12-0678b9651292\"><img src=\"https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FLine-Bot%E5%92%8Cgpt%E5%AF%A6%E6%88%B0%E6%95%99%E5%AD%B8%2Freplit-python%2Freplit-python2.png?alt=media&token=ec3babd7-6fbd-4559-ae12-0678b9651292\" alt=\"Fork 按鈕\"></a></p>\n<h2 id=\"步驟-3-設定環境變數\"><a href=\"#步驟-3-設定環境變數\" class=\"headerlink\" title=\"步驟 3: 設定環境變數\"></a>步驟 3: 設定環境變數</h2><p>在 Replit 的專案設定中，輸入以下三個環境變數：</p>\n<ul>\n<li><code>LINE_SECRET</code>：你在 Line 開發者後台取得的 Secret</li>\n<li><code>LINE_TOKEN</code>：你在 Line 開發者後台取得的 Token</li>\n<li><code>OPENAI_API_KEY</code>：你從 OpenAI 取得的 API Key</li>\n</ul>\n<p>如圖所示：</p>\n<p><a href=\"https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FLine-Bot%E5%92%8Cgpt%E5%AF%A6%E6%88%B0%E6%95%99%E5%AD%B8%2Freplit-python%2Freplit-python3.png?alt=media&token=42bc5756-6ab9-4447-b3d8-dc7f0445fcca\"><img src=\"https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FLine-Bot%E5%92%8Cgpt%E5%AF%A6%E6%88%B0%E6%95%99%E5%AD%B8%2Freplit-python%2Freplit-python3.png?alt=media&token=42bc5756-6ab9-4447-b3d8-dc7f0445fcca\" alt=\"環境變數設定\"></a></p>\n<blockquote>\n<p><strong>提示</strong>: 如果你不知道如何取得這三個值，請私訊我以獲得幫助。</p>\n</blockquote>\n<h2 id=\"步驟-4-執行專案\"><a href=\"#步驟-4-執行專案\" class=\"headerlink\" title=\"步驟 4: 執行專案\"></a>步驟 4: 執行專案</h2><p>設定好環境變數後，點擊 “Run” 按鈕來執行程式。</p>\n<p><a href=\"https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FLine-Bot%E5%92%8Cgpt%E5%AF%A6%E6%88%B0%E6%95%99%E5%AD%B8%2Freplit-python%2Freplit-python5.png?alt=media&token=bb70af8f-177f-438f-a869-5c18eee774ff\"><img src=\"https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FLine-Bot%E5%92%8Cgpt%E5%AF%A6%E6%88%B0%E6%95%99%E5%AD%B8%2Freplit-python%2Freplit-python5.png?alt=media&token=bb70af8f-177f-438f-a869-5c18eee774ff\" alt=\"執行專案\"></a></p>\n<h2 id=\"完成\"><a href=\"#完成\" class=\"headerlink\" title=\"完成\"></a>完成</h2><p>恭喜你，現在你的 Line Bot 已經與 GPT 整合並運行成功了！你可以開始與你的 Bot 互動，並根據需求進行進一步的開發。</p>\n","cover_type":"img","excerpt":"","more":"<h1 id=\"Line-Bot-和-GPT-實戰教學\"><a href=\"#Line-Bot-和-GPT-實戰教學\" class=\"headerlink\" title=\"Line Bot 和 GPT 實戰教學\"></a>Line Bot 和 GPT 實戰教學</h1><p>本教學將帶領你使用 Replit 平台運行由 GPT 支援的 Line Bot，並逐步指導你如何設定和執行這個 Python 程式碼。</p>\n<h2 id=\"步驟-1-進入-Replit-並複製專案\"><a href=\"#步驟-1-進入-Replit-並複製專案\" class=\"headerlink\" title=\"步驟 1: 進入 Replit 並複製專案\"></a>步驟 1: 進入 Replit 並複製專案</h2><p>首先，進入 Replit 上的大神已經寫好的 Python 程式碼頁面。</p>\n<p><a href=\"https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FLine-Bot%E5%92%8Cgpt%E5%AF%A6%E6%88%B0%E6%95%99%E5%AD%B8%2Freplit-python%2Freplit-python1.png?alt=media&token=55d33712-10f8-4ecb-a4f9-efa01177c7c1\"><img src=\"https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FLine-Bot%E5%92%8Cgpt%E5%AF%A6%E6%88%B0%E6%95%99%E5%AD%B8%2Freplit-python%2Freplit-python1.png?alt=media&token=55d33712-10f8-4ecb-a4f9-efa01177c7c1\" alt=\"Replit Python 程式碼\"></a></p>\n<p>點擊以下連結，進入 Replit 上的專案頁面並進行複製 (fork) 到你自己的工作區：</p>\n<p><a href=\"https://replit.com/@uncletieke/GPTDevLINEbot\">GPTDev_LINE_bot - Replit</a></p>\n<h2 id=\"步驟-2-複製專案到自己的工作區\"><a href=\"#步驟-2-複製專案到自己的工作區\" class=\"headerlink\" title=\"步驟 2: 複製專案到自己的工作區\"></a>步驟 2: 複製專案到自己的工作區</h2><p>點擊 “Fork” 按鈕將專案複製到你的 Replit 帳戶中：</p>\n<p><a href=\"https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FLine-Bot%E5%92%8Cgpt%E5%AF%A6%E6%88%B0%E6%95%99%E5%AD%B8%2Freplit-python%2Freplit-python2.png?alt=media&token=ec3babd7-6fbd-4559-ae12-0678b9651292\"><img src=\"https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FLine-Bot%E5%92%8Cgpt%E5%AF%A6%E6%88%B0%E6%95%99%E5%AD%B8%2Freplit-python%2Freplit-python2.png?alt=media&token=ec3babd7-6fbd-4559-ae12-0678b9651292\" alt=\"Fork 按鈕\"></a></p>\n<h2 id=\"步驟-3-設定環境變數\"><a href=\"#步驟-3-設定環境變數\" class=\"headerlink\" title=\"步驟 3: 設定環境變數\"></a>步驟 3: 設定環境變數</h2><p>在 Replit 的專案設定中，輸入以下三個環境變數：</p>\n<ul>\n<li><code>LINE_SECRET</code>：你在 Line 開發者後台取得的 Secret</li>\n<li><code>LINE_TOKEN</code>：你在 Line 開發者後台取得的 Token</li>\n<li><code>OPENAI_API_KEY</code>：你從 OpenAI 取得的 API Key</li>\n</ul>\n<p>如圖所示：</p>\n<p><a href=\"https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FLine-Bot%E5%92%8Cgpt%E5%AF%A6%E6%88%B0%E6%95%99%E5%AD%B8%2Freplit-python%2Freplit-python3.png?alt=media&token=42bc5756-6ab9-4447-b3d8-dc7f0445fcca\"><img src=\"https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FLine-Bot%E5%92%8Cgpt%E5%AF%A6%E6%88%B0%E6%95%99%E5%AD%B8%2Freplit-python%2Freplit-python3.png?alt=media&token=42bc5756-6ab9-4447-b3d8-dc7f0445fcca\" alt=\"環境變數設定\"></a></p>\n<blockquote>\n<p><strong>提示</strong>: 如果你不知道如何取得這三個值，請私訊我以獲得幫助。</p>\n</blockquote>\n<h2 id=\"步驟-4-執行專案\"><a href=\"#步驟-4-執行專案\" class=\"headerlink\" title=\"步驟 4: 執行專案\"></a>步驟 4: 執行專案</h2><p>設定好環境變數後，點擊 “Run” 按鈕來執行程式。</p>\n<p><a href=\"https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FLine-Bot%E5%92%8Cgpt%E5%AF%A6%E6%88%B0%E6%95%99%E5%AD%B8%2Freplit-python%2Freplit-python5.png?alt=media&token=bb70af8f-177f-438f-a869-5c18eee774ff\"><img src=\"https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FLine-Bot%E5%92%8Cgpt%E5%AF%A6%E6%88%B0%E6%95%99%E5%AD%B8%2Freplit-python%2Freplit-python5.png?alt=media&token=bb70af8f-177f-438f-a869-5c18eee774ff\" alt=\"執行專案\"></a></p>\n<h2 id=\"完成\"><a href=\"#完成\" class=\"headerlink\" title=\"完成\"></a>完成</h2><p>恭喜你，現在你的 Line Bot 已經與 GPT 整合並運行成功了！你可以開始與你的 Bot 互動，並根據需求進行進一步的開發。</p>\n"},{"layout":"post","title":"在 Mac vscode 中使用 Code Runner 和 C/C++ 插件來編譯與執行 C++ 程式","date":"2024-09-30T15:22:52.000Z","top_img":"https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2Fmac%20%E5%9C%A8%20vscode%20%E5%9F%B7%E8%A1%8C%20c%2B%2B%2Flogo.webp?alt=media&token=81620eff-892d-4194-9b04-d8ddf12fae6c","cover":"https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2Fmac%20%E5%9C%A8%20vscode%20%E5%9F%B7%E8%A1%8C%20c%2B%2B%2Flogo.webp?alt=media&token=81620eff-892d-4194-9b04-d8ddf12fae6c","_content":"\n今天在學校老師突然派一個 c++作業，結果我電腦還沒裝 C++環境，讀檔案一直出問題，我決定今天好好寫一個 Mac 在 vscode 中執行 C++ 的教學。\n\n---\n\n### 在 Mac 上使用 VSCode 的 Code Runner 和 C/C++ 插件來編譯與執行 C++ 程式\n\n這個教學將詳細說明如何使用 **VSCode** 的 **Code Runner** 和 **C/C++ 插件** 來編譯與執行 C++ 程式，並介紹幾個常見功能按鈕的說明。\n\n---\n\n### 1. 確認安裝 Clang 編譯器\n\n**補充：在使用 Clang 之前，必須確保你的 Mac 上已經安裝了 Xcode 或 Xcode Command Line Tools，因為 Clang 是隨 Xcode 一起安裝的。**\n\n### **確認是否已安裝 Xcode**\n\n- 打開 **終端**（Terminal）並輸入以下指令來確認 Xcode 是否已安裝：如果已經安裝，你會看到提示訊息告訴你 Xcode Command Line Tools 已經安裝。如果尚未安裝，系統將自動引導你進行安裝。\n  ```bash\n  xcode-select --install\n  ```\n\n### **檢查 Clang 版本**\n\n1. 打開 **終端**（Terminal）。\n2. 輸入以下指令來檢查 Clang 的版本：\n\n   ```bash\n   clang --version\n   ```\n\n3. 如果 Clang 已安裝，終端會顯示如下類似的版本資訊：\n\n   ```yaml\n   Apple clang version 14.0.3 (clang-1403.0.22.14.1)\n   Target: x86_64-apple-darwin22.5.0\n   Thread model: posix\n   InstalledDir: /Library/Developer/CommandLineTools/usr/bin\n   ```\n\n---\n\n### 2. 使用 Code Runner 和 C/C++ 插件執行 C++ 程式\n\n在進行程式開發之前，你需要在 **VSCode** 中安裝 **Code Runner** 和 **C/C++ 插件**。\n\n### **安裝 Code Runner 插件**\n\n1. 在 **VSCode** 中打開擴展市場，搜尋 **Code Runner**，然後點擊 **Install** 安裝插件。\n\n   - [Code Runner 插件下載](https://marketplace.visualstudio.com/items?itemName=formulahendry.code-runner)\n\n   ![Code Runner 插件畫面](https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2Fmac%20%E5%9C%A8%20vscode%20%E5%9F%B7%E8%A1%8C%20c%2B%2B%2Fvscode-c%2B%2B2.png?alt=media&token=e98ba65b-edb2-4297-9624-958312ecacb9)\n\n### **安裝 C/C++ 插件**\n\n1. 在 **VSCode** 中搜尋 **C/C++**，然後點擊 **Install** 安裝插件。\n\n   - [C/C++ 插件下載](https://marketplace.visualstudio.com/items?itemName=ms-vscode.cpptools)\n\n   ![C/C++ 插件畫面](https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2Fmac%20%E5%9C%A8%20vscode%20%E5%9F%B7%E8%A1%8C%20c%2B%2B%2Fvscode-c%2B%2B1.png?alt=media&token=1c42e65c-d4b0-4e61-862a-78d16a519637)\n\n---\n\n### 3. 編寫與運行 C++ 程式\n\n1. **創建 C++ 檔案**：\n\n   - 在 **VSCode** 中創建一個新檔案 `hello.cpp`，並寫入以下 C++ 代碼：\n\n     ```cpp\n     cpp\n     複製程式碼\n     #include <iostream>using namespace std;\n\n     int main() {\n         string greeting = \"Hello, World!\";\n         string welcome = \"Welcome to C++ programming!\";\n         string message = \"Let's learn and have fun!\";\n         int year = 2023;\n         double version = 1.0;\n         char initial = 'C';\n\n         cout << greeting << endl;\n         cout << welcome << endl;\n         cout << message << endl;\n         cout << \"Current year: \" << year << endl;\n         cout << \"Version: \" << version << endl;\n         cout << \"Initial: \" << initial << endl;\n\n         for (int i = 1; i <= 14; ++i) {\n             cout << \"This is line number \" << i + 6 << endl;\n         }\n\n         return 0;\n     }\n\n     ```\n\n2. **執行程式碼**：\n\n   - 使用 **Code Runner** 插件，你可以直接運行程式碼，無需手動編譯。按下 **執行按鈕**（Run Code）。\n   - 程式的輸出會顯示在 **VSCode** 的終端中。\n\n   ![執行 C++ 程式畫面](https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2Fmac%20%E5%9C%A8%20vscode%20%E5%9F%B7%E8%A1%8C%20c%2B%2B%2Fvscode-c%2B%2B3.png?alt=media&token=f0a05a16-640f-4afc-9e49-0845bb5f7328)\n\n   ![執行結果畫面](https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2Fmac%20%E5%9C%A8%20vscode%20%E5%9F%B7%E8%A1%8C%20c%2B%2B%2Fvscode-c%2B%2B4.png?alt=media&token=b54995aa-fb3d-43ba-9aae-96d777de5f59)\n\n---\n\n### 4. 功能按鈕的使用說明\n\n在你使用 **Code Runner** 和 **C/C++ 插件** 時，可能會看到以下幾個選項：\n\n1. **CompileRun: Compile with default flags & Run with default arguments**\n   - 使用預設的編譯選項來編譯並執行程式。\n2. **Debug C/C++ File**\n   - 啟動 C/C++ 的除錯模式，允許你設置斷點、逐步執行程式並檢查變數。\n3. **Run Code**\n   - 使用 **Code Runner** 插件直接運行程式，不需手動編譯，適合快速測試。\n4. **CompileRun: Debug**\n   - 使用除錯模式進行編譯和執行，便於進行問題排查。\n5. **Run C/C++ File**\n   - 專門針對 C/C++ 檔案進行執行，通常會先編譯再運行。\n\n這些功能按鈕能讓你靈活選擇是否快速測試、完整編譯或進行除錯，根據需求選擇合適的功能即可。\n\n![功能按鈕選項畫面](https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2Fmac%20%E5%9C%A8%20vscode%20%E5%9F%B7%E8%A1%8C%20c%2B%2B%2Fvscode-c%2B%2B5.png?alt=media&token=16237bbf-7d95-4230-965b-d06e511aa7b5)\n\n---\n\n### 5. 執行結果\n\n當你成功編譯和執行程式後，應該會在 **VSCode** 終端中看到以下輸出：\n\n```vbnet\nvbnet\n複製程式碼\nHello, World!\nWelcome to C++ programming!\nLet's learn and have fun!\nCurrent year: 2023\nVersion: 1.0\nInitial: C\nThis is line number 7\nThis is line number 8\n...\nThis is line number 20\n\n```\n\n---\n\n### Debug 逐行教學\n\n當你進入 **Debug 模式** 後，可以逐行檢查程式的運行情況。以下是一個變數在 Debug 模式下顯示的範例：\n\n1. 可以看到變數 `greeting` 及其值已在右側顯示。\n\n   ![Debug 模式畫面](https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2Fmac%20%E5%9C%A8%20vscode%20%E5%9F%B7%E8%A1%8C%20c%2B%2B%2Fvscode-c%2B%2B6.png?alt=media&token=e0b4e072-a7ef-43a6-9845-65716b722a96)\n","source":"_posts/在-Mac-vscode-中使用-Code-Runner-和-C-C-插件來編譯與執行-C-程式.md","raw":"---\nlayout: post\ntitle: 在 Mac vscode 中使用 Code Runner 和 C/C++ 插件來編譯與執行 C++ 程式\ndate: 2024-09-30 23:22:52\ntags: [開發環境]\ncategories: [開發環境, 使用Mac在vscode執行C++]\ntop_img: https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2Fmac%20%E5%9C%A8%20vscode%20%E5%9F%B7%E8%A1%8C%20c%2B%2B%2Flogo.webp?alt=media&token=81620eff-892d-4194-9b04-d8ddf12fae6c\ncover: https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2Fmac%20%E5%9C%A8%20vscode%20%E5%9F%B7%E8%A1%8C%20c%2B%2B%2Flogo.webp?alt=media&token=81620eff-892d-4194-9b04-d8ddf12fae6c\n---\n\n今天在學校老師突然派一個 c++作業，結果我電腦還沒裝 C++環境，讀檔案一直出問題，我決定今天好好寫一個 Mac 在 vscode 中執行 C++ 的教學。\n\n---\n\n### 在 Mac 上使用 VSCode 的 Code Runner 和 C/C++ 插件來編譯與執行 C++ 程式\n\n這個教學將詳細說明如何使用 **VSCode** 的 **Code Runner** 和 **C/C++ 插件** 來編譯與執行 C++ 程式，並介紹幾個常見功能按鈕的說明。\n\n---\n\n### 1. 確認安裝 Clang 編譯器\n\n**補充：在使用 Clang 之前，必須確保你的 Mac 上已經安裝了 Xcode 或 Xcode Command Line Tools，因為 Clang 是隨 Xcode 一起安裝的。**\n\n### **確認是否已安裝 Xcode**\n\n- 打開 **終端**（Terminal）並輸入以下指令來確認 Xcode 是否已安裝：如果已經安裝，你會看到提示訊息告訴你 Xcode Command Line Tools 已經安裝。如果尚未安裝，系統將自動引導你進行安裝。\n  ```bash\n  xcode-select --install\n  ```\n\n### **檢查 Clang 版本**\n\n1. 打開 **終端**（Terminal）。\n2. 輸入以下指令來檢查 Clang 的版本：\n\n   ```bash\n   clang --version\n   ```\n\n3. 如果 Clang 已安裝，終端會顯示如下類似的版本資訊：\n\n   ```yaml\n   Apple clang version 14.0.3 (clang-1403.0.22.14.1)\n   Target: x86_64-apple-darwin22.5.0\n   Thread model: posix\n   InstalledDir: /Library/Developer/CommandLineTools/usr/bin\n   ```\n\n---\n\n### 2. 使用 Code Runner 和 C/C++ 插件執行 C++ 程式\n\n在進行程式開發之前，你需要在 **VSCode** 中安裝 **Code Runner** 和 **C/C++ 插件**。\n\n### **安裝 Code Runner 插件**\n\n1. 在 **VSCode** 中打開擴展市場，搜尋 **Code Runner**，然後點擊 **Install** 安裝插件。\n\n   - [Code Runner 插件下載](https://marketplace.visualstudio.com/items?itemName=formulahendry.code-runner)\n\n   ![Code Runner 插件畫面](https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2Fmac%20%E5%9C%A8%20vscode%20%E5%9F%B7%E8%A1%8C%20c%2B%2B%2Fvscode-c%2B%2B2.png?alt=media&token=e98ba65b-edb2-4297-9624-958312ecacb9)\n\n### **安裝 C/C++ 插件**\n\n1. 在 **VSCode** 中搜尋 **C/C++**，然後點擊 **Install** 安裝插件。\n\n   - [C/C++ 插件下載](https://marketplace.visualstudio.com/items?itemName=ms-vscode.cpptools)\n\n   ![C/C++ 插件畫面](https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2Fmac%20%E5%9C%A8%20vscode%20%E5%9F%B7%E8%A1%8C%20c%2B%2B%2Fvscode-c%2B%2B1.png?alt=media&token=1c42e65c-d4b0-4e61-862a-78d16a519637)\n\n---\n\n### 3. 編寫與運行 C++ 程式\n\n1. **創建 C++ 檔案**：\n\n   - 在 **VSCode** 中創建一個新檔案 `hello.cpp`，並寫入以下 C++ 代碼：\n\n     ```cpp\n     cpp\n     複製程式碼\n     #include <iostream>using namespace std;\n\n     int main() {\n         string greeting = \"Hello, World!\";\n         string welcome = \"Welcome to C++ programming!\";\n         string message = \"Let's learn and have fun!\";\n         int year = 2023;\n         double version = 1.0;\n         char initial = 'C';\n\n         cout << greeting << endl;\n         cout << welcome << endl;\n         cout << message << endl;\n         cout << \"Current year: \" << year << endl;\n         cout << \"Version: \" << version << endl;\n         cout << \"Initial: \" << initial << endl;\n\n         for (int i = 1; i <= 14; ++i) {\n             cout << \"This is line number \" << i + 6 << endl;\n         }\n\n         return 0;\n     }\n\n     ```\n\n2. **執行程式碼**：\n\n   - 使用 **Code Runner** 插件，你可以直接運行程式碼，無需手動編譯。按下 **執行按鈕**（Run Code）。\n   - 程式的輸出會顯示在 **VSCode** 的終端中。\n\n   ![執行 C++ 程式畫面](https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2Fmac%20%E5%9C%A8%20vscode%20%E5%9F%B7%E8%A1%8C%20c%2B%2B%2Fvscode-c%2B%2B3.png?alt=media&token=f0a05a16-640f-4afc-9e49-0845bb5f7328)\n\n   ![執行結果畫面](https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2Fmac%20%E5%9C%A8%20vscode%20%E5%9F%B7%E8%A1%8C%20c%2B%2B%2Fvscode-c%2B%2B4.png?alt=media&token=b54995aa-fb3d-43ba-9aae-96d777de5f59)\n\n---\n\n### 4. 功能按鈕的使用說明\n\n在你使用 **Code Runner** 和 **C/C++ 插件** 時，可能會看到以下幾個選項：\n\n1. **CompileRun: Compile with default flags & Run with default arguments**\n   - 使用預設的編譯選項來編譯並執行程式。\n2. **Debug C/C++ File**\n   - 啟動 C/C++ 的除錯模式，允許你設置斷點、逐步執行程式並檢查變數。\n3. **Run Code**\n   - 使用 **Code Runner** 插件直接運行程式，不需手動編譯，適合快速測試。\n4. **CompileRun: Debug**\n   - 使用除錯模式進行編譯和執行，便於進行問題排查。\n5. **Run C/C++ File**\n   - 專門針對 C/C++ 檔案進行執行，通常會先編譯再運行。\n\n這些功能按鈕能讓你靈活選擇是否快速測試、完整編譯或進行除錯，根據需求選擇合適的功能即可。\n\n![功能按鈕選項畫面](https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2Fmac%20%E5%9C%A8%20vscode%20%E5%9F%B7%E8%A1%8C%20c%2B%2B%2Fvscode-c%2B%2B5.png?alt=media&token=16237bbf-7d95-4230-965b-d06e511aa7b5)\n\n---\n\n### 5. 執行結果\n\n當你成功編譯和執行程式後，應該會在 **VSCode** 終端中看到以下輸出：\n\n```vbnet\nvbnet\n複製程式碼\nHello, World!\nWelcome to C++ programming!\nLet's learn and have fun!\nCurrent year: 2023\nVersion: 1.0\nInitial: C\nThis is line number 7\nThis is line number 8\n...\nThis is line number 20\n\n```\n\n---\n\n### Debug 逐行教學\n\n當你進入 **Debug 模式** 後，可以逐行檢查程式的運行情況。以下是一個變數在 Debug 模式下顯示的範例：\n\n1. 可以看到變數 `greeting` 及其值已在右側顯示。\n\n   ![Debug 模式畫面](https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2Fmac%20%E5%9C%A8%20vscode%20%E5%9F%B7%E8%A1%8C%20c%2B%2B%2Fvscode-c%2B%2B6.png?alt=media&token=e0b4e072-a7ef-43a6-9845-65716b722a96)\n","slug":"在-Mac-vscode-中使用-Code-Runner-和-C-C-插件來編譯與執行-C-程式","published":1,"updated":"2024-09-30T16:01:01.717Z","_id":"cm1p5svuj0000ezex2rqw7nwt","comments":1,"photos":[],"content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>今天在學校老師突然派一個 c++作業，結果我電腦還沒裝 C++環境，讀檔案一直出問題，我決定今天好好寫一個 Mac 在 vscode 中執行 C++ 的教學。</p>\n<hr>\n<h3 id=\"在-Mac-上使用-VSCode-的-Code-Runner-和-C-C-插件來編譯與執行-C-程式\"><a href=\"#在-Mac-上使用-VSCode-的-Code-Runner-和-C-C-插件來編譯與執行-C-程式\" class=\"headerlink\" title=\"在 Mac 上使用 VSCode 的 Code Runner 和 C&#x2F;C++ 插件來編譯與執行 C++ 程式\"></a>在 Mac 上使用 VSCode 的 Code Runner 和 C&#x2F;C++ 插件來編譯與執行 C++ 程式</h3><p>這個教學將詳細說明如何使用 <strong>VSCode</strong> 的 <strong>Code Runner</strong> 和 <strong>C&#x2F;C++ 插件</strong> 來編譯與執行 C++ 程式，並介紹幾個常見功能按鈕的說明。</p>\n<hr>\n<h3 id=\"1-確認安裝-Clang-編譯器\"><a href=\"#1-確認安裝-Clang-編譯器\" class=\"headerlink\" title=\"1. 確認安裝 Clang 編譯器\"></a>1. 確認安裝 Clang 編譯器</h3><p><strong>補充：在使用 Clang 之前，必須確保你的 Mac 上已經安裝了 Xcode 或 Xcode Command Line Tools，因為 Clang 是隨 Xcode 一起安裝的。</strong></p>\n<h3 id=\"確認是否已安裝-Xcode\"><a href=\"#確認是否已安裝-Xcode\" class=\"headerlink\" title=\"確認是否已安裝 Xcode\"></a><strong>確認是否已安裝 Xcode</strong></h3><ul>\n<li>打開 <strong>終端</strong>（Terminal）並輸入以下指令來確認 Xcode 是否已安裝：如果已經安裝，你會看到提示訊息告訴你 Xcode Command Line Tools 已經安裝。如果尚未安裝，系統將自動引導你進行安裝。<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xcode-select --install</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"檢查-Clang-版本\"><a href=\"#檢查-Clang-版本\" class=\"headerlink\" title=\"檢查 Clang 版本\"></a><strong>檢查 Clang 版本</strong></h3><ol>\n<li><p>打開 <strong>終端</strong>（Terminal）。</p>\n</li>\n<li><p>輸入以下指令來檢查 Clang 的版本：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">clang --version</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>如果 Clang 已安裝，終端會顯示如下類似的版本資訊：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">Apple</span> <span class=\"string\">clang</span> <span class=\"string\">version</span> <span class=\"number\">14.0</span><span class=\"number\">.3</span> <span class=\"string\">(clang-1403.0.22.14.1)</span></span><br><span class=\"line\"><span class=\"attr\">Target:</span> <span class=\"string\">x86_64-apple-darwin22.5.0</span></span><br><span class=\"line\"><span class=\"attr\">Thread model:</span> <span class=\"string\">posix</span></span><br><span class=\"line\"><span class=\"attr\">InstalledDir:</span> <span class=\"string\">/Library/Developer/CommandLineTools/usr/bin</span></span><br></pre></td></tr></table></figure></li>\n</ol>\n<hr>\n<h3 id=\"2-使用-Code-Runner-和-C-C-插件執行-C-程式\"><a href=\"#2-使用-Code-Runner-和-C-C-插件執行-C-程式\" class=\"headerlink\" title=\"2. 使用 Code Runner 和 C&#x2F;C++ 插件執行 C++ 程式\"></a>2. 使用 Code Runner 和 C&#x2F;C++ 插件執行 C++ 程式</h3><p>在進行程式開發之前，你需要在 <strong>VSCode</strong> 中安裝 <strong>Code Runner</strong> 和 <strong>C&#x2F;C++ 插件</strong>。</p>\n<h3 id=\"安裝-Code-Runner-插件\"><a href=\"#安裝-Code-Runner-插件\" class=\"headerlink\" title=\"安裝 Code Runner 插件\"></a><strong>安裝 Code Runner 插件</strong></h3><ol>\n<li><p>在 <strong>VSCode</strong> 中打開擴展市場，搜尋 <strong>Code Runner</strong>，然後點擊 <strong>Install</strong> 安裝插件。</p>\n<ul>\n<li><a href=\"https://marketplace.visualstudio.com/items?itemName=formulahendry.code-runner\">Code Runner 插件下載</a></li>\n</ul>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2Fmac%20%E5%9C%A8%20vscode%20%E5%9F%B7%E8%A1%8C%20c%2B%2B%2Fvscode-c%2B%2B2.png?alt=media&token=e98ba65b-edb2-4297-9624-958312ecacb9\" alt=\"Code Runner 插件畫面\"></p>\n</li>\n</ol>\n<h3 id=\"安裝-C-C-插件\"><a href=\"#安裝-C-C-插件\" class=\"headerlink\" title=\"安裝 C&#x2F;C++ 插件\"></a><strong>安裝 C&#x2F;C++ 插件</strong></h3><ol>\n<li><p>在 <strong>VSCode</strong> 中搜尋 **C&#x2F;C++**，然後點擊 <strong>Install</strong> 安裝插件。</p>\n<ul>\n<li><a href=\"https://marketplace.visualstudio.com/items?itemName=ms-vscode.cpptools\">C&#x2F;C++ 插件下載</a></li>\n</ul>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2Fmac%20%E5%9C%A8%20vscode%20%E5%9F%B7%E8%A1%8C%20c%2B%2B%2Fvscode-c%2B%2B1.png?alt=media&token=1c42e65c-d4b0-4e61-862a-78d16a519637\" alt=\"C/C++ 插件畫面\"></p>\n</li>\n</ol>\n<hr>\n<h3 id=\"3-編寫與運行-C-程式\"><a href=\"#3-編寫與運行-C-程式\" class=\"headerlink\" title=\"3. 編寫與運行 C++ 程式\"></a>3. 編寫與運行 C++ 程式</h3><ol>\n<li><p><strong>創建 C++ 檔案</strong>：</p>\n<ul>\n<li><p>在 <strong>VSCode</strong> 中創建一個新檔案 <code>hello.cpp</code>，並寫入以下 C++ 代碼：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cpp</span><br><span class=\"line\">複製程式碼</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span>using namespace std;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    string greeting = <span class=\"string\">&quot;Hello, World!&quot;</span>;</span><br><span class=\"line\">    string welcome = <span class=\"string\">&quot;Welcome to C++ programming!&quot;</span>;</span><br><span class=\"line\">    string message = <span class=\"string\">&quot;Let&#x27;s learn and have fun!&quot;</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> year = <span class=\"number\">2023</span>;</span><br><span class=\"line\">    <span class=\"type\">double</span> version = <span class=\"number\">1.0</span>;</span><br><span class=\"line\">    <span class=\"type\">char</span> initial = <span class=\"string\">&#x27;C&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    cout &lt;&lt; greeting &lt;&lt; endl;</span><br><span class=\"line\">    cout &lt;&lt; welcome &lt;&lt; endl;</span><br><span class=\"line\">    cout &lt;&lt; message &lt;&lt; endl;</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Current year: &quot;</span> &lt;&lt; year &lt;&lt; endl;</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Version: &quot;</span> &lt;&lt; version &lt;&lt; endl;</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Initial: &quot;</span> &lt;&lt; initial &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">14</span>; ++i) &#123;</span><br><span class=\"line\">        cout &lt;&lt; <span class=\"string\">&quot;This is line number &quot;</span> &lt;&lt; i + <span class=\"number\">6</span> &lt;&lt; endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p><strong>執行程式碼</strong>：</p>\n<ul>\n<li>使用 <strong>Code Runner</strong> 插件，你可以直接運行程式碼，無需手動編譯。按下 <strong>執行按鈕</strong>（Run Code）。</li>\n<li>程式的輸出會顯示在 <strong>VSCode</strong> 的終端中。</li>\n</ul>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2Fmac%20%E5%9C%A8%20vscode%20%E5%9F%B7%E8%A1%8C%20c%2B%2B%2Fvscode-c%2B%2B3.png?alt=media&token=f0a05a16-640f-4afc-9e49-0845bb5f7328\" alt=\"執行 C++ 程式畫面\"></p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2Fmac%20%E5%9C%A8%20vscode%20%E5%9F%B7%E8%A1%8C%20c%2B%2B%2Fvscode-c%2B%2B4.png?alt=media&token=b54995aa-fb3d-43ba-9aae-96d777de5f59\" alt=\"執行結果畫面\"></p>\n</li>\n</ol>\n<hr>\n<h3 id=\"4-功能按鈕的使用說明\"><a href=\"#4-功能按鈕的使用說明\" class=\"headerlink\" title=\"4. 功能按鈕的使用說明\"></a>4. 功能按鈕的使用說明</h3><p>在你使用 <strong>Code Runner</strong> 和 <strong>C&#x2F;C++ 插件</strong> 時，可能會看到以下幾個選項：</p>\n<ol>\n<li><strong>CompileRun: Compile with default flags &amp; Run with default arguments</strong><ul>\n<li>使用預設的編譯選項來編譯並執行程式。</li>\n</ul>\n</li>\n<li><strong>Debug C&#x2F;C++ File</strong><ul>\n<li>啟動 C&#x2F;C++ 的除錯模式，允許你設置斷點、逐步執行程式並檢查變數。</li>\n</ul>\n</li>\n<li><strong>Run Code</strong><ul>\n<li>使用 <strong>Code Runner</strong> 插件直接運行程式，不需手動編譯，適合快速測試。</li>\n</ul>\n</li>\n<li><strong>CompileRun: Debug</strong><ul>\n<li>使用除錯模式進行編譯和執行，便於進行問題排查。</li>\n</ul>\n</li>\n<li><strong>Run C&#x2F;C++ File</strong><ul>\n<li>專門針對 C&#x2F;C++ 檔案進行執行，通常會先編譯再運行。</li>\n</ul>\n</li>\n</ol>\n<p>這些功能按鈕能讓你靈活選擇是否快速測試、完整編譯或進行除錯，根據需求選擇合適的功能即可。</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2Fmac%20%E5%9C%A8%20vscode%20%E5%9F%B7%E8%A1%8C%20c%2B%2B%2Fvscode-c%2B%2B5.png?alt=media&token=16237bbf-7d95-4230-965b-d06e511aa7b5\" alt=\"功能按鈕選項畫面\"></p>\n<hr>\n<h3 id=\"5-執行結果\"><a href=\"#5-執行結果\" class=\"headerlink\" title=\"5. 執行結果\"></a>5. 執行結果</h3><p>當你成功編譯和執行程式後，應該會在 <strong>VSCode</strong> 終端中看到以下輸出：</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vbnet</span><br><span class=\"line\">複製程式碼</span><br><span class=\"line\">Hello, World!</span><br><span class=\"line\">Welcome <span class=\"keyword\">to</span> C++ programming!</span><br><span class=\"line\"><span class=\"keyword\">Let</span><span class=\"comment\">&#x27;s learn and have fun!</span></span><br><span class=\"line\">Current year: <span class=\"number\">2023</span></span><br><span class=\"line\"><span class=\"symbol\">Version:</span> <span class=\"number\">1.0</span></span><br><span class=\"line\"><span class=\"symbol\">Initial:</span> C</span><br><span class=\"line\">This <span class=\"built_in\">is</span> line number <span class=\"number\">7</span></span><br><span class=\"line\">This <span class=\"built_in\">is</span> line number <span class=\"number\">8</span></span><br><span class=\"line\">...</span><br><span class=\"line\">This <span class=\"built_in\">is</span> line number <span class=\"number\">20</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<hr>\n<h3 id=\"Debug-逐行教學\"><a href=\"#Debug-逐行教學\" class=\"headerlink\" title=\"Debug 逐行教學\"></a>Debug 逐行教學</h3><p>當你進入 <strong>Debug 模式</strong> 後，可以逐行檢查程式的運行情況。以下是一個變數在 Debug 模式下顯示的範例：</p>\n<ol>\n<li><p>可以看到變數 <code>greeting</code> 及其值已在右側顯示。</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2Fmac%20%E5%9C%A8%20vscode%20%E5%9F%B7%E8%A1%8C%20c%2B%2B%2Fvscode-c%2B%2B6.png?alt=media&token=e0b4e072-a7ef-43a6-9845-65716b722a96\" alt=\"Debug 模式畫面\"></p>\n</li>\n</ol>\n","cover_type":"img","excerpt":"","more":"<p>今天在學校老師突然派一個 c++作業，結果我電腦還沒裝 C++環境，讀檔案一直出問題，我決定今天好好寫一個 Mac 在 vscode 中執行 C++ 的教學。</p>\n<hr>\n<h3 id=\"在-Mac-上使用-VSCode-的-Code-Runner-和-C-C-插件來編譯與執行-C-程式\"><a href=\"#在-Mac-上使用-VSCode-的-Code-Runner-和-C-C-插件來編譯與執行-C-程式\" class=\"headerlink\" title=\"在 Mac 上使用 VSCode 的 Code Runner 和 C&#x2F;C++ 插件來編譯與執行 C++ 程式\"></a>在 Mac 上使用 VSCode 的 Code Runner 和 C&#x2F;C++ 插件來編譯與執行 C++ 程式</h3><p>這個教學將詳細說明如何使用 <strong>VSCode</strong> 的 <strong>Code Runner</strong> 和 <strong>C&#x2F;C++ 插件</strong> 來編譯與執行 C++ 程式，並介紹幾個常見功能按鈕的說明。</p>\n<hr>\n<h3 id=\"1-確認安裝-Clang-編譯器\"><a href=\"#1-確認安裝-Clang-編譯器\" class=\"headerlink\" title=\"1. 確認安裝 Clang 編譯器\"></a>1. 確認安裝 Clang 編譯器</h3><p><strong>補充：在使用 Clang 之前，必須確保你的 Mac 上已經安裝了 Xcode 或 Xcode Command Line Tools，因為 Clang 是隨 Xcode 一起安裝的。</strong></p>\n<h3 id=\"確認是否已安裝-Xcode\"><a href=\"#確認是否已安裝-Xcode\" class=\"headerlink\" title=\"確認是否已安裝 Xcode\"></a><strong>確認是否已安裝 Xcode</strong></h3><ul>\n<li>打開 <strong>終端</strong>（Terminal）並輸入以下指令來確認 Xcode 是否已安裝：如果已經安裝，你會看到提示訊息告訴你 Xcode Command Line Tools 已經安裝。如果尚未安裝，系統將自動引導你進行安裝。<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xcode-select --install</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"檢查-Clang-版本\"><a href=\"#檢查-Clang-版本\" class=\"headerlink\" title=\"檢查 Clang 版本\"></a><strong>檢查 Clang 版本</strong></h3><ol>\n<li><p>打開 <strong>終端</strong>（Terminal）。</p>\n</li>\n<li><p>輸入以下指令來檢查 Clang 的版本：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">clang --version</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>如果 Clang 已安裝，終端會顯示如下類似的版本資訊：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">Apple</span> <span class=\"string\">clang</span> <span class=\"string\">version</span> <span class=\"number\">14.0</span><span class=\"number\">.3</span> <span class=\"string\">(clang-1403.0.22.14.1)</span></span><br><span class=\"line\"><span class=\"attr\">Target:</span> <span class=\"string\">x86_64-apple-darwin22.5.0</span></span><br><span class=\"line\"><span class=\"attr\">Thread model:</span> <span class=\"string\">posix</span></span><br><span class=\"line\"><span class=\"attr\">InstalledDir:</span> <span class=\"string\">/Library/Developer/CommandLineTools/usr/bin</span></span><br></pre></td></tr></table></figure></li>\n</ol>\n<hr>\n<h3 id=\"2-使用-Code-Runner-和-C-C-插件執行-C-程式\"><a href=\"#2-使用-Code-Runner-和-C-C-插件執行-C-程式\" class=\"headerlink\" title=\"2. 使用 Code Runner 和 C&#x2F;C++ 插件執行 C++ 程式\"></a>2. 使用 Code Runner 和 C&#x2F;C++ 插件執行 C++ 程式</h3><p>在進行程式開發之前，你需要在 <strong>VSCode</strong> 中安裝 <strong>Code Runner</strong> 和 <strong>C&#x2F;C++ 插件</strong>。</p>\n<h3 id=\"安裝-Code-Runner-插件\"><a href=\"#安裝-Code-Runner-插件\" class=\"headerlink\" title=\"安裝 Code Runner 插件\"></a><strong>安裝 Code Runner 插件</strong></h3><ol>\n<li><p>在 <strong>VSCode</strong> 中打開擴展市場，搜尋 <strong>Code Runner</strong>，然後點擊 <strong>Install</strong> 安裝插件。</p>\n<ul>\n<li><a href=\"https://marketplace.visualstudio.com/items?itemName=formulahendry.code-runner\">Code Runner 插件下載</a></li>\n</ul>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2Fmac%20%E5%9C%A8%20vscode%20%E5%9F%B7%E8%A1%8C%20c%2B%2B%2Fvscode-c%2B%2B2.png?alt=media&token=e98ba65b-edb2-4297-9624-958312ecacb9\" alt=\"Code Runner 插件畫面\"></p>\n</li>\n</ol>\n<h3 id=\"安裝-C-C-插件\"><a href=\"#安裝-C-C-插件\" class=\"headerlink\" title=\"安裝 C&#x2F;C++ 插件\"></a><strong>安裝 C&#x2F;C++ 插件</strong></h3><ol>\n<li><p>在 <strong>VSCode</strong> 中搜尋 **C&#x2F;C++**，然後點擊 <strong>Install</strong> 安裝插件。</p>\n<ul>\n<li><a href=\"https://marketplace.visualstudio.com/items?itemName=ms-vscode.cpptools\">C&#x2F;C++ 插件下載</a></li>\n</ul>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2Fmac%20%E5%9C%A8%20vscode%20%E5%9F%B7%E8%A1%8C%20c%2B%2B%2Fvscode-c%2B%2B1.png?alt=media&token=1c42e65c-d4b0-4e61-862a-78d16a519637\" alt=\"C/C++ 插件畫面\"></p>\n</li>\n</ol>\n<hr>\n<h3 id=\"3-編寫與運行-C-程式\"><a href=\"#3-編寫與運行-C-程式\" class=\"headerlink\" title=\"3. 編寫與運行 C++ 程式\"></a>3. 編寫與運行 C++ 程式</h3><ol>\n<li><p><strong>創建 C++ 檔案</strong>：</p>\n<ul>\n<li><p>在 <strong>VSCode</strong> 中創建一個新檔案 <code>hello.cpp</code>，並寫入以下 C++ 代碼：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cpp</span><br><span class=\"line\">複製程式碼</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span>using namespace std;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    string greeting = <span class=\"string\">&quot;Hello, World!&quot;</span>;</span><br><span class=\"line\">    string welcome = <span class=\"string\">&quot;Welcome to C++ programming!&quot;</span>;</span><br><span class=\"line\">    string message = <span class=\"string\">&quot;Let&#x27;s learn and have fun!&quot;</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> year = <span class=\"number\">2023</span>;</span><br><span class=\"line\">    <span class=\"type\">double</span> version = <span class=\"number\">1.0</span>;</span><br><span class=\"line\">    <span class=\"type\">char</span> initial = <span class=\"string\">&#x27;C&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    cout &lt;&lt; greeting &lt;&lt; endl;</span><br><span class=\"line\">    cout &lt;&lt; welcome &lt;&lt; endl;</span><br><span class=\"line\">    cout &lt;&lt; message &lt;&lt; endl;</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Current year: &quot;</span> &lt;&lt; year &lt;&lt; endl;</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Version: &quot;</span> &lt;&lt; version &lt;&lt; endl;</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Initial: &quot;</span> &lt;&lt; initial &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">14</span>; ++i) &#123;</span><br><span class=\"line\">        cout &lt;&lt; <span class=\"string\">&quot;This is line number &quot;</span> &lt;&lt; i + <span class=\"number\">6</span> &lt;&lt; endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p><strong>執行程式碼</strong>：</p>\n<ul>\n<li>使用 <strong>Code Runner</strong> 插件，你可以直接運行程式碼，無需手動編譯。按下 <strong>執行按鈕</strong>（Run Code）。</li>\n<li>程式的輸出會顯示在 <strong>VSCode</strong> 的終端中。</li>\n</ul>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2Fmac%20%E5%9C%A8%20vscode%20%E5%9F%B7%E8%A1%8C%20c%2B%2B%2Fvscode-c%2B%2B3.png?alt=media&token=f0a05a16-640f-4afc-9e49-0845bb5f7328\" alt=\"執行 C++ 程式畫面\"></p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2Fmac%20%E5%9C%A8%20vscode%20%E5%9F%B7%E8%A1%8C%20c%2B%2B%2Fvscode-c%2B%2B4.png?alt=media&token=b54995aa-fb3d-43ba-9aae-96d777de5f59\" alt=\"執行結果畫面\"></p>\n</li>\n</ol>\n<hr>\n<h3 id=\"4-功能按鈕的使用說明\"><a href=\"#4-功能按鈕的使用說明\" class=\"headerlink\" title=\"4. 功能按鈕的使用說明\"></a>4. 功能按鈕的使用說明</h3><p>在你使用 <strong>Code Runner</strong> 和 <strong>C&#x2F;C++ 插件</strong> 時，可能會看到以下幾個選項：</p>\n<ol>\n<li><strong>CompileRun: Compile with default flags &amp; Run with default arguments</strong><ul>\n<li>使用預設的編譯選項來編譯並執行程式。</li>\n</ul>\n</li>\n<li><strong>Debug C&#x2F;C++ File</strong><ul>\n<li>啟動 C&#x2F;C++ 的除錯模式，允許你設置斷點、逐步執行程式並檢查變數。</li>\n</ul>\n</li>\n<li><strong>Run Code</strong><ul>\n<li>使用 <strong>Code Runner</strong> 插件直接運行程式，不需手動編譯，適合快速測試。</li>\n</ul>\n</li>\n<li><strong>CompileRun: Debug</strong><ul>\n<li>使用除錯模式進行編譯和執行，便於進行問題排查。</li>\n</ul>\n</li>\n<li><strong>Run C&#x2F;C++ File</strong><ul>\n<li>專門針對 C&#x2F;C++ 檔案進行執行，通常會先編譯再運行。</li>\n</ul>\n</li>\n</ol>\n<p>這些功能按鈕能讓你靈活選擇是否快速測試、完整編譯或進行除錯，根據需求選擇合適的功能即可。</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2Fmac%20%E5%9C%A8%20vscode%20%E5%9F%B7%E8%A1%8C%20c%2B%2B%2Fvscode-c%2B%2B5.png?alt=media&token=16237bbf-7d95-4230-965b-d06e511aa7b5\" alt=\"功能按鈕選項畫面\"></p>\n<hr>\n<h3 id=\"5-執行結果\"><a href=\"#5-執行結果\" class=\"headerlink\" title=\"5. 執行結果\"></a>5. 執行結果</h3><p>當你成功編譯和執行程式後，應該會在 <strong>VSCode</strong> 終端中看到以下輸出：</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vbnet</span><br><span class=\"line\">複製程式碼</span><br><span class=\"line\">Hello, World!</span><br><span class=\"line\">Welcome <span class=\"keyword\">to</span> C++ programming!</span><br><span class=\"line\"><span class=\"keyword\">Let</span><span class=\"comment\">&#x27;s learn and have fun!</span></span><br><span class=\"line\">Current year: <span class=\"number\">2023</span></span><br><span class=\"line\"><span class=\"symbol\">Version:</span> <span class=\"number\">1.0</span></span><br><span class=\"line\"><span class=\"symbol\">Initial:</span> C</span><br><span class=\"line\">This <span class=\"built_in\">is</span> line number <span class=\"number\">7</span></span><br><span class=\"line\">This <span class=\"built_in\">is</span> line number <span class=\"number\">8</span></span><br><span class=\"line\">...</span><br><span class=\"line\">This <span class=\"built_in\">is</span> line number <span class=\"number\">20</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<hr>\n<h3 id=\"Debug-逐行教學\"><a href=\"#Debug-逐行教學\" class=\"headerlink\" title=\"Debug 逐行教學\"></a>Debug 逐行教學</h3><p>當你進入 <strong>Debug 模式</strong> 後，可以逐行檢查程式的運行情況。以下是一個變數在 Debug 模式下顯示的範例：</p>\n<ol>\n<li><p>可以看到變數 <code>greeting</code> 及其值已在右側顯示。</p>\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2Fmac%20%E5%9C%A8%20vscode%20%E5%9F%B7%E8%A1%8C%20c%2B%2B%2Fvscode-c%2B%2B6.png?alt=media&token=e0b4e072-a7ef-43a6-9845-65716b722a96\" alt=\"Debug 模式畫面\"></p>\n</li>\n</ol>\n"},{"layout":"post","title":"Mac Django 建置環境","date":"2024-10-01T05:43:31.000Z","top_img":"https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FDjango%2Fdjango%20logo.jpeg?alt=media&token=8bc6ff88-240d-4df6-af8f-3e33bf72140f","cover":"https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FDjango%2Fdjango%20logo.jpeg?alt=media&token=8bc6ff88-240d-4df6-af8f-3e33bf72140f","_content":"\n### **macOS 上下載並安裝 Django 教學指南（不使用虛擬環境，並加入 PATH 教學）**\n\n#### **步驟 1：確認安裝 Homebrew（可選）**\n\n如果你還沒有安裝 Homebrew，可以按照以下指令來安裝。Homebrew 是 macOS 上的包管理器，方便你安裝和管理軟件：\n\n1. 打開「終端機」(Terminal)，輸入以下指令來安裝 Homebrew：\n   ```bash\n   /bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"\n   ```\n2. 等待 Homebrew 安裝完成，然後更新 Homebrew：\n   ```bash\n   brew update\n   ```\n\n#### **步驟 2：安裝 Python 3**\n\n1. 確認是否已安裝 Python 3：\n   ```bash\n   python3 --version\n   ```\n   如果沒有安裝或版本過舊，可以使用 Homebrew 安裝最新的 Python 3：\n   ```bash\n   brew install python3\n   ```\n\n#### **步驟 3：安裝 Django**\n\n1. 確保 Python 3 已經安裝，然後使用 `pip3` 安裝 Django：\n\n   ```bash\n   pip3 install django\n   ```\n\n2. 安裝完成後，檢查 Django 是否已安裝成功：\n   ```bash\n   django-admin --version\n   ```\n   如果指令執行成功，會顯示 Django 的版本號，例如 `4.2.16`。\n\n#### **步驟 4：創建 Django 專案**\n\n1. 使用 `django-admin` 創建一個新專案。首先，進入你想要創建專案的目錄，然後執行以下指令：\n\n   ```bash\n   django-admin startproject <project-name>\n   ```\n\n   例如：\n\n   ```bash\n   django-admin startproject mysite\n   ```\n\n2. 進入專案目錄並運行開發伺服器：\n   ```bash\n   cd mysite\n   python3 manage.py runserver\n   ```\n   終端應顯示伺服器正在 `http://127.0.0.1:8000/` 運行。打開瀏覽器並輸入這個地址來查看 Django 的初始畫面。\n\n#### **步驟 5：解決常見錯誤**\n\n##### **`django-admin: command not found` 問題解決**\n\n如果安裝 Django 後出現 `django-admin: command not found` 錯誤，這可能是因為 Python 的執行檔沒有在系統的 PATH 中。請依照以下步驟來手動加入 PATH：\n\n1. 找到 `django-admin` 安裝路徑。根據你之前提供的資訊，Django 安裝在以下路徑：\n\n   ```\n   /Users/zhuang/Library/Python/3.9/bin\n   ```\n\n2. 在終端機中暫時添加此路徑到 PATH：\n\n   ```bash\n   export PATH=\"$PATH:/Users/zhuang/Library/Python/3.9/bin\"\n   ```\n\n3. 要使這個變更永久生效，打開或編輯 `~/.zshrc` 檔案，並將以下內容添加到檔案末尾：\n\n   ```bash\n   export PATH=\"$PATH:/Users/zhuang/Library/Python/3.9/bin\"\n   ```\n\n4. 保存檔案後，執行以下指令來使變更生效：\n\n   ```bash\n   source ~/.zshrc\n   ```\n\n5. 完成後，檢查是否可以正常使用 `django-admin`：\n   ```bash\n   django-admin --version\n   ```\n\n#### **總結**\n\n這樣你就能在 macOS 上成功下載、安裝並配置 Django，並解決了 PATH 相關的問題。\n","source":"_posts/Mac-Django-建置環境.md","raw":"---\nlayout: post\ntitle: Mac Django 建置環境\ndate: 2024-10-01 13:43:31\ntags: [Python Django]\ncategories: [Python, Django]\ntop_img: https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FDjango%2Fdjango%20logo.jpeg?alt=media&token=8bc6ff88-240d-4df6-af8f-3e33bf72140f\ncover: https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FDjango%2Fdjango%20logo.jpeg?alt=media&token=8bc6ff88-240d-4df6-af8f-3e33bf72140f\n---\n\n### **macOS 上下載並安裝 Django 教學指南（不使用虛擬環境，並加入 PATH 教學）**\n\n#### **步驟 1：確認安裝 Homebrew（可選）**\n\n如果你還沒有安裝 Homebrew，可以按照以下指令來安裝。Homebrew 是 macOS 上的包管理器，方便你安裝和管理軟件：\n\n1. 打開「終端機」(Terminal)，輸入以下指令來安裝 Homebrew：\n   ```bash\n   /bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"\n   ```\n2. 等待 Homebrew 安裝完成，然後更新 Homebrew：\n   ```bash\n   brew update\n   ```\n\n#### **步驟 2：安裝 Python 3**\n\n1. 確認是否已安裝 Python 3：\n   ```bash\n   python3 --version\n   ```\n   如果沒有安裝或版本過舊，可以使用 Homebrew 安裝最新的 Python 3：\n   ```bash\n   brew install python3\n   ```\n\n#### **步驟 3：安裝 Django**\n\n1. 確保 Python 3 已經安裝，然後使用 `pip3` 安裝 Django：\n\n   ```bash\n   pip3 install django\n   ```\n\n2. 安裝完成後，檢查 Django 是否已安裝成功：\n   ```bash\n   django-admin --version\n   ```\n   如果指令執行成功，會顯示 Django 的版本號，例如 `4.2.16`。\n\n#### **步驟 4：創建 Django 專案**\n\n1. 使用 `django-admin` 創建一個新專案。首先，進入你想要創建專案的目錄，然後執行以下指令：\n\n   ```bash\n   django-admin startproject <project-name>\n   ```\n\n   例如：\n\n   ```bash\n   django-admin startproject mysite\n   ```\n\n2. 進入專案目錄並運行開發伺服器：\n   ```bash\n   cd mysite\n   python3 manage.py runserver\n   ```\n   終端應顯示伺服器正在 `http://127.0.0.1:8000/` 運行。打開瀏覽器並輸入這個地址來查看 Django 的初始畫面。\n\n#### **步驟 5：解決常見錯誤**\n\n##### **`django-admin: command not found` 問題解決**\n\n如果安裝 Django 後出現 `django-admin: command not found` 錯誤，這可能是因為 Python 的執行檔沒有在系統的 PATH 中。請依照以下步驟來手動加入 PATH：\n\n1. 找到 `django-admin` 安裝路徑。根據你之前提供的資訊，Django 安裝在以下路徑：\n\n   ```\n   /Users/zhuang/Library/Python/3.9/bin\n   ```\n\n2. 在終端機中暫時添加此路徑到 PATH：\n\n   ```bash\n   export PATH=\"$PATH:/Users/zhuang/Library/Python/3.9/bin\"\n   ```\n\n3. 要使這個變更永久生效，打開或編輯 `~/.zshrc` 檔案，並將以下內容添加到檔案末尾：\n\n   ```bash\n   export PATH=\"$PATH:/Users/zhuang/Library/Python/3.9/bin\"\n   ```\n\n4. 保存檔案後，執行以下指令來使變更生效：\n\n   ```bash\n   source ~/.zshrc\n   ```\n\n5. 完成後，檢查是否可以正常使用 `django-admin`：\n   ```bash\n   django-admin --version\n   ```\n\n#### **總結**\n\n這樣你就能在 macOS 上成功下載、安裝並配置 Django，並解決了 PATH 相關的問題。\n","slug":"Mac-Django-建置環境","published":1,"updated":"2024-10-01T05:50:07.647Z","_id":"cm1q0kt5h0000czexhg393avq","comments":1,"photos":[],"content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h3 id=\"macOS-上下載並安裝-Django-教學指南（不使用虛擬環境，並加入-PATH-教學）\"><a href=\"#macOS-上下載並安裝-Django-教學指南（不使用虛擬環境，並加入-PATH-教學）\" class=\"headerlink\" title=\"macOS 上下載並安裝 Django 教學指南（不使用虛擬環境，並加入 PATH 教學）\"></a><strong>macOS 上下載並安裝 Django 教學指南（不使用虛擬環境，並加入 PATH 教學）</strong></h3><h4 id=\"步驟-1：確認安裝-Homebrew（可選）\"><a href=\"#步驟-1：確認安裝-Homebrew（可選）\" class=\"headerlink\" title=\"步驟 1：確認安裝 Homebrew（可選）\"></a><strong>步驟 1：確認安裝 Homebrew（可選）</strong></h4><p>如果你還沒有安裝 Homebrew，可以按照以下指令來安裝。Homebrew 是 macOS 上的包管理器，方便你安裝和管理軟件：</p>\n<ol>\n<li>打開「終端機」(Terminal)，輸入以下指令來安裝 Homebrew：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/bin/bash -c <span class=\"string\">&quot;<span class=\"subst\">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)</span>&quot;</span></span><br></pre></td></tr></table></figure></li>\n<li>等待 Homebrew 安裝完成，然後更新 Homebrew：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew update</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h4 id=\"步驟-2：安裝-Python-3\"><a href=\"#步驟-2：安裝-Python-3\" class=\"headerlink\" title=\"步驟 2：安裝 Python 3\"></a><strong>步驟 2：安裝 Python 3</strong></h4><ol>\n<li>確認是否已安裝 Python 3：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python3 --version</span><br></pre></td></tr></table></figure>\n如果沒有安裝或版本過舊，可以使用 Homebrew 安裝最新的 Python 3：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew install python3</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h4 id=\"步驟-3：安裝-Django\"><a href=\"#步驟-3：安裝-Django\" class=\"headerlink\" title=\"步驟 3：安裝 Django\"></a><strong>步驟 3：安裝 Django</strong></h4><ol>\n<li><p>確保 Python 3 已經安裝，然後使用 <code>pip3</code> 安裝 Django：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip3 install django</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>安裝完成後，檢查 Django 是否已安裝成功：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">django-admin --version</span><br></pre></td></tr></table></figure>\n<p>如果指令執行成功，會顯示 Django 的版本號，例如 <code>4.2.16</code>。</p>\n</li>\n</ol>\n<h4 id=\"步驟-4：創建-Django-專案\"><a href=\"#步驟-4：創建-Django-專案\" class=\"headerlink\" title=\"步驟 4：創建 Django 專案\"></a><strong>步驟 4：創建 Django 專案</strong></h4><ol>\n<li><p>使用 <code>django-admin</code> 創建一個新專案。首先，進入你想要創建專案的目錄，然後執行以下指令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">django-admin startproject &lt;project-name&gt;</span><br></pre></td></tr></table></figure>\n\n<p>例如：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">django-admin startproject mysite</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>進入專案目錄並運行開發伺服器：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> mysite</span><br><span class=\"line\">python3 manage.py runserver</span><br></pre></td></tr></table></figure>\n<p>終端應顯示伺服器正在 <code>http://127.0.0.1:8000/</code> 運行。打開瀏覽器並輸入這個地址來查看 Django 的初始畫面。</p>\n</li>\n</ol>\n<h4 id=\"步驟-5：解決常見錯誤\"><a href=\"#步驟-5：解決常見錯誤\" class=\"headerlink\" title=\"步驟 5：解決常見錯誤\"></a><strong>步驟 5：解決常見錯誤</strong></h4><h5 id=\"django-admin-command-not-found-問題解決\"><a href=\"#django-admin-command-not-found-問題解決\" class=\"headerlink\" title=\"django-admin: command not found 問題解決\"></a><strong><code>django-admin: command not found</code> 問題解決</strong></h5><p>如果安裝 Django 後出現 <code>django-admin: command not found</code> 錯誤，這可能是因為 Python 的執行檔沒有在系統的 PATH 中。請依照以下步驟來手動加入 PATH：</p>\n<ol>\n<li><p>找到 <code>django-admin</code> 安裝路徑。根據你之前提供的資訊，Django 安裝在以下路徑：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/Users/zhuang/Library/Python/3.9/bin</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在終端機中暫時添加此路徑到 PATH：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"string\">&quot;<span class=\"variable\">$PATH</span>:/Users/zhuang/Library/Python/3.9/bin&quot;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>要使這個變更永久生效，打開或編輯 <code>~/.zshrc</code> 檔案，並將以下內容添加到檔案末尾：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"string\">&quot;<span class=\"variable\">$PATH</span>:/Users/zhuang/Library/Python/3.9/bin&quot;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>保存檔案後，執行以下指令來使變更生效：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">source</span> ~/.zshrc</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>完成後，檢查是否可以正常使用 <code>django-admin</code>：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">django-admin --version</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h4 id=\"總結\"><a href=\"#總結\" class=\"headerlink\" title=\"總結\"></a><strong>總結</strong></h4><p>這樣你就能在 macOS 上成功下載、安裝並配置 Django，並解決了 PATH 相關的問題。</p>\n","cover_type":"img","excerpt":"","more":"<h3 id=\"macOS-上下載並安裝-Django-教學指南（不使用虛擬環境，並加入-PATH-教學）\"><a href=\"#macOS-上下載並安裝-Django-教學指南（不使用虛擬環境，並加入-PATH-教學）\" class=\"headerlink\" title=\"macOS 上下載並安裝 Django 教學指南（不使用虛擬環境，並加入 PATH 教學）\"></a><strong>macOS 上下載並安裝 Django 教學指南（不使用虛擬環境，並加入 PATH 教學）</strong></h3><h4 id=\"步驟-1：確認安裝-Homebrew（可選）\"><a href=\"#步驟-1：確認安裝-Homebrew（可選）\" class=\"headerlink\" title=\"步驟 1：確認安裝 Homebrew（可選）\"></a><strong>步驟 1：確認安裝 Homebrew（可選）</strong></h4><p>如果你還沒有安裝 Homebrew，可以按照以下指令來安裝。Homebrew 是 macOS 上的包管理器，方便你安裝和管理軟件：</p>\n<ol>\n<li>打開「終端機」(Terminal)，輸入以下指令來安裝 Homebrew：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/bin/bash -c <span class=\"string\">&quot;<span class=\"subst\">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)</span>&quot;</span></span><br></pre></td></tr></table></figure></li>\n<li>等待 Homebrew 安裝完成，然後更新 Homebrew：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew update</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h4 id=\"步驟-2：安裝-Python-3\"><a href=\"#步驟-2：安裝-Python-3\" class=\"headerlink\" title=\"步驟 2：安裝 Python 3\"></a><strong>步驟 2：安裝 Python 3</strong></h4><ol>\n<li>確認是否已安裝 Python 3：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python3 --version</span><br></pre></td></tr></table></figure>\n如果沒有安裝或版本過舊，可以使用 Homebrew 安裝最新的 Python 3：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew install python3</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h4 id=\"步驟-3：安裝-Django\"><a href=\"#步驟-3：安裝-Django\" class=\"headerlink\" title=\"步驟 3：安裝 Django\"></a><strong>步驟 3：安裝 Django</strong></h4><ol>\n<li><p>確保 Python 3 已經安裝，然後使用 <code>pip3</code> 安裝 Django：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip3 install django</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>安裝完成後，檢查 Django 是否已安裝成功：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">django-admin --version</span><br></pre></td></tr></table></figure>\n<p>如果指令執行成功，會顯示 Django 的版本號，例如 <code>4.2.16</code>。</p>\n</li>\n</ol>\n<h4 id=\"步驟-4：創建-Django-專案\"><a href=\"#步驟-4：創建-Django-專案\" class=\"headerlink\" title=\"步驟 4：創建 Django 專案\"></a><strong>步驟 4：創建 Django 專案</strong></h4><ol>\n<li><p>使用 <code>django-admin</code> 創建一個新專案。首先，進入你想要創建專案的目錄，然後執行以下指令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">django-admin startproject &lt;project-name&gt;</span><br></pre></td></tr></table></figure>\n\n<p>例如：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">django-admin startproject mysite</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>進入專案目錄並運行開發伺服器：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> mysite</span><br><span class=\"line\">python3 manage.py runserver</span><br></pre></td></tr></table></figure>\n<p>終端應顯示伺服器正在 <code>http://127.0.0.1:8000/</code> 運行。打開瀏覽器並輸入這個地址來查看 Django 的初始畫面。</p>\n</li>\n</ol>\n<h4 id=\"步驟-5：解決常見錯誤\"><a href=\"#步驟-5：解決常見錯誤\" class=\"headerlink\" title=\"步驟 5：解決常見錯誤\"></a><strong>步驟 5：解決常見錯誤</strong></h4><h5 id=\"django-admin-command-not-found-問題解決\"><a href=\"#django-admin-command-not-found-問題解決\" class=\"headerlink\" title=\"django-admin: command not found 問題解決\"></a><strong><code>django-admin: command not found</code> 問題解決</strong></h5><p>如果安裝 Django 後出現 <code>django-admin: command not found</code> 錯誤，這可能是因為 Python 的執行檔沒有在系統的 PATH 中。請依照以下步驟來手動加入 PATH：</p>\n<ol>\n<li><p>找到 <code>django-admin</code> 安裝路徑。根據你之前提供的資訊，Django 安裝在以下路徑：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/Users/zhuang/Library/Python/3.9/bin</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在終端機中暫時添加此路徑到 PATH：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"string\">&quot;<span class=\"variable\">$PATH</span>:/Users/zhuang/Library/Python/3.9/bin&quot;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>要使這個變更永久生效，打開或編輯 <code>~/.zshrc</code> 檔案，並將以下內容添加到檔案末尾：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"string\">&quot;<span class=\"variable\">$PATH</span>:/Users/zhuang/Library/Python/3.9/bin&quot;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>保存檔案後，執行以下指令來使變更生效：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">source</span> ~/.zshrc</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>完成後，檢查是否可以正常使用 <code>django-admin</code>：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">django-admin --version</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h4 id=\"總結\"><a href=\"#總結\" class=\"headerlink\" title=\"總結\"></a><strong>總結</strong></h4><p>這樣你就能在 macOS 上成功下載、安裝並配置 Django，並解決了 PATH 相關的問題。</p>\n"},{"layout":"post","title":"Line Bot 與 Openai & SQL 03 - 成績查詢","date":"2024-10-02T08:30:06.000Z","top_img":"https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FLine-Bot%E5%92%8Cgpt%E5%AF%A6%E6%88%B0%E6%95%99%E5%AD%B8%2Fstudent-score%2Flinebot-student.webp?alt=media&token=b991afe3-27a4-4d32-a1d7-5b34b8849a11","cover":"https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FLine-Bot%E5%92%8Cgpt%E5%AF%A6%E6%88%B0%E6%95%99%E5%AD%B8%2Fstudent-score%2Flinebot-student.webp?alt=media&token=b991afe3-27a4-4d32-a1d7-5b34b8849a11","_content":"\n參考來源 : https://www.youtube.com/watch?v=IfzY0axpjD8&t=333s\n\n## 基於 LINE Bot 與 OpenAI 的 MySQL 學生成績管理系統教學文件\n\n### 目錄\n\n1. 前言\n2. 系統需求與工具\n3. 資料庫設計與結構\n4. 插入 15 位學生的資料\n5. 為每位學生插入成績\n6. 使用 OpenAI 生成 SQL 語句\n7. LINE Bot 與 OpenAI 整合\n8. 查詢學生成績\n9. 常見問題與解決方案\n10. 結論\n\n---\n\n### 1. 前言\n\n本教學文件將指導您如何建立一個基於 MySQL 的學生成績管理系統，並通過 LINE Bot 與 OpenAI 的整合來查詢和管理數據。我們將介紹如何使用 LINE Bot 接收訊息、OpenAI 自動生成 SQL 語句，並通過 MySQL 查詢學生的成績。\n\n---\n\n### 2. 系統需求與工具\n\n**系統需求：**\n\n- 安裝了 MySQL 伺服器\n- Python 3 環境（Flask、OpenAI 和 LINE Bot SDK）\n- MySQL 客戶端或管理工具（如 MySQL Workbench）\n- OpenAI API 金鑰\n- LINE Bot API 金鑰\n\n**工具：**\n\n- MySQL 伺服器\n- MySQL Workbench 或命令行工具\n- LINE Bot 設定\n- OpenAI API 設定\n\n---\n\n### 3. 資料庫設計與結構\n\n在本系統中，我們將創建兩個資料表：一個用來存儲學生的基本信息，另一個用來存儲學生的成績。\n\n### `student` 資料表結構：\n\n```sql\nCREATE TABLE student (\n    sno INT PRIMARY KEY,     -- 學號\n    class VARCHAR(50),       -- 班級\n    name VARCHAR(100),       -- 學生姓名\n    sex VARCHAR(10),         -- 性別\n    address VARCHAR(255),    -- 地址\n    memo TEXT                -- 備註\n);\n\n```\n\n### `score` 資料表結構：\n\n```sql\nCREATE TABLE score (\n    sno INT,                 -- 學號 (外鍵)\n    class VARCHAR(50),       -- 班級\n    subject VARCHAR(100),    -- 科目\n    score INT                -- 成績\n);\n\n```\n\n這兩個資料表使用 `sno` 欄位關聯，來管理學生的基本信息和成績。\n\n---\n\n### 4. 插入 15 位學生的資料\n\n接下來，我們將插入 15 位學生的資料：\n\n```sql\nINSERT INTO student (sno, class, name, sex, address, memo) VALUES\n(1, 'Class 1', 'John Doe', 'M', '123 Street A', 'Excellent performance'),\n(2, 'Class 2', 'Jane Smith', 'F', '456 Street B', 'Needs improvement in math'),\n(3, 'Class 3', 'Alice Brown', 'F', '789 Street C', 'Top student'),\n(4, 'Class 1', 'Bob Johnson', 'M', '1010 Street D', 'New student'),\n(5, 'Class 2', 'Charlie Davis', 'M', '1111 Street E', 'Struggles with homework'),\n(6, 'Class 3', 'Diana White', 'F', '1212 Street F', 'Shows great potential'),\n(7, 'Class 1', 'Evan Green', 'M', '1313 Street G', 'Good participation'),\n(8, 'Class 2', 'Fiona Blue', 'F', '1414 Street H', 'Excellent attendance'),\n(9, 'Class 3', 'George Black', 'M', '1515 Street I', 'Needs focus on studies'),\n(10, 'Class 1', 'Hannah Yellow', 'F', '1616 Street J', 'Very creative'),\n(11, 'Class 2', 'Ivan Orange', 'M', '1717 Street K', 'Great in sports'),\n(12, 'Class 3', 'Jenny Purple', 'F', '1818 Street L', 'Good academic performance'),\n(13, 'Class 1', 'Kevin Red', 'M', '1919 Street M', 'Enthusiastic in class'),\n(14, 'Class 2', 'Lily Pink', 'F', '2020 Street N', 'Hardworking student'),\n(15, 'Class 3', 'Michael Cyan', 'M', '2121 Street O', 'Quick learner');\n```\n\n![student DB](https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FLine-Bot%E5%92%8Cgpt%E5%AF%A6%E6%88%B0%E6%95%99%E5%AD%B8%2Fstudent-score%2Fstudent-studens.png?alt=media&token=af046ad4-c41a-4823-88c8-d196058d3f32)\n\n### 5. 為每位學生插入成績\n\n接下來，我們為每位學生插入 `數學` 和 `國文` 的成績：\n\n```sql\nINSERT INTO score (sno, class, subject, score) VALUES\n(1, 'Class 1', '數學', 85),\n(1, 'Class 1', '國文', 90),\n(2, 'Class 2', '數學', 78),\n(2, 'Class 2', '國文', 88),\n(3, 'Class 3', '數學', 92),\n(3, 'Class 3', '國文', 95),\n(4, 'Class 1', '數學', 76),\n(4, 'Class 1', '國文', 85),\n(5, 'Class 2', '數學', 82),\n(5, 'Class 2', '國文', 89),\n(6, 'Class 3', '數學', 88),\n(6, 'Class 3', '國文', 91),\n(7, 'Class 1', '數學', 90),\n(7, 'Class 1', '國文', 87),\n(8, 'Class 2', '數學', 85),\n(8, 'Class 2', '國文', 92),\n(9, 'Class 3', '數學', 80),\n(9, 'Class 3', '國文', 90),\n(10, 'Class 1', '數學', 87),\n(10, 'Class 1', '國文', 88),\n(11, 'Class 2', '數學', 89),\n(11, 'Class 2', '國文', 91),\n(12, 'Class 3', '數學', 94),\n(12, 'Class 3', '國文', 96),\n(13, 'Class 1', '數學', 75),\n(13, 'Class 1', '國文', 85),\n(14, 'Class 2', '數學', 88),\n(14, 'Class 2', '國文', 92),\n(15, 'Class 3', '數學', 93),\n(15, 'Class 3', '國文', 95);\n```\n\n[![student-score](https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FLine-Bot%E5%92%8Cgpt%E5%AF%A6%E6%88%B0%E6%95%99%E5%AD%B8%2Fstudent-score%2Fstudent-score.png?alt=media&token=745ae4d1-f357-40d7-b972-81c299714061)](https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FLine-Bot%E5%92%8Cgpt%E5%AF%A6%E6%88%B0%E6%95%99%E5%AD%B8%2Fstudent-score%2Fstudent-score.png?alt=media&token=745ae4d1-f357-40d7-b972-81c299714061)\n\n---\n\n### 6. 使用 OpenAI 生成 SQL 語句\n\n當 LINE Bot 接收到查詢訊息時，會呼叫 OpenAI API 自動生成 SQL 查詢語句。以下是範例的整合程式碼片段：\n\n```python\nresponse = openai.ChatCompletion.create(\n    model=\"gpt-4o-mini\",\n    messages=[\n        {\"role\": \"system\", \"content\": \"You are a helpful assistant that helps users query a MySQL database.\"},\n        {\"role\": \"user\", \"content\": event.message.text}\n    ],\n    temperature=0,\n    max_tokens=400,\n    top_p=1,\n    frequency_penalty=0,\n    presence_penalty=0\n)\n\n```\n\n---\n\n### 7. LINE Bot 與 OpenAI 整合完整程式碼\n\n整合 LINE Bot 與 OpenAI API，並將接收到的查詢請求轉換為 SQL 查詢並從 MySQL 資料庫中提取資料。以下是完整的程式碼片段：\n\n```python\nimport openai\nfrom flask import Flask, request, abort\nfrom linebot import LineBotApi, WebhookHandler\nfrom linebot.exceptions import InvalidSignatureError\nfrom linebot.models import MessageEvent, TextMessage, TextSendMessage\nimport pymysql\nimport re\n\napp = Flask(__name__)\n\n# 設定 Linebot 的 Channel Access Token 和 Channel Secret\n# 目前是 鈞皓科技 的 LineBot\nline_bot_api = LineBotApi('')\nhandler = WebhookHandler('')\n\n# 設定 OpenAI API 金鑰\nopenai.api_key = ''\n\n# 資料庫連接設定\ndb_settings = {\n    \"host\": \"127.0.0.1\",\n    \"port\": 3306,\n    \"user\": \"root\",\n    \"password\": \"password\",\n    \"db\": \"studentdb\",\n    \"charset\": \"utf8\"\n}\n\n@app.route(\"/\")\ndef root():\n    return \"Hello, World!\"\n\n@app.route(\"/callback\", methods=['POST'])\ndef callback():\n    signature = request.headers['X-Line-Signature']\n    body = request.get_data(as_text=True)\n    app.logger.info(\"Request body: \" + body)\n\n    try:\n        print(\"Request body: \" + signature)\n        handler.handle(body, signature)\n    except InvalidSignatureError:\n        abort(400)\n\n    return 'OK'\n\n@handler.add(MessageEvent, message=TextMessage)\ndef handle_message(event):\n    try:\n        # 呼叫 OpenAI ChatCompletion API 來生成 SQL 語句\n        response = openai.ChatCompletion.create(\n            model=\"gpt-4o-mini\",\n            messages=[\n                {\"role\": \"system\", \"content\": \"You are a helpful assistant that helps users query a MySQL database.\"},\n                {\"role\": \"user\", \"content\": event.message.text}\n            ],\n            temperature=0,\n            max_tokens=400,\n            top_p=1,\n            frequency_penalty=0,\n            presence_penalty=0\n        )\n\n        # 處理 OpenAI 回應，過濾掉非 SQL 的部分\n        response_text = response.choices[0].message['content'].strip()\n\n        # 使用正則表達式過濾掉註解和解釋部分，只保留 SQL 語句\n        sql_match = re.search(r\"SELECT.*?;\", response_text, re.DOTALL)\n        if sql_match:\n            response_sql = sql_match.group(0).strip()  # 提取到 SQL 語句\n        else:\n            response_sql = \"\"  # 如果沒有找到有效的 SQL，設為空\n\n        # 檢查是否有生成有效的 SQL 語句\n        if response_sql:\n            # 串接資料庫並執行 SQL 查詢\n            conn = pymysql.connect(**db_settings)\n            with conn.cursor() as cursor:\n                command = response_sql.replace(\"\\n\", \" \")  # 移除多餘的換行符號\n                print(\"Executing SQL:\", command)\n                cursor.execute(command)\n                result = cursor.fetchall()\n\n            # 格式化查詢結果\n            line_data = \"class\\tsubject\\tscore\\n\"\n            line_data += \"-------------------\\n\"\n\n            for row in result:\n                line_data += f\"{row[0]}\\t{row[1]}\\t{row[2]}\\n\"\n\n            # 回傳結果給 LINE 用戶\n            line_bot_api.reply_message(event.reply_token, TextSendMessage(text=response_sql + '\\n' + line_data))\n        else:\n            line_bot_api.reply_message(event.reply_token, TextSendMessage(text=\"未能生成有效的 SQL 查詢語句。\"))\n\n    except Exception as e:\n        print(\"Error:\", e)\n        line_bot_api.reply_message(event.reply_token, TextSendMessage(text=\"發生錯誤，請稍後再試。\"))\n\nif __name__ == \"__main__\":\n    app.run()\n\n```\n\n### 8. Demo 時間\n\n[![linebot-demo](https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FLine-Bot%E5%92%8Cgpt%E5%AF%A6%E6%88%B0%E6%95%99%E5%AD%B8%2Fstudent-score%2F%E6%88%AA%E5%9C%96%202024-10-02%20%E6%99%9A%E4%B8%8A8.14.39.png?alt=media&token=de5ac121-8dc2-4912-be23-0ac4a82635ca)](https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FLine-Bot%E5%92%8Cgpt%E5%AF%A6%E6%88%B0%E6%95%99%E5%AD%B8%2Fstudent-score%2F%E6%88%AA%E5%9C%96%202024-10-02%20%E6%99%9A%E4%B8%8A8.14.39.png?alt=media&token=de5ac121-8dc2-4912-be23-0ac4a82635ca)\n","source":"_posts/Line-Bot-與-Openai-SQL-成績查詢.md","raw":"---\nlayout: post\ntitle: Line Bot 與 Openai & SQL 03 - 成績查詢\ndate: 2024-10-02 16:30:06\ntags: [Line Bot]\ncategories: [Line Bot, 成績查詢練習]\ntop_img: https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FLine-Bot%E5%92%8Cgpt%E5%AF%A6%E6%88%B0%E6%95%99%E5%AD%B8%2Fstudent-score%2Flinebot-student.webp?alt=media&token=b991afe3-27a4-4d32-a1d7-5b34b8849a11\ncover: https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FLine-Bot%E5%92%8Cgpt%E5%AF%A6%E6%88%B0%E6%95%99%E5%AD%B8%2Fstudent-score%2Flinebot-student.webp?alt=media&token=b991afe3-27a4-4d32-a1d7-5b34b8849a11\n---\n\n參考來源 : https://www.youtube.com/watch?v=IfzY0axpjD8&t=333s\n\n## 基於 LINE Bot 與 OpenAI 的 MySQL 學生成績管理系統教學文件\n\n### 目錄\n\n1. 前言\n2. 系統需求與工具\n3. 資料庫設計與結構\n4. 插入 15 位學生的資料\n5. 為每位學生插入成績\n6. 使用 OpenAI 生成 SQL 語句\n7. LINE Bot 與 OpenAI 整合\n8. 查詢學生成績\n9. 常見問題與解決方案\n10. 結論\n\n---\n\n### 1. 前言\n\n本教學文件將指導您如何建立一個基於 MySQL 的學生成績管理系統，並通過 LINE Bot 與 OpenAI 的整合來查詢和管理數據。我們將介紹如何使用 LINE Bot 接收訊息、OpenAI 自動生成 SQL 語句，並通過 MySQL 查詢學生的成績。\n\n---\n\n### 2. 系統需求與工具\n\n**系統需求：**\n\n- 安裝了 MySQL 伺服器\n- Python 3 環境（Flask、OpenAI 和 LINE Bot SDK）\n- MySQL 客戶端或管理工具（如 MySQL Workbench）\n- OpenAI API 金鑰\n- LINE Bot API 金鑰\n\n**工具：**\n\n- MySQL 伺服器\n- MySQL Workbench 或命令行工具\n- LINE Bot 設定\n- OpenAI API 設定\n\n---\n\n### 3. 資料庫設計與結構\n\n在本系統中，我們將創建兩個資料表：一個用來存儲學生的基本信息，另一個用來存儲學生的成績。\n\n### `student` 資料表結構：\n\n```sql\nCREATE TABLE student (\n    sno INT PRIMARY KEY,     -- 學號\n    class VARCHAR(50),       -- 班級\n    name VARCHAR(100),       -- 學生姓名\n    sex VARCHAR(10),         -- 性別\n    address VARCHAR(255),    -- 地址\n    memo TEXT                -- 備註\n);\n\n```\n\n### `score` 資料表結構：\n\n```sql\nCREATE TABLE score (\n    sno INT,                 -- 學號 (外鍵)\n    class VARCHAR(50),       -- 班級\n    subject VARCHAR(100),    -- 科目\n    score INT                -- 成績\n);\n\n```\n\n這兩個資料表使用 `sno` 欄位關聯，來管理學生的基本信息和成績。\n\n---\n\n### 4. 插入 15 位學生的資料\n\n接下來，我們將插入 15 位學生的資料：\n\n```sql\nINSERT INTO student (sno, class, name, sex, address, memo) VALUES\n(1, 'Class 1', 'John Doe', 'M', '123 Street A', 'Excellent performance'),\n(2, 'Class 2', 'Jane Smith', 'F', '456 Street B', 'Needs improvement in math'),\n(3, 'Class 3', 'Alice Brown', 'F', '789 Street C', 'Top student'),\n(4, 'Class 1', 'Bob Johnson', 'M', '1010 Street D', 'New student'),\n(5, 'Class 2', 'Charlie Davis', 'M', '1111 Street E', 'Struggles with homework'),\n(6, 'Class 3', 'Diana White', 'F', '1212 Street F', 'Shows great potential'),\n(7, 'Class 1', 'Evan Green', 'M', '1313 Street G', 'Good participation'),\n(8, 'Class 2', 'Fiona Blue', 'F', '1414 Street H', 'Excellent attendance'),\n(9, 'Class 3', 'George Black', 'M', '1515 Street I', 'Needs focus on studies'),\n(10, 'Class 1', 'Hannah Yellow', 'F', '1616 Street J', 'Very creative'),\n(11, 'Class 2', 'Ivan Orange', 'M', '1717 Street K', 'Great in sports'),\n(12, 'Class 3', 'Jenny Purple', 'F', '1818 Street L', 'Good academic performance'),\n(13, 'Class 1', 'Kevin Red', 'M', '1919 Street M', 'Enthusiastic in class'),\n(14, 'Class 2', 'Lily Pink', 'F', '2020 Street N', 'Hardworking student'),\n(15, 'Class 3', 'Michael Cyan', 'M', '2121 Street O', 'Quick learner');\n```\n\n![student DB](https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FLine-Bot%E5%92%8Cgpt%E5%AF%A6%E6%88%B0%E6%95%99%E5%AD%B8%2Fstudent-score%2Fstudent-studens.png?alt=media&token=af046ad4-c41a-4823-88c8-d196058d3f32)\n\n### 5. 為每位學生插入成績\n\n接下來，我們為每位學生插入 `數學` 和 `國文` 的成績：\n\n```sql\nINSERT INTO score (sno, class, subject, score) VALUES\n(1, 'Class 1', '數學', 85),\n(1, 'Class 1', '國文', 90),\n(2, 'Class 2', '數學', 78),\n(2, 'Class 2', '國文', 88),\n(3, 'Class 3', '數學', 92),\n(3, 'Class 3', '國文', 95),\n(4, 'Class 1', '數學', 76),\n(4, 'Class 1', '國文', 85),\n(5, 'Class 2', '數學', 82),\n(5, 'Class 2', '國文', 89),\n(6, 'Class 3', '數學', 88),\n(6, 'Class 3', '國文', 91),\n(7, 'Class 1', '數學', 90),\n(7, 'Class 1', '國文', 87),\n(8, 'Class 2', '數學', 85),\n(8, 'Class 2', '國文', 92),\n(9, 'Class 3', '數學', 80),\n(9, 'Class 3', '國文', 90),\n(10, 'Class 1', '數學', 87),\n(10, 'Class 1', '國文', 88),\n(11, 'Class 2', '數學', 89),\n(11, 'Class 2', '國文', 91),\n(12, 'Class 3', '數學', 94),\n(12, 'Class 3', '國文', 96),\n(13, 'Class 1', '數學', 75),\n(13, 'Class 1', '國文', 85),\n(14, 'Class 2', '數學', 88),\n(14, 'Class 2', '國文', 92),\n(15, 'Class 3', '數學', 93),\n(15, 'Class 3', '國文', 95);\n```\n\n[![student-score](https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FLine-Bot%E5%92%8Cgpt%E5%AF%A6%E6%88%B0%E6%95%99%E5%AD%B8%2Fstudent-score%2Fstudent-score.png?alt=media&token=745ae4d1-f357-40d7-b972-81c299714061)](https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FLine-Bot%E5%92%8Cgpt%E5%AF%A6%E6%88%B0%E6%95%99%E5%AD%B8%2Fstudent-score%2Fstudent-score.png?alt=media&token=745ae4d1-f357-40d7-b972-81c299714061)\n\n---\n\n### 6. 使用 OpenAI 生成 SQL 語句\n\n當 LINE Bot 接收到查詢訊息時，會呼叫 OpenAI API 自動生成 SQL 查詢語句。以下是範例的整合程式碼片段：\n\n```python\nresponse = openai.ChatCompletion.create(\n    model=\"gpt-4o-mini\",\n    messages=[\n        {\"role\": \"system\", \"content\": \"You are a helpful assistant that helps users query a MySQL database.\"},\n        {\"role\": \"user\", \"content\": event.message.text}\n    ],\n    temperature=0,\n    max_tokens=400,\n    top_p=1,\n    frequency_penalty=0,\n    presence_penalty=0\n)\n\n```\n\n---\n\n### 7. LINE Bot 與 OpenAI 整合完整程式碼\n\n整合 LINE Bot 與 OpenAI API，並將接收到的查詢請求轉換為 SQL 查詢並從 MySQL 資料庫中提取資料。以下是完整的程式碼片段：\n\n```python\nimport openai\nfrom flask import Flask, request, abort\nfrom linebot import LineBotApi, WebhookHandler\nfrom linebot.exceptions import InvalidSignatureError\nfrom linebot.models import MessageEvent, TextMessage, TextSendMessage\nimport pymysql\nimport re\n\napp = Flask(__name__)\n\n# 設定 Linebot 的 Channel Access Token 和 Channel Secret\n# 目前是 鈞皓科技 的 LineBot\nline_bot_api = LineBotApi('')\nhandler = WebhookHandler('')\n\n# 設定 OpenAI API 金鑰\nopenai.api_key = ''\n\n# 資料庫連接設定\ndb_settings = {\n    \"host\": \"127.0.0.1\",\n    \"port\": 3306,\n    \"user\": \"root\",\n    \"password\": \"password\",\n    \"db\": \"studentdb\",\n    \"charset\": \"utf8\"\n}\n\n@app.route(\"/\")\ndef root():\n    return \"Hello, World!\"\n\n@app.route(\"/callback\", methods=['POST'])\ndef callback():\n    signature = request.headers['X-Line-Signature']\n    body = request.get_data(as_text=True)\n    app.logger.info(\"Request body: \" + body)\n\n    try:\n        print(\"Request body: \" + signature)\n        handler.handle(body, signature)\n    except InvalidSignatureError:\n        abort(400)\n\n    return 'OK'\n\n@handler.add(MessageEvent, message=TextMessage)\ndef handle_message(event):\n    try:\n        # 呼叫 OpenAI ChatCompletion API 來生成 SQL 語句\n        response = openai.ChatCompletion.create(\n            model=\"gpt-4o-mini\",\n            messages=[\n                {\"role\": \"system\", \"content\": \"You are a helpful assistant that helps users query a MySQL database.\"},\n                {\"role\": \"user\", \"content\": event.message.text}\n            ],\n            temperature=0,\n            max_tokens=400,\n            top_p=1,\n            frequency_penalty=0,\n            presence_penalty=0\n        )\n\n        # 處理 OpenAI 回應，過濾掉非 SQL 的部分\n        response_text = response.choices[0].message['content'].strip()\n\n        # 使用正則表達式過濾掉註解和解釋部分，只保留 SQL 語句\n        sql_match = re.search(r\"SELECT.*?;\", response_text, re.DOTALL)\n        if sql_match:\n            response_sql = sql_match.group(0).strip()  # 提取到 SQL 語句\n        else:\n            response_sql = \"\"  # 如果沒有找到有效的 SQL，設為空\n\n        # 檢查是否有生成有效的 SQL 語句\n        if response_sql:\n            # 串接資料庫並執行 SQL 查詢\n            conn = pymysql.connect(**db_settings)\n            with conn.cursor() as cursor:\n                command = response_sql.replace(\"\\n\", \" \")  # 移除多餘的換行符號\n                print(\"Executing SQL:\", command)\n                cursor.execute(command)\n                result = cursor.fetchall()\n\n            # 格式化查詢結果\n            line_data = \"class\\tsubject\\tscore\\n\"\n            line_data += \"-------------------\\n\"\n\n            for row in result:\n                line_data += f\"{row[0]}\\t{row[1]}\\t{row[2]}\\n\"\n\n            # 回傳結果給 LINE 用戶\n            line_bot_api.reply_message(event.reply_token, TextSendMessage(text=response_sql + '\\n' + line_data))\n        else:\n            line_bot_api.reply_message(event.reply_token, TextSendMessage(text=\"未能生成有效的 SQL 查詢語句。\"))\n\n    except Exception as e:\n        print(\"Error:\", e)\n        line_bot_api.reply_message(event.reply_token, TextSendMessage(text=\"發生錯誤，請稍後再試。\"))\n\nif __name__ == \"__main__\":\n    app.run()\n\n```\n\n### 8. Demo 時間\n\n[![linebot-demo](https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FLine-Bot%E5%92%8Cgpt%E5%AF%A6%E6%88%B0%E6%95%99%E5%AD%B8%2Fstudent-score%2F%E6%88%AA%E5%9C%96%202024-10-02%20%E6%99%9A%E4%B8%8A8.14.39.png?alt=media&token=de5ac121-8dc2-4912-be23-0ac4a82635ca)](https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FLine-Bot%E5%92%8Cgpt%E5%AF%A6%E6%88%B0%E6%95%99%E5%AD%B8%2Fstudent-score%2F%E6%88%AA%E5%9C%96%202024-10-02%20%E6%99%9A%E4%B8%8A8.14.39.png?alt=media&token=de5ac121-8dc2-4912-be23-0ac4a82635ca)\n","slug":"Line-Bot-與-Openai-SQL-成績查詢","published":1,"updated":"2024-10-02T12:20:31.536Z","_id":"cm1rp7wck0000ceex2u8t3asb","comments":1,"photos":[],"content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>參考來源 : <a href=\"https://www.youtube.com/watch?v=IfzY0axpjD8&t=333s\">https://www.youtube.com/watch?v=IfzY0axpjD8&amp;t=333s</a></p>\n<h2 id=\"基於-LINE-Bot-與-OpenAI-的-MySQL-學生成績管理系統教學文件\"><a href=\"#基於-LINE-Bot-與-OpenAI-的-MySQL-學生成績管理系統教學文件\" class=\"headerlink\" title=\"基於 LINE Bot 與 OpenAI 的 MySQL 學生成績管理系統教學文件\"></a>基於 LINE Bot 與 OpenAI 的 MySQL 學生成績管理系統教學文件</h2><h3 id=\"目錄\"><a href=\"#目錄\" class=\"headerlink\" title=\"目錄\"></a>目錄</h3><ol>\n<li>前言</li>\n<li>系統需求與工具</li>\n<li>資料庫設計與結構</li>\n<li>插入 15 位學生的資料</li>\n<li>為每位學生插入成績</li>\n<li>使用 OpenAI 生成 SQL 語句</li>\n<li>LINE Bot 與 OpenAI 整合</li>\n<li>查詢學生成績</li>\n<li>常見問題與解決方案</li>\n<li>結論</li>\n</ol>\n<hr>\n<h3 id=\"1-前言\"><a href=\"#1-前言\" class=\"headerlink\" title=\"1. 前言\"></a>1. 前言</h3><p>本教學文件將指導您如何建立一個基於 MySQL 的學生成績管理系統，並通過 LINE Bot 與 OpenAI 的整合來查詢和管理數據。我們將介紹如何使用 LINE Bot 接收訊息、OpenAI 自動生成 SQL 語句，並通過 MySQL 查詢學生的成績。</p>\n<hr>\n<h3 id=\"2-系統需求與工具\"><a href=\"#2-系統需求與工具\" class=\"headerlink\" title=\"2. 系統需求與工具\"></a>2. 系統需求與工具</h3><p><strong>系統需求：</strong></p>\n<ul>\n<li>安裝了 MySQL 伺服器</li>\n<li>Python 3 環境（Flask、OpenAI 和 LINE Bot SDK）</li>\n<li>MySQL 客戶端或管理工具（如 MySQL Workbench）</li>\n<li>OpenAI API 金鑰</li>\n<li>LINE Bot API 金鑰</li>\n</ul>\n<p><strong>工具：</strong></p>\n<ul>\n<li>MySQL 伺服器</li>\n<li>MySQL Workbench 或命令行工具</li>\n<li>LINE Bot 設定</li>\n<li>OpenAI API 設定</li>\n</ul>\n<hr>\n<h3 id=\"3-資料庫設計與結構\"><a href=\"#3-資料庫設計與結構\" class=\"headerlink\" title=\"3. 資料庫設計與結構\"></a>3. 資料庫設計與結構</h3><p>在本系統中，我們將創建兩個資料表：一個用來存儲學生的基本信息，另一個用來存儲學生的成績。</p>\n<h3 id=\"student-資料表結構：\"><a href=\"#student-資料表結構：\" class=\"headerlink\" title=\"student 資料表結構：\"></a><code>student</code> 資料表結構：</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> student (</span><br><span class=\"line\">    sno <span class=\"type\">INT</span> <span class=\"keyword\">PRIMARY</span> KEY,     <span class=\"comment\">-- 學號</span></span><br><span class=\"line\">    class <span class=\"type\">VARCHAR</span>(<span class=\"number\">50</span>),       <span class=\"comment\">-- 班級</span></span><br><span class=\"line\">    name <span class=\"type\">VARCHAR</span>(<span class=\"number\">100</span>),       <span class=\"comment\">-- 學生姓名</span></span><br><span class=\"line\">    sex <span class=\"type\">VARCHAR</span>(<span class=\"number\">10</span>),         <span class=\"comment\">-- 性別</span></span><br><span class=\"line\">    address <span class=\"type\">VARCHAR</span>(<span class=\"number\">255</span>),    <span class=\"comment\">-- 地址</span></span><br><span class=\"line\">    memo TEXT                <span class=\"comment\">-- 備註</span></span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"score-資料表結構：\"><a href=\"#score-資料表結構：\" class=\"headerlink\" title=\"score 資料表結構：\"></a><code>score</code> 資料表結構：</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> score (</span><br><span class=\"line\">    sno <span class=\"type\">INT</span>,                 <span class=\"comment\">-- 學號 (外鍵)</span></span><br><span class=\"line\">    class <span class=\"type\">VARCHAR</span>(<span class=\"number\">50</span>),       <span class=\"comment\">-- 班級</span></span><br><span class=\"line\">    subject <span class=\"type\">VARCHAR</span>(<span class=\"number\">100</span>),    <span class=\"comment\">-- 科目</span></span><br><span class=\"line\">    score <span class=\"type\">INT</span>                <span class=\"comment\">-- 成績</span></span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>這兩個資料表使用 <code>sno</code> 欄位關聯，來管理學生的基本信息和成績。</p>\n<hr>\n<h3 id=\"4-插入-15-位學生的資料\"><a href=\"#4-插入-15-位學生的資料\" class=\"headerlink\" title=\"4. 插入 15 位學生的資料\"></a>4. 插入 15 位學生的資料</h3><p>接下來，我們將插入 15 位學生的資料：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> student (sno, class, name, sex, address, memo) <span class=\"keyword\">VALUES</span></span><br><span class=\"line\">(<span class=\"number\">1</span>, <span class=\"string\">&#x27;Class 1&#x27;</span>, <span class=\"string\">&#x27;John Doe&#x27;</span>, <span class=\"string\">&#x27;M&#x27;</span>, <span class=\"string\">&#x27;123 Street A&#x27;</span>, <span class=\"string\">&#x27;Excellent performance&#x27;</span>),</span><br><span class=\"line\">(<span class=\"number\">2</span>, <span class=\"string\">&#x27;Class 2&#x27;</span>, <span class=\"string\">&#x27;Jane Smith&#x27;</span>, <span class=\"string\">&#x27;F&#x27;</span>, <span class=\"string\">&#x27;456 Street B&#x27;</span>, <span class=\"string\">&#x27;Needs improvement in math&#x27;</span>),</span><br><span class=\"line\">(<span class=\"number\">3</span>, <span class=\"string\">&#x27;Class 3&#x27;</span>, <span class=\"string\">&#x27;Alice Brown&#x27;</span>, <span class=\"string\">&#x27;F&#x27;</span>, <span class=\"string\">&#x27;789 Street C&#x27;</span>, <span class=\"string\">&#x27;Top student&#x27;</span>),</span><br><span class=\"line\">(<span class=\"number\">4</span>, <span class=\"string\">&#x27;Class 1&#x27;</span>, <span class=\"string\">&#x27;Bob Johnson&#x27;</span>, <span class=\"string\">&#x27;M&#x27;</span>, <span class=\"string\">&#x27;1010 Street D&#x27;</span>, <span class=\"string\">&#x27;New student&#x27;</span>),</span><br><span class=\"line\">(<span class=\"number\">5</span>, <span class=\"string\">&#x27;Class 2&#x27;</span>, <span class=\"string\">&#x27;Charlie Davis&#x27;</span>, <span class=\"string\">&#x27;M&#x27;</span>, <span class=\"string\">&#x27;1111 Street E&#x27;</span>, <span class=\"string\">&#x27;Struggles with homework&#x27;</span>),</span><br><span class=\"line\">(<span class=\"number\">6</span>, <span class=\"string\">&#x27;Class 3&#x27;</span>, <span class=\"string\">&#x27;Diana White&#x27;</span>, <span class=\"string\">&#x27;F&#x27;</span>, <span class=\"string\">&#x27;1212 Street F&#x27;</span>, <span class=\"string\">&#x27;Shows great potential&#x27;</span>),</span><br><span class=\"line\">(<span class=\"number\">7</span>, <span class=\"string\">&#x27;Class 1&#x27;</span>, <span class=\"string\">&#x27;Evan Green&#x27;</span>, <span class=\"string\">&#x27;M&#x27;</span>, <span class=\"string\">&#x27;1313 Street G&#x27;</span>, <span class=\"string\">&#x27;Good participation&#x27;</span>),</span><br><span class=\"line\">(<span class=\"number\">8</span>, <span class=\"string\">&#x27;Class 2&#x27;</span>, <span class=\"string\">&#x27;Fiona Blue&#x27;</span>, <span class=\"string\">&#x27;F&#x27;</span>, <span class=\"string\">&#x27;1414 Street H&#x27;</span>, <span class=\"string\">&#x27;Excellent attendance&#x27;</span>),</span><br><span class=\"line\">(<span class=\"number\">9</span>, <span class=\"string\">&#x27;Class 3&#x27;</span>, <span class=\"string\">&#x27;George Black&#x27;</span>, <span class=\"string\">&#x27;M&#x27;</span>, <span class=\"string\">&#x27;1515 Street I&#x27;</span>, <span class=\"string\">&#x27;Needs focus on studies&#x27;</span>),</span><br><span class=\"line\">(<span class=\"number\">10</span>, <span class=\"string\">&#x27;Class 1&#x27;</span>, <span class=\"string\">&#x27;Hannah Yellow&#x27;</span>, <span class=\"string\">&#x27;F&#x27;</span>, <span class=\"string\">&#x27;1616 Street J&#x27;</span>, <span class=\"string\">&#x27;Very creative&#x27;</span>),</span><br><span class=\"line\">(<span class=\"number\">11</span>, <span class=\"string\">&#x27;Class 2&#x27;</span>, <span class=\"string\">&#x27;Ivan Orange&#x27;</span>, <span class=\"string\">&#x27;M&#x27;</span>, <span class=\"string\">&#x27;1717 Street K&#x27;</span>, <span class=\"string\">&#x27;Great in sports&#x27;</span>),</span><br><span class=\"line\">(<span class=\"number\">12</span>, <span class=\"string\">&#x27;Class 3&#x27;</span>, <span class=\"string\">&#x27;Jenny Purple&#x27;</span>, <span class=\"string\">&#x27;F&#x27;</span>, <span class=\"string\">&#x27;1818 Street L&#x27;</span>, <span class=\"string\">&#x27;Good academic performance&#x27;</span>),</span><br><span class=\"line\">(<span class=\"number\">13</span>, <span class=\"string\">&#x27;Class 1&#x27;</span>, <span class=\"string\">&#x27;Kevin Red&#x27;</span>, <span class=\"string\">&#x27;M&#x27;</span>, <span class=\"string\">&#x27;1919 Street M&#x27;</span>, <span class=\"string\">&#x27;Enthusiastic in class&#x27;</span>),</span><br><span class=\"line\">(<span class=\"number\">14</span>, <span class=\"string\">&#x27;Class 2&#x27;</span>, <span class=\"string\">&#x27;Lily Pink&#x27;</span>, <span class=\"string\">&#x27;F&#x27;</span>, <span class=\"string\">&#x27;2020 Street N&#x27;</span>, <span class=\"string\">&#x27;Hardworking student&#x27;</span>),</span><br><span class=\"line\">(<span class=\"number\">15</span>, <span class=\"string\">&#x27;Class 3&#x27;</span>, <span class=\"string\">&#x27;Michael Cyan&#x27;</span>, <span class=\"string\">&#x27;M&#x27;</span>, <span class=\"string\">&#x27;2121 Street O&#x27;</span>, <span class=\"string\">&#x27;Quick learner&#x27;</span>);</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FLine-Bot%E5%92%8Cgpt%E5%AF%A6%E6%88%B0%E6%95%99%E5%AD%B8%2Fstudent-score%2Fstudent-studens.png?alt=media&token=af046ad4-c41a-4823-88c8-d196058d3f32\" alt=\"student DB\"></p>\n<h3 id=\"5-為每位學生插入成績\"><a href=\"#5-為每位學生插入成績\" class=\"headerlink\" title=\"5. 為每位學生插入成績\"></a>5. 為每位學生插入成績</h3><p>接下來，我們為每位學生插入 <code>數學</code> 和 <code>國文</code> 的成績：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> score (sno, class, subject, score) <span class=\"keyword\">VALUES</span></span><br><span class=\"line\">(<span class=\"number\">1</span>, <span class=\"string\">&#x27;Class 1&#x27;</span>, <span class=\"string\">&#x27;數學&#x27;</span>, <span class=\"number\">85</span>),</span><br><span class=\"line\">(<span class=\"number\">1</span>, <span class=\"string\">&#x27;Class 1&#x27;</span>, <span class=\"string\">&#x27;國文&#x27;</span>, <span class=\"number\">90</span>),</span><br><span class=\"line\">(<span class=\"number\">2</span>, <span class=\"string\">&#x27;Class 2&#x27;</span>, <span class=\"string\">&#x27;數學&#x27;</span>, <span class=\"number\">78</span>),</span><br><span class=\"line\">(<span class=\"number\">2</span>, <span class=\"string\">&#x27;Class 2&#x27;</span>, <span class=\"string\">&#x27;國文&#x27;</span>, <span class=\"number\">88</span>),</span><br><span class=\"line\">(<span class=\"number\">3</span>, <span class=\"string\">&#x27;Class 3&#x27;</span>, <span class=\"string\">&#x27;數學&#x27;</span>, <span class=\"number\">92</span>),</span><br><span class=\"line\">(<span class=\"number\">3</span>, <span class=\"string\">&#x27;Class 3&#x27;</span>, <span class=\"string\">&#x27;國文&#x27;</span>, <span class=\"number\">95</span>),</span><br><span class=\"line\">(<span class=\"number\">4</span>, <span class=\"string\">&#x27;Class 1&#x27;</span>, <span class=\"string\">&#x27;數學&#x27;</span>, <span class=\"number\">76</span>),</span><br><span class=\"line\">(<span class=\"number\">4</span>, <span class=\"string\">&#x27;Class 1&#x27;</span>, <span class=\"string\">&#x27;國文&#x27;</span>, <span class=\"number\">85</span>),</span><br><span class=\"line\">(<span class=\"number\">5</span>, <span class=\"string\">&#x27;Class 2&#x27;</span>, <span class=\"string\">&#x27;數學&#x27;</span>, <span class=\"number\">82</span>),</span><br><span class=\"line\">(<span class=\"number\">5</span>, <span class=\"string\">&#x27;Class 2&#x27;</span>, <span class=\"string\">&#x27;國文&#x27;</span>, <span class=\"number\">89</span>),</span><br><span class=\"line\">(<span class=\"number\">6</span>, <span class=\"string\">&#x27;Class 3&#x27;</span>, <span class=\"string\">&#x27;數學&#x27;</span>, <span class=\"number\">88</span>),</span><br><span class=\"line\">(<span class=\"number\">6</span>, <span class=\"string\">&#x27;Class 3&#x27;</span>, <span class=\"string\">&#x27;國文&#x27;</span>, <span class=\"number\">91</span>),</span><br><span class=\"line\">(<span class=\"number\">7</span>, <span class=\"string\">&#x27;Class 1&#x27;</span>, <span class=\"string\">&#x27;數學&#x27;</span>, <span class=\"number\">90</span>),</span><br><span class=\"line\">(<span class=\"number\">7</span>, <span class=\"string\">&#x27;Class 1&#x27;</span>, <span class=\"string\">&#x27;國文&#x27;</span>, <span class=\"number\">87</span>),</span><br><span class=\"line\">(<span class=\"number\">8</span>, <span class=\"string\">&#x27;Class 2&#x27;</span>, <span class=\"string\">&#x27;數學&#x27;</span>, <span class=\"number\">85</span>),</span><br><span class=\"line\">(<span class=\"number\">8</span>, <span class=\"string\">&#x27;Class 2&#x27;</span>, <span class=\"string\">&#x27;國文&#x27;</span>, <span class=\"number\">92</span>),</span><br><span class=\"line\">(<span class=\"number\">9</span>, <span class=\"string\">&#x27;Class 3&#x27;</span>, <span class=\"string\">&#x27;數學&#x27;</span>, <span class=\"number\">80</span>),</span><br><span class=\"line\">(<span class=\"number\">9</span>, <span class=\"string\">&#x27;Class 3&#x27;</span>, <span class=\"string\">&#x27;國文&#x27;</span>, <span class=\"number\">90</span>),</span><br><span class=\"line\">(<span class=\"number\">10</span>, <span class=\"string\">&#x27;Class 1&#x27;</span>, <span class=\"string\">&#x27;數學&#x27;</span>, <span class=\"number\">87</span>),</span><br><span class=\"line\">(<span class=\"number\">10</span>, <span class=\"string\">&#x27;Class 1&#x27;</span>, <span class=\"string\">&#x27;國文&#x27;</span>, <span class=\"number\">88</span>),</span><br><span class=\"line\">(<span class=\"number\">11</span>, <span class=\"string\">&#x27;Class 2&#x27;</span>, <span class=\"string\">&#x27;數學&#x27;</span>, <span class=\"number\">89</span>),</span><br><span class=\"line\">(<span class=\"number\">11</span>, <span class=\"string\">&#x27;Class 2&#x27;</span>, <span class=\"string\">&#x27;國文&#x27;</span>, <span class=\"number\">91</span>),</span><br><span class=\"line\">(<span class=\"number\">12</span>, <span class=\"string\">&#x27;Class 3&#x27;</span>, <span class=\"string\">&#x27;數學&#x27;</span>, <span class=\"number\">94</span>),</span><br><span class=\"line\">(<span class=\"number\">12</span>, <span class=\"string\">&#x27;Class 3&#x27;</span>, <span class=\"string\">&#x27;國文&#x27;</span>, <span class=\"number\">96</span>),</span><br><span class=\"line\">(<span class=\"number\">13</span>, <span class=\"string\">&#x27;Class 1&#x27;</span>, <span class=\"string\">&#x27;數學&#x27;</span>, <span class=\"number\">75</span>),</span><br><span class=\"line\">(<span class=\"number\">13</span>, <span class=\"string\">&#x27;Class 1&#x27;</span>, <span class=\"string\">&#x27;國文&#x27;</span>, <span class=\"number\">85</span>),</span><br><span class=\"line\">(<span class=\"number\">14</span>, <span class=\"string\">&#x27;Class 2&#x27;</span>, <span class=\"string\">&#x27;數學&#x27;</span>, <span class=\"number\">88</span>),</span><br><span class=\"line\">(<span class=\"number\">14</span>, <span class=\"string\">&#x27;Class 2&#x27;</span>, <span class=\"string\">&#x27;國文&#x27;</span>, <span class=\"number\">92</span>),</span><br><span class=\"line\">(<span class=\"number\">15</span>, <span class=\"string\">&#x27;Class 3&#x27;</span>, <span class=\"string\">&#x27;數學&#x27;</span>, <span class=\"number\">93</span>),</span><br><span class=\"line\">(<span class=\"number\">15</span>, <span class=\"string\">&#x27;Class 3&#x27;</span>, <span class=\"string\">&#x27;國文&#x27;</span>, <span class=\"number\">95</span>);</span><br></pre></td></tr></table></figure>\n\n<p><a href=\"https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FLine-Bot%E5%92%8Cgpt%E5%AF%A6%E6%88%B0%E6%95%99%E5%AD%B8%2Fstudent-score%2Fstudent-score.png?alt=media&token=745ae4d1-f357-40d7-b972-81c299714061\"><img src=\"https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FLine-Bot%E5%92%8Cgpt%E5%AF%A6%E6%88%B0%E6%95%99%E5%AD%B8%2Fstudent-score%2Fstudent-score.png?alt=media&token=745ae4d1-f357-40d7-b972-81c299714061\" alt=\"student-score\"></a></p>\n<hr>\n<h3 id=\"6-使用-OpenAI-生成-SQL-語句\"><a href=\"#6-使用-OpenAI-生成-SQL-語句\" class=\"headerlink\" title=\"6. 使用 OpenAI 生成 SQL 語句\"></a>6. 使用 OpenAI 生成 SQL 語句</h3><p>當 LINE Bot 接收到查詢訊息時，會呼叫 OpenAI API 自動生成 SQL 查詢語句。以下是範例的整合程式碼片段：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">response = openai.ChatCompletion.create(</span><br><span class=\"line\">    model=<span class=\"string\">&quot;gpt-4o-mini&quot;</span>,</span><br><span class=\"line\">    messages=[</span><br><span class=\"line\">        &#123;<span class=\"string\">&quot;role&quot;</span>: <span class=\"string\">&quot;system&quot;</span>, <span class=\"string\">&quot;content&quot;</span>: <span class=\"string\">&quot;You are a helpful assistant that helps users query a MySQL database.&quot;</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"string\">&quot;role&quot;</span>: <span class=\"string\">&quot;user&quot;</span>, <span class=\"string\">&quot;content&quot;</span>: event.message.text&#125;</span><br><span class=\"line\">    ],</span><br><span class=\"line\">    temperature=<span class=\"number\">0</span>,</span><br><span class=\"line\">    max_tokens=<span class=\"number\">400</span>,</span><br><span class=\"line\">    top_p=<span class=\"number\">1</span>,</span><br><span class=\"line\">    frequency_penalty=<span class=\"number\">0</span>,</span><br><span class=\"line\">    presence_penalty=<span class=\"number\">0</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<hr>\n<h3 id=\"7-LINE-Bot-與-OpenAI-整合完整程式碼\"><a href=\"#7-LINE-Bot-與-OpenAI-整合完整程式碼\" class=\"headerlink\" title=\"7. LINE Bot 與 OpenAI 整合完整程式碼\"></a>7. LINE Bot 與 OpenAI 整合完整程式碼</h3><p>整合 LINE Bot 與 OpenAI API，並將接收到的查詢請求轉換為 SQL 查詢並從 MySQL 資料庫中提取資料。以下是完整的程式碼片段：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> openai</span><br><span class=\"line\"><span class=\"keyword\">from</span> flask <span class=\"keyword\">import</span> Flask, request, abort</span><br><span class=\"line\"><span class=\"keyword\">from</span> linebot <span class=\"keyword\">import</span> LineBotApi, WebhookHandler</span><br><span class=\"line\"><span class=\"keyword\">from</span> linebot.exceptions <span class=\"keyword\">import</span> InvalidSignatureError</span><br><span class=\"line\"><span class=\"keyword\">from</span> linebot.models <span class=\"keyword\">import</span> MessageEvent, TextMessage, TextSendMessage</span><br><span class=\"line\"><span class=\"keyword\">import</span> pymysql</span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"></span><br><span class=\"line\">app = Flask(__name__)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 設定 Linebot 的 Channel Access Token 和 Channel Secret</span></span><br><span class=\"line\"><span class=\"comment\"># 目前是 鈞皓科技 的 LineBot</span></span><br><span class=\"line\">line_bot_api = LineBotApi(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">handler = WebhookHandler(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 設定 OpenAI API 金鑰</span></span><br><span class=\"line\">openai.api_key = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 資料庫連接設定</span></span><br><span class=\"line\">db_settings = &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;host&quot;</span>: <span class=\"string\">&quot;127.0.0.1&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;port&quot;</span>: <span class=\"number\">3306</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;user&quot;</span>: <span class=\"string\">&quot;root&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;password&quot;</span>: <span class=\"string\">&quot;password&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;db&quot;</span>: <span class=\"string\">&quot;studentdb&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;charset&quot;</span>: <span class=\"string\">&quot;utf8&quot;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&quot;/&quot;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">root</span>():</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&quot;Hello, World!&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&quot;/callback&quot;</span>, methods=[<span class=\"string\">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">callback</span>():</span><br><span class=\"line\">    signature = request.headers[<span class=\"string\">&#x27;X-Line-Signature&#x27;</span>]</span><br><span class=\"line\">    body = request.get_data(as_text=<span class=\"literal\">True</span>)</span><br><span class=\"line\">    app.logger.info(<span class=\"string\">&quot;Request body: &quot;</span> + body)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;Request body: &quot;</span> + signature)</span><br><span class=\"line\">        handler.handle(body, signature)</span><br><span class=\"line\">    <span class=\"keyword\">except</span> InvalidSignatureError:</span><br><span class=\"line\">        abort(<span class=\"number\">400</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&#x27;OK&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@handler.add(<span class=\"params\">MessageEvent, message=TextMessage</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">handle_message</span>(<span class=\"params\">event</span>):</span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        <span class=\"comment\"># 呼叫 OpenAI ChatCompletion API 來生成 SQL 語句</span></span><br><span class=\"line\">        response = openai.ChatCompletion.create(</span><br><span class=\"line\">            model=<span class=\"string\">&quot;gpt-4o-mini&quot;</span>,</span><br><span class=\"line\">            messages=[</span><br><span class=\"line\">                &#123;<span class=\"string\">&quot;role&quot;</span>: <span class=\"string\">&quot;system&quot;</span>, <span class=\"string\">&quot;content&quot;</span>: <span class=\"string\">&quot;You are a helpful assistant that helps users query a MySQL database.&quot;</span>&#125;,</span><br><span class=\"line\">                &#123;<span class=\"string\">&quot;role&quot;</span>: <span class=\"string\">&quot;user&quot;</span>, <span class=\"string\">&quot;content&quot;</span>: event.message.text&#125;</span><br><span class=\"line\">            ],</span><br><span class=\"line\">            temperature=<span class=\"number\">0</span>,</span><br><span class=\"line\">            max_tokens=<span class=\"number\">400</span>,</span><br><span class=\"line\">            top_p=<span class=\"number\">1</span>,</span><br><span class=\"line\">            frequency_penalty=<span class=\"number\">0</span>,</span><br><span class=\"line\">            presence_penalty=<span class=\"number\">0</span></span><br><span class=\"line\">        )</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 處理 OpenAI 回應，過濾掉非 SQL 的部分</span></span><br><span class=\"line\">        response_text = response.choices[<span class=\"number\">0</span>].message[<span class=\"string\">&#x27;content&#x27;</span>].strip()</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 使用正則表達式過濾掉註解和解釋部分，只保留 SQL 語句</span></span><br><span class=\"line\">        sql_match = re.search(<span class=\"string\">r&quot;SELECT.*?;&quot;</span>, response_text, re.DOTALL)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> sql_match:</span><br><span class=\"line\">            response_sql = sql_match.group(<span class=\"number\">0</span>).strip()  <span class=\"comment\"># 提取到 SQL 語句</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            response_sql = <span class=\"string\">&quot;&quot;</span>  <span class=\"comment\"># 如果沒有找到有效的 SQL，設為空</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 檢查是否有生成有效的 SQL 語句</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> response_sql:</span><br><span class=\"line\">            <span class=\"comment\"># 串接資料庫並執行 SQL 查詢</span></span><br><span class=\"line\">            conn = pymysql.connect(**db_settings)</span><br><span class=\"line\">            <span class=\"keyword\">with</span> conn.cursor() <span class=\"keyword\">as</span> cursor:</span><br><span class=\"line\">                command = response_sql.replace(<span class=\"string\">&quot;\\n&quot;</span>, <span class=\"string\">&quot; &quot;</span>)  <span class=\"comment\"># 移除多餘的換行符號</span></span><br><span class=\"line\">                <span class=\"built_in\">print</span>(<span class=\"string\">&quot;Executing SQL:&quot;</span>, command)</span><br><span class=\"line\">                cursor.execute(command)</span><br><span class=\"line\">                result = cursor.fetchall()</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\"># 格式化查詢結果</span></span><br><span class=\"line\">            line_data = <span class=\"string\">&quot;class\\tsubject\\tscore\\n&quot;</span></span><br><span class=\"line\">            line_data += <span class=\"string\">&quot;-------------------\\n&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">for</span> row <span class=\"keyword\">in</span> result:</span><br><span class=\"line\">                line_data += <span class=\"string\">f&quot;<span class=\"subst\">&#123;row[<span class=\"number\">0</span>]&#125;</span>\\t<span class=\"subst\">&#123;row[<span class=\"number\">1</span>]&#125;</span>\\t<span class=\"subst\">&#123;row[<span class=\"number\">2</span>]&#125;</span>\\n&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\"># 回傳結果給 LINE 用戶</span></span><br><span class=\"line\">            line_bot_api.reply_message(event.reply_token, TextSendMessage(text=response_sql + <span class=\"string\">&#x27;\\n&#x27;</span> + line_data))</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            line_bot_api.reply_message(event.reply_token, TextSendMessage(text=<span class=\"string\">&quot;未能生成有效的 SQL 查詢語句。&quot;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">except</span> Exception <span class=\"keyword\">as</span> e:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;Error:&quot;</span>, e)</span><br><span class=\"line\">        line_bot_api.reply_message(event.reply_token, TextSendMessage(text=<span class=\"string\">&quot;發生錯誤，請稍後再試。&quot;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&quot;__main__&quot;</span>:</span><br><span class=\"line\">    app.run()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"8-Demo-時間\"><a href=\"#8-Demo-時間\" class=\"headerlink\" title=\"8. Demo 時間\"></a>8. Demo 時間</h3><p><a href=\"https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FLine-Bot%E5%92%8Cgpt%E5%AF%A6%E6%88%B0%E6%95%99%E5%AD%B8%2Fstudent-score%2F%E6%88%AA%E5%9C%96%202024-10-02%20%E6%99%9A%E4%B8%8A8.14.39.png?alt=media&token=de5ac121-8dc2-4912-be23-0ac4a82635ca\"><img src=\"https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FLine-Bot%E5%92%8Cgpt%E5%AF%A6%E6%88%B0%E6%95%99%E5%AD%B8%2Fstudent-score%2F%E6%88%AA%E5%9C%96%202024-10-02%20%E6%99%9A%E4%B8%8A8.14.39.png?alt=media&token=de5ac121-8dc2-4912-be23-0ac4a82635ca\" alt=\"linebot-demo\"></a></p>\n","cover_type":"img","excerpt":"","more":"<p>參考來源 : <a href=\"https://www.youtube.com/watch?v=IfzY0axpjD8&t=333s\">https://www.youtube.com/watch?v=IfzY0axpjD8&amp;t=333s</a></p>\n<h2 id=\"基於-LINE-Bot-與-OpenAI-的-MySQL-學生成績管理系統教學文件\"><a href=\"#基於-LINE-Bot-與-OpenAI-的-MySQL-學生成績管理系統教學文件\" class=\"headerlink\" title=\"基於 LINE Bot 與 OpenAI 的 MySQL 學生成績管理系統教學文件\"></a>基於 LINE Bot 與 OpenAI 的 MySQL 學生成績管理系統教學文件</h2><h3 id=\"目錄\"><a href=\"#目錄\" class=\"headerlink\" title=\"目錄\"></a>目錄</h3><ol>\n<li>前言</li>\n<li>系統需求與工具</li>\n<li>資料庫設計與結構</li>\n<li>插入 15 位學生的資料</li>\n<li>為每位學生插入成績</li>\n<li>使用 OpenAI 生成 SQL 語句</li>\n<li>LINE Bot 與 OpenAI 整合</li>\n<li>查詢學生成績</li>\n<li>常見問題與解決方案</li>\n<li>結論</li>\n</ol>\n<hr>\n<h3 id=\"1-前言\"><a href=\"#1-前言\" class=\"headerlink\" title=\"1. 前言\"></a>1. 前言</h3><p>本教學文件將指導您如何建立一個基於 MySQL 的學生成績管理系統，並通過 LINE Bot 與 OpenAI 的整合來查詢和管理數據。我們將介紹如何使用 LINE Bot 接收訊息、OpenAI 自動生成 SQL 語句，並通過 MySQL 查詢學生的成績。</p>\n<hr>\n<h3 id=\"2-系統需求與工具\"><a href=\"#2-系統需求與工具\" class=\"headerlink\" title=\"2. 系統需求與工具\"></a>2. 系統需求與工具</h3><p><strong>系統需求：</strong></p>\n<ul>\n<li>安裝了 MySQL 伺服器</li>\n<li>Python 3 環境（Flask、OpenAI 和 LINE Bot SDK）</li>\n<li>MySQL 客戶端或管理工具（如 MySQL Workbench）</li>\n<li>OpenAI API 金鑰</li>\n<li>LINE Bot API 金鑰</li>\n</ul>\n<p><strong>工具：</strong></p>\n<ul>\n<li>MySQL 伺服器</li>\n<li>MySQL Workbench 或命令行工具</li>\n<li>LINE Bot 設定</li>\n<li>OpenAI API 設定</li>\n</ul>\n<hr>\n<h3 id=\"3-資料庫設計與結構\"><a href=\"#3-資料庫設計與結構\" class=\"headerlink\" title=\"3. 資料庫設計與結構\"></a>3. 資料庫設計與結構</h3><p>在本系統中，我們將創建兩個資料表：一個用來存儲學生的基本信息，另一個用來存儲學生的成績。</p>\n<h3 id=\"student-資料表結構：\"><a href=\"#student-資料表結構：\" class=\"headerlink\" title=\"student 資料表結構：\"></a><code>student</code> 資料表結構：</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> student (</span><br><span class=\"line\">    sno <span class=\"type\">INT</span> <span class=\"keyword\">PRIMARY</span> KEY,     <span class=\"comment\">-- 學號</span></span><br><span class=\"line\">    class <span class=\"type\">VARCHAR</span>(<span class=\"number\">50</span>),       <span class=\"comment\">-- 班級</span></span><br><span class=\"line\">    name <span class=\"type\">VARCHAR</span>(<span class=\"number\">100</span>),       <span class=\"comment\">-- 學生姓名</span></span><br><span class=\"line\">    sex <span class=\"type\">VARCHAR</span>(<span class=\"number\">10</span>),         <span class=\"comment\">-- 性別</span></span><br><span class=\"line\">    address <span class=\"type\">VARCHAR</span>(<span class=\"number\">255</span>),    <span class=\"comment\">-- 地址</span></span><br><span class=\"line\">    memo TEXT                <span class=\"comment\">-- 備註</span></span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"score-資料表結構：\"><a href=\"#score-資料表結構：\" class=\"headerlink\" title=\"score 資料表結構：\"></a><code>score</code> 資料表結構：</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> score (</span><br><span class=\"line\">    sno <span class=\"type\">INT</span>,                 <span class=\"comment\">-- 學號 (外鍵)</span></span><br><span class=\"line\">    class <span class=\"type\">VARCHAR</span>(<span class=\"number\">50</span>),       <span class=\"comment\">-- 班級</span></span><br><span class=\"line\">    subject <span class=\"type\">VARCHAR</span>(<span class=\"number\">100</span>),    <span class=\"comment\">-- 科目</span></span><br><span class=\"line\">    score <span class=\"type\">INT</span>                <span class=\"comment\">-- 成績</span></span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>這兩個資料表使用 <code>sno</code> 欄位關聯，來管理學生的基本信息和成績。</p>\n<hr>\n<h3 id=\"4-插入-15-位學生的資料\"><a href=\"#4-插入-15-位學生的資料\" class=\"headerlink\" title=\"4. 插入 15 位學生的資料\"></a>4. 插入 15 位學生的資料</h3><p>接下來，我們將插入 15 位學生的資料：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> student (sno, class, name, sex, address, memo) <span class=\"keyword\">VALUES</span></span><br><span class=\"line\">(<span class=\"number\">1</span>, <span class=\"string\">&#x27;Class 1&#x27;</span>, <span class=\"string\">&#x27;John Doe&#x27;</span>, <span class=\"string\">&#x27;M&#x27;</span>, <span class=\"string\">&#x27;123 Street A&#x27;</span>, <span class=\"string\">&#x27;Excellent performance&#x27;</span>),</span><br><span class=\"line\">(<span class=\"number\">2</span>, <span class=\"string\">&#x27;Class 2&#x27;</span>, <span class=\"string\">&#x27;Jane Smith&#x27;</span>, <span class=\"string\">&#x27;F&#x27;</span>, <span class=\"string\">&#x27;456 Street B&#x27;</span>, <span class=\"string\">&#x27;Needs improvement in math&#x27;</span>),</span><br><span class=\"line\">(<span class=\"number\">3</span>, <span class=\"string\">&#x27;Class 3&#x27;</span>, <span class=\"string\">&#x27;Alice Brown&#x27;</span>, <span class=\"string\">&#x27;F&#x27;</span>, <span class=\"string\">&#x27;789 Street C&#x27;</span>, <span class=\"string\">&#x27;Top student&#x27;</span>),</span><br><span class=\"line\">(<span class=\"number\">4</span>, <span class=\"string\">&#x27;Class 1&#x27;</span>, <span class=\"string\">&#x27;Bob Johnson&#x27;</span>, <span class=\"string\">&#x27;M&#x27;</span>, <span class=\"string\">&#x27;1010 Street D&#x27;</span>, <span class=\"string\">&#x27;New student&#x27;</span>),</span><br><span class=\"line\">(<span class=\"number\">5</span>, <span class=\"string\">&#x27;Class 2&#x27;</span>, <span class=\"string\">&#x27;Charlie Davis&#x27;</span>, <span class=\"string\">&#x27;M&#x27;</span>, <span class=\"string\">&#x27;1111 Street E&#x27;</span>, <span class=\"string\">&#x27;Struggles with homework&#x27;</span>),</span><br><span class=\"line\">(<span class=\"number\">6</span>, <span class=\"string\">&#x27;Class 3&#x27;</span>, <span class=\"string\">&#x27;Diana White&#x27;</span>, <span class=\"string\">&#x27;F&#x27;</span>, <span class=\"string\">&#x27;1212 Street F&#x27;</span>, <span class=\"string\">&#x27;Shows great potential&#x27;</span>),</span><br><span class=\"line\">(<span class=\"number\">7</span>, <span class=\"string\">&#x27;Class 1&#x27;</span>, <span class=\"string\">&#x27;Evan Green&#x27;</span>, <span class=\"string\">&#x27;M&#x27;</span>, <span class=\"string\">&#x27;1313 Street G&#x27;</span>, <span class=\"string\">&#x27;Good participation&#x27;</span>),</span><br><span class=\"line\">(<span class=\"number\">8</span>, <span class=\"string\">&#x27;Class 2&#x27;</span>, <span class=\"string\">&#x27;Fiona Blue&#x27;</span>, <span class=\"string\">&#x27;F&#x27;</span>, <span class=\"string\">&#x27;1414 Street H&#x27;</span>, <span class=\"string\">&#x27;Excellent attendance&#x27;</span>),</span><br><span class=\"line\">(<span class=\"number\">9</span>, <span class=\"string\">&#x27;Class 3&#x27;</span>, <span class=\"string\">&#x27;George Black&#x27;</span>, <span class=\"string\">&#x27;M&#x27;</span>, <span class=\"string\">&#x27;1515 Street I&#x27;</span>, <span class=\"string\">&#x27;Needs focus on studies&#x27;</span>),</span><br><span class=\"line\">(<span class=\"number\">10</span>, <span class=\"string\">&#x27;Class 1&#x27;</span>, <span class=\"string\">&#x27;Hannah Yellow&#x27;</span>, <span class=\"string\">&#x27;F&#x27;</span>, <span class=\"string\">&#x27;1616 Street J&#x27;</span>, <span class=\"string\">&#x27;Very creative&#x27;</span>),</span><br><span class=\"line\">(<span class=\"number\">11</span>, <span class=\"string\">&#x27;Class 2&#x27;</span>, <span class=\"string\">&#x27;Ivan Orange&#x27;</span>, <span class=\"string\">&#x27;M&#x27;</span>, <span class=\"string\">&#x27;1717 Street K&#x27;</span>, <span class=\"string\">&#x27;Great in sports&#x27;</span>),</span><br><span class=\"line\">(<span class=\"number\">12</span>, <span class=\"string\">&#x27;Class 3&#x27;</span>, <span class=\"string\">&#x27;Jenny Purple&#x27;</span>, <span class=\"string\">&#x27;F&#x27;</span>, <span class=\"string\">&#x27;1818 Street L&#x27;</span>, <span class=\"string\">&#x27;Good academic performance&#x27;</span>),</span><br><span class=\"line\">(<span class=\"number\">13</span>, <span class=\"string\">&#x27;Class 1&#x27;</span>, <span class=\"string\">&#x27;Kevin Red&#x27;</span>, <span class=\"string\">&#x27;M&#x27;</span>, <span class=\"string\">&#x27;1919 Street M&#x27;</span>, <span class=\"string\">&#x27;Enthusiastic in class&#x27;</span>),</span><br><span class=\"line\">(<span class=\"number\">14</span>, <span class=\"string\">&#x27;Class 2&#x27;</span>, <span class=\"string\">&#x27;Lily Pink&#x27;</span>, <span class=\"string\">&#x27;F&#x27;</span>, <span class=\"string\">&#x27;2020 Street N&#x27;</span>, <span class=\"string\">&#x27;Hardworking student&#x27;</span>),</span><br><span class=\"line\">(<span class=\"number\">15</span>, <span class=\"string\">&#x27;Class 3&#x27;</span>, <span class=\"string\">&#x27;Michael Cyan&#x27;</span>, <span class=\"string\">&#x27;M&#x27;</span>, <span class=\"string\">&#x27;2121 Street O&#x27;</span>, <span class=\"string\">&#x27;Quick learner&#x27;</span>);</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FLine-Bot%E5%92%8Cgpt%E5%AF%A6%E6%88%B0%E6%95%99%E5%AD%B8%2Fstudent-score%2Fstudent-studens.png?alt=media&token=af046ad4-c41a-4823-88c8-d196058d3f32\" alt=\"student DB\"></p>\n<h3 id=\"5-為每位學生插入成績\"><a href=\"#5-為每位學生插入成績\" class=\"headerlink\" title=\"5. 為每位學生插入成績\"></a>5. 為每位學生插入成績</h3><p>接下來，我們為每位學生插入 <code>數學</code> 和 <code>國文</code> 的成績：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> score (sno, class, subject, score) <span class=\"keyword\">VALUES</span></span><br><span class=\"line\">(<span class=\"number\">1</span>, <span class=\"string\">&#x27;Class 1&#x27;</span>, <span class=\"string\">&#x27;數學&#x27;</span>, <span class=\"number\">85</span>),</span><br><span class=\"line\">(<span class=\"number\">1</span>, <span class=\"string\">&#x27;Class 1&#x27;</span>, <span class=\"string\">&#x27;國文&#x27;</span>, <span class=\"number\">90</span>),</span><br><span class=\"line\">(<span class=\"number\">2</span>, <span class=\"string\">&#x27;Class 2&#x27;</span>, <span class=\"string\">&#x27;數學&#x27;</span>, <span class=\"number\">78</span>),</span><br><span class=\"line\">(<span class=\"number\">2</span>, <span class=\"string\">&#x27;Class 2&#x27;</span>, <span class=\"string\">&#x27;國文&#x27;</span>, <span class=\"number\">88</span>),</span><br><span class=\"line\">(<span class=\"number\">3</span>, <span class=\"string\">&#x27;Class 3&#x27;</span>, <span class=\"string\">&#x27;數學&#x27;</span>, <span class=\"number\">92</span>),</span><br><span class=\"line\">(<span class=\"number\">3</span>, <span class=\"string\">&#x27;Class 3&#x27;</span>, <span class=\"string\">&#x27;國文&#x27;</span>, <span class=\"number\">95</span>),</span><br><span class=\"line\">(<span class=\"number\">4</span>, <span class=\"string\">&#x27;Class 1&#x27;</span>, <span class=\"string\">&#x27;數學&#x27;</span>, <span class=\"number\">76</span>),</span><br><span class=\"line\">(<span class=\"number\">4</span>, <span class=\"string\">&#x27;Class 1&#x27;</span>, <span class=\"string\">&#x27;國文&#x27;</span>, <span class=\"number\">85</span>),</span><br><span class=\"line\">(<span class=\"number\">5</span>, <span class=\"string\">&#x27;Class 2&#x27;</span>, <span class=\"string\">&#x27;數學&#x27;</span>, <span class=\"number\">82</span>),</span><br><span class=\"line\">(<span class=\"number\">5</span>, <span class=\"string\">&#x27;Class 2&#x27;</span>, <span class=\"string\">&#x27;國文&#x27;</span>, <span class=\"number\">89</span>),</span><br><span class=\"line\">(<span class=\"number\">6</span>, <span class=\"string\">&#x27;Class 3&#x27;</span>, <span class=\"string\">&#x27;數學&#x27;</span>, <span class=\"number\">88</span>),</span><br><span class=\"line\">(<span class=\"number\">6</span>, <span class=\"string\">&#x27;Class 3&#x27;</span>, <span class=\"string\">&#x27;國文&#x27;</span>, <span class=\"number\">91</span>),</span><br><span class=\"line\">(<span class=\"number\">7</span>, <span class=\"string\">&#x27;Class 1&#x27;</span>, <span class=\"string\">&#x27;數學&#x27;</span>, <span class=\"number\">90</span>),</span><br><span class=\"line\">(<span class=\"number\">7</span>, <span class=\"string\">&#x27;Class 1&#x27;</span>, <span class=\"string\">&#x27;國文&#x27;</span>, <span class=\"number\">87</span>),</span><br><span class=\"line\">(<span class=\"number\">8</span>, <span class=\"string\">&#x27;Class 2&#x27;</span>, <span class=\"string\">&#x27;數學&#x27;</span>, <span class=\"number\">85</span>),</span><br><span class=\"line\">(<span class=\"number\">8</span>, <span class=\"string\">&#x27;Class 2&#x27;</span>, <span class=\"string\">&#x27;國文&#x27;</span>, <span class=\"number\">92</span>),</span><br><span class=\"line\">(<span class=\"number\">9</span>, <span class=\"string\">&#x27;Class 3&#x27;</span>, <span class=\"string\">&#x27;數學&#x27;</span>, <span class=\"number\">80</span>),</span><br><span class=\"line\">(<span class=\"number\">9</span>, <span class=\"string\">&#x27;Class 3&#x27;</span>, <span class=\"string\">&#x27;國文&#x27;</span>, <span class=\"number\">90</span>),</span><br><span class=\"line\">(<span class=\"number\">10</span>, <span class=\"string\">&#x27;Class 1&#x27;</span>, <span class=\"string\">&#x27;數學&#x27;</span>, <span class=\"number\">87</span>),</span><br><span class=\"line\">(<span class=\"number\">10</span>, <span class=\"string\">&#x27;Class 1&#x27;</span>, <span class=\"string\">&#x27;國文&#x27;</span>, <span class=\"number\">88</span>),</span><br><span class=\"line\">(<span class=\"number\">11</span>, <span class=\"string\">&#x27;Class 2&#x27;</span>, <span class=\"string\">&#x27;數學&#x27;</span>, <span class=\"number\">89</span>),</span><br><span class=\"line\">(<span class=\"number\">11</span>, <span class=\"string\">&#x27;Class 2&#x27;</span>, <span class=\"string\">&#x27;國文&#x27;</span>, <span class=\"number\">91</span>),</span><br><span class=\"line\">(<span class=\"number\">12</span>, <span class=\"string\">&#x27;Class 3&#x27;</span>, <span class=\"string\">&#x27;數學&#x27;</span>, <span class=\"number\">94</span>),</span><br><span class=\"line\">(<span class=\"number\">12</span>, <span class=\"string\">&#x27;Class 3&#x27;</span>, <span class=\"string\">&#x27;國文&#x27;</span>, <span class=\"number\">96</span>),</span><br><span class=\"line\">(<span class=\"number\">13</span>, <span class=\"string\">&#x27;Class 1&#x27;</span>, <span class=\"string\">&#x27;數學&#x27;</span>, <span class=\"number\">75</span>),</span><br><span class=\"line\">(<span class=\"number\">13</span>, <span class=\"string\">&#x27;Class 1&#x27;</span>, <span class=\"string\">&#x27;國文&#x27;</span>, <span class=\"number\">85</span>),</span><br><span class=\"line\">(<span class=\"number\">14</span>, <span class=\"string\">&#x27;Class 2&#x27;</span>, <span class=\"string\">&#x27;數學&#x27;</span>, <span class=\"number\">88</span>),</span><br><span class=\"line\">(<span class=\"number\">14</span>, <span class=\"string\">&#x27;Class 2&#x27;</span>, <span class=\"string\">&#x27;國文&#x27;</span>, <span class=\"number\">92</span>),</span><br><span class=\"line\">(<span class=\"number\">15</span>, <span class=\"string\">&#x27;Class 3&#x27;</span>, <span class=\"string\">&#x27;數學&#x27;</span>, <span class=\"number\">93</span>),</span><br><span class=\"line\">(<span class=\"number\">15</span>, <span class=\"string\">&#x27;Class 3&#x27;</span>, <span class=\"string\">&#x27;國文&#x27;</span>, <span class=\"number\">95</span>);</span><br></pre></td></tr></table></figure>\n\n<p><a href=\"https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FLine-Bot%E5%92%8Cgpt%E5%AF%A6%E6%88%B0%E6%95%99%E5%AD%B8%2Fstudent-score%2Fstudent-score.png?alt=media&token=745ae4d1-f357-40d7-b972-81c299714061\"><img src=\"https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FLine-Bot%E5%92%8Cgpt%E5%AF%A6%E6%88%B0%E6%95%99%E5%AD%B8%2Fstudent-score%2Fstudent-score.png?alt=media&token=745ae4d1-f357-40d7-b972-81c299714061\" alt=\"student-score\"></a></p>\n<hr>\n<h3 id=\"6-使用-OpenAI-生成-SQL-語句\"><a href=\"#6-使用-OpenAI-生成-SQL-語句\" class=\"headerlink\" title=\"6. 使用 OpenAI 生成 SQL 語句\"></a>6. 使用 OpenAI 生成 SQL 語句</h3><p>當 LINE Bot 接收到查詢訊息時，會呼叫 OpenAI API 自動生成 SQL 查詢語句。以下是範例的整合程式碼片段：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">response = openai.ChatCompletion.create(</span><br><span class=\"line\">    model=<span class=\"string\">&quot;gpt-4o-mini&quot;</span>,</span><br><span class=\"line\">    messages=[</span><br><span class=\"line\">        &#123;<span class=\"string\">&quot;role&quot;</span>: <span class=\"string\">&quot;system&quot;</span>, <span class=\"string\">&quot;content&quot;</span>: <span class=\"string\">&quot;You are a helpful assistant that helps users query a MySQL database.&quot;</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"string\">&quot;role&quot;</span>: <span class=\"string\">&quot;user&quot;</span>, <span class=\"string\">&quot;content&quot;</span>: event.message.text&#125;</span><br><span class=\"line\">    ],</span><br><span class=\"line\">    temperature=<span class=\"number\">0</span>,</span><br><span class=\"line\">    max_tokens=<span class=\"number\">400</span>,</span><br><span class=\"line\">    top_p=<span class=\"number\">1</span>,</span><br><span class=\"line\">    frequency_penalty=<span class=\"number\">0</span>,</span><br><span class=\"line\">    presence_penalty=<span class=\"number\">0</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<hr>\n<h3 id=\"7-LINE-Bot-與-OpenAI-整合完整程式碼\"><a href=\"#7-LINE-Bot-與-OpenAI-整合完整程式碼\" class=\"headerlink\" title=\"7. LINE Bot 與 OpenAI 整合完整程式碼\"></a>7. LINE Bot 與 OpenAI 整合完整程式碼</h3><p>整合 LINE Bot 與 OpenAI API，並將接收到的查詢請求轉換為 SQL 查詢並從 MySQL 資料庫中提取資料。以下是完整的程式碼片段：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> openai</span><br><span class=\"line\"><span class=\"keyword\">from</span> flask <span class=\"keyword\">import</span> Flask, request, abort</span><br><span class=\"line\"><span class=\"keyword\">from</span> linebot <span class=\"keyword\">import</span> LineBotApi, WebhookHandler</span><br><span class=\"line\"><span class=\"keyword\">from</span> linebot.exceptions <span class=\"keyword\">import</span> InvalidSignatureError</span><br><span class=\"line\"><span class=\"keyword\">from</span> linebot.models <span class=\"keyword\">import</span> MessageEvent, TextMessage, TextSendMessage</span><br><span class=\"line\"><span class=\"keyword\">import</span> pymysql</span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"></span><br><span class=\"line\">app = Flask(__name__)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 設定 Linebot 的 Channel Access Token 和 Channel Secret</span></span><br><span class=\"line\"><span class=\"comment\"># 目前是 鈞皓科技 的 LineBot</span></span><br><span class=\"line\">line_bot_api = LineBotApi(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">handler = WebhookHandler(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 設定 OpenAI API 金鑰</span></span><br><span class=\"line\">openai.api_key = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 資料庫連接設定</span></span><br><span class=\"line\">db_settings = &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;host&quot;</span>: <span class=\"string\">&quot;127.0.0.1&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;port&quot;</span>: <span class=\"number\">3306</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;user&quot;</span>: <span class=\"string\">&quot;root&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;password&quot;</span>: <span class=\"string\">&quot;password&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;db&quot;</span>: <span class=\"string\">&quot;studentdb&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;charset&quot;</span>: <span class=\"string\">&quot;utf8&quot;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&quot;/&quot;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">root</span>():</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&quot;Hello, World!&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&quot;/callback&quot;</span>, methods=[<span class=\"string\">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">callback</span>():</span><br><span class=\"line\">    signature = request.headers[<span class=\"string\">&#x27;X-Line-Signature&#x27;</span>]</span><br><span class=\"line\">    body = request.get_data(as_text=<span class=\"literal\">True</span>)</span><br><span class=\"line\">    app.logger.info(<span class=\"string\">&quot;Request body: &quot;</span> + body)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;Request body: &quot;</span> + signature)</span><br><span class=\"line\">        handler.handle(body, signature)</span><br><span class=\"line\">    <span class=\"keyword\">except</span> InvalidSignatureError:</span><br><span class=\"line\">        abort(<span class=\"number\">400</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&#x27;OK&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@handler.add(<span class=\"params\">MessageEvent, message=TextMessage</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">handle_message</span>(<span class=\"params\">event</span>):</span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        <span class=\"comment\"># 呼叫 OpenAI ChatCompletion API 來生成 SQL 語句</span></span><br><span class=\"line\">        response = openai.ChatCompletion.create(</span><br><span class=\"line\">            model=<span class=\"string\">&quot;gpt-4o-mini&quot;</span>,</span><br><span class=\"line\">            messages=[</span><br><span class=\"line\">                &#123;<span class=\"string\">&quot;role&quot;</span>: <span class=\"string\">&quot;system&quot;</span>, <span class=\"string\">&quot;content&quot;</span>: <span class=\"string\">&quot;You are a helpful assistant that helps users query a MySQL database.&quot;</span>&#125;,</span><br><span class=\"line\">                &#123;<span class=\"string\">&quot;role&quot;</span>: <span class=\"string\">&quot;user&quot;</span>, <span class=\"string\">&quot;content&quot;</span>: event.message.text&#125;</span><br><span class=\"line\">            ],</span><br><span class=\"line\">            temperature=<span class=\"number\">0</span>,</span><br><span class=\"line\">            max_tokens=<span class=\"number\">400</span>,</span><br><span class=\"line\">            top_p=<span class=\"number\">1</span>,</span><br><span class=\"line\">            frequency_penalty=<span class=\"number\">0</span>,</span><br><span class=\"line\">            presence_penalty=<span class=\"number\">0</span></span><br><span class=\"line\">        )</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 處理 OpenAI 回應，過濾掉非 SQL 的部分</span></span><br><span class=\"line\">        response_text = response.choices[<span class=\"number\">0</span>].message[<span class=\"string\">&#x27;content&#x27;</span>].strip()</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 使用正則表達式過濾掉註解和解釋部分，只保留 SQL 語句</span></span><br><span class=\"line\">        sql_match = re.search(<span class=\"string\">r&quot;SELECT.*?;&quot;</span>, response_text, re.DOTALL)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> sql_match:</span><br><span class=\"line\">            response_sql = sql_match.group(<span class=\"number\">0</span>).strip()  <span class=\"comment\"># 提取到 SQL 語句</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            response_sql = <span class=\"string\">&quot;&quot;</span>  <span class=\"comment\"># 如果沒有找到有效的 SQL，設為空</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 檢查是否有生成有效的 SQL 語句</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> response_sql:</span><br><span class=\"line\">            <span class=\"comment\"># 串接資料庫並執行 SQL 查詢</span></span><br><span class=\"line\">            conn = pymysql.connect(**db_settings)</span><br><span class=\"line\">            <span class=\"keyword\">with</span> conn.cursor() <span class=\"keyword\">as</span> cursor:</span><br><span class=\"line\">                command = response_sql.replace(<span class=\"string\">&quot;\\n&quot;</span>, <span class=\"string\">&quot; &quot;</span>)  <span class=\"comment\"># 移除多餘的換行符號</span></span><br><span class=\"line\">                <span class=\"built_in\">print</span>(<span class=\"string\">&quot;Executing SQL:&quot;</span>, command)</span><br><span class=\"line\">                cursor.execute(command)</span><br><span class=\"line\">                result = cursor.fetchall()</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\"># 格式化查詢結果</span></span><br><span class=\"line\">            line_data = <span class=\"string\">&quot;class\\tsubject\\tscore\\n&quot;</span></span><br><span class=\"line\">            line_data += <span class=\"string\">&quot;-------------------\\n&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">for</span> row <span class=\"keyword\">in</span> result:</span><br><span class=\"line\">                line_data += <span class=\"string\">f&quot;<span class=\"subst\">&#123;row[<span class=\"number\">0</span>]&#125;</span>\\t<span class=\"subst\">&#123;row[<span class=\"number\">1</span>]&#125;</span>\\t<span class=\"subst\">&#123;row[<span class=\"number\">2</span>]&#125;</span>\\n&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\"># 回傳結果給 LINE 用戶</span></span><br><span class=\"line\">            line_bot_api.reply_message(event.reply_token, TextSendMessage(text=response_sql + <span class=\"string\">&#x27;\\n&#x27;</span> + line_data))</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            line_bot_api.reply_message(event.reply_token, TextSendMessage(text=<span class=\"string\">&quot;未能生成有效的 SQL 查詢語句。&quot;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">except</span> Exception <span class=\"keyword\">as</span> e:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;Error:&quot;</span>, e)</span><br><span class=\"line\">        line_bot_api.reply_message(event.reply_token, TextSendMessage(text=<span class=\"string\">&quot;發生錯誤，請稍後再試。&quot;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&quot;__main__&quot;</span>:</span><br><span class=\"line\">    app.run()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"8-Demo-時間\"><a href=\"#8-Demo-時間\" class=\"headerlink\" title=\"8. Demo 時間\"></a>8. Demo 時間</h3><p><a href=\"https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FLine-Bot%E5%92%8Cgpt%E5%AF%A6%E6%88%B0%E6%95%99%E5%AD%B8%2Fstudent-score%2F%E6%88%AA%E5%9C%96%202024-10-02%20%E6%99%9A%E4%B8%8A8.14.39.png?alt=media&token=de5ac121-8dc2-4912-be23-0ac4a82635ca\"><img src=\"https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FLine-Bot%E5%92%8Cgpt%E5%AF%A6%E6%88%B0%E6%95%99%E5%AD%B8%2Fstudent-score%2F%E6%88%AA%E5%9C%96%202024-10-02%20%E6%99%9A%E4%B8%8A8.14.39.png?alt=media&token=de5ac121-8dc2-4912-be23-0ac4a82635ca\" alt=\"linebot-demo\"></a></p>\n"},{"layout":"post","title":"Django WebSocket 前後端即時通訊","date":"2024-10-24T02:00:30.000Z","top_img":"https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FDjango%2Fwebsocket.webp?alt=media&token=7e9597ac-6eb5-480c-b7ae-862eede0f1ab","cover":"https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FDjango%2Fwebsocket.webp?alt=media&token=7e9597ac-6eb5-480c-b7ae-862eede0f1ab","_content":"\n## 全部步驟總結\n\n1.  **安裝必要的套件**：\n\n    ```bash\n    pip install channels channels_redis\n    ```\n\n    - **channels**：使 Django 支持 WebSocket。\n    - **channels_redis**：用來實現 Channel Layer，讓不同的 WebSocket 連接能夠進行通訊。\n\n2.  **設定 Django 專案**：\n\n    - 在 `settings.py` 中添加 Channels 和 Channel Layer 配置：\n\n    ```python\n    INSTALLED_APPS = [\n        # 其他已安裝的應用\n        'channels',\n        'chat',  # 你的 WebSocket 應用\n    ]\n\n    ASGI_APPLICATION = 'classify.asgi.application'\n\n    CHANNEL_LAYERS = {\n        'default': {\n            'BACKEND': 'channels_redis.core.RedisChannelLayer',\n            'CONFIG': {\n                \"hosts\": [('127.0.0.1', 6379)],  # Redis 默認地址和端口\n            },\n        },\n    }\n    ```\n\n3.  **創建 `asgi.py` 文件**：\n    在 `classify` 專案目錄下，確保 `asgi.py` 設定為：\n\n    ```python\n    import os\n    from django.core.asgi import get_asgi_application\n    from channels.routing import ProtocolTypeRouter, URLRouter\n    from channels.auth import AuthMiddlewareStack\n    from chat import routing\n\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'classify.settings')\n\n    application = ProtocolTypeRouter({\n        \"http\": get_asgi_application(),\n        \"websocket\": AuthMiddlewareStack(\n            URLRouter(\n                routing.websocket_urlpatterns\n            )\n        ),\n    })\n    ```\n\n4.  **創建 `chat/routing.py` 文件**：\n    設置 WebSocket 路由：\n\n    ```python\n    from django.urls import path\n    from . import consumers\n\n    websocket_urlpatterns = [\n        path('ws/chat/', consumers.ChatConsumer.as_asgi()),\n    ]\n    ```\n\n5.  **編寫 `chat/consumers.py`**：\n    設計 WebSocket Consumer，可以通過 Channel Layer 發送消息：\n\n    ````python\n    import json\n    from channels.generic.websocket import AsyncWebsocketConsumer\n    from channels.layers import get_channel_layer\n    from asgiref.sync import async_to_sync\n\n        class ChatConsumer(AsyncWebsocketConsumer):\n            async def connect(self):\n                self.room_name = \"chat_room\"\n                self.room_group_name = f\"chat_{self.room_name}\"\n\n                await self.channel_layer.group_add(\n                    self.room_group_name,\n                    self.channel_name\n                )\n                await self.accept()\n\n            async def disconnect(self, close_code):\n                await self.channel_layer.group_discard(\n                    self.room_group_name,\n                    self.channel_name\n                )\n\n            async def receive(self, text_data):\n                text_data_json = json.loads(text_data)\n                message = text_data_json['message']\n\n                await self.channel_layer.group_send(\n                    self.room_group_name,\n                    {\n                        'type': 'chat_message',\n                        'message': message\n                    }\n                )\n\n            async def chat_message(self, event):\n                message = event['message']\n                await self.send(text_data=json.dumps({\n                    'message': message\n                }))\n\n            @staticmethod\n            def send_to_frontend(message):\n                channel_layer = get_channel_layer()\n                async_to_sync(channel_layer.group_send)(\n                    \"chat_chat_room\",\n                    {\n                        'type': 'chat_message',\n                        'message': message\n                    }\n                )\n        ```\n\n    ````\n\n6.  **創建自定義 Django 命令**：\n    在 `chat/management/commands/send_message.py` 中添加：\n\n    ```python\n    from django.core.management.base import BaseCommand\n    from chat.consumers import ChatConsumer\n\n    class Command(BaseCommand):\n        help = 'Send a WebSocket message from backend'\n\n        def handle(self, *args, **kwargs):\n            message = \"這是從後端通過 command 發送的 WebSocket 訊息\"\n            ChatConsumer.send_to_frontend(message)\n            self.stdout.write(self.style.SUCCESS('Message sent successfully'))\n    ```\n\n7.  **運行 Django 項目**：\n    確保 Redis 在運行，然後啟動 Django：\n    ```bash\n    python3 manage.py runserver\n    ```\n8.  **從命令行發送訊息**：\n    使用自定義命令從後端發送訊息：\n    ```bash\n    python3 manage.py send_message\n    ```\n\n## 程式執行順序步驟\n\n### 1. 用戶端建立 WebSocket 連接\n\n當用戶開啟瀏覽器並連接到你的 WebSocket 路徑 `/ws/chat/` 時，會觸發 `ChatConsumer` 的 `connect()` 方法：\n\n- **步驟**：\n  1. 用戶端（例如瀏覽器）使用 JavaScript 建立 WebSocket 連接。\n  2. Django Channels 會啟動 `ChatConsumer` 的 `connect()` 方法。\n  3. 用戶端被加入到 `chat_chat_room` 群組，這是透過 `self.channel_layer.group_add()` 方法實現的。\n  4. 連接成功後，`await self.accept()` 允許 WebSocket 連接繼續。\n- **Redis 的角色**：\n  - Redis 會存儲群組 `chat_chat_room` 的資訊，記錄有哪些 WebSocket 連接屬於這個群組。\n\n### 2. 從後端發送訊息\n\n當你運行以下命令時，將觸發後端發送訊息：\n\n```bash\npython3 manage.py send_message\n```\n\n- **步驟**：\n  1. Django 運行 `send_message` 命令，調用 `ChatConsumer.send_to_frontend()` 方法。\n  2. `send_to_frontend()` 使用 `get_channel_layer()` 取得 Channels Layer，並調用 `async_to_sync(channel_layer.group_send(...))` 發送訊息到 `chat_chat_room`。\n  3. 這個訊息會被放入 Redis，由 Redis 處理接下來的訊息分發。\n\n### 3. 消費者接收訊息\n\n每一個屬於 `chat_chat_room` 群組的 WebSocket 連接，都會收到這條訊息，並觸發 `ChatConsumer` 中的 `chat_message()` 方法：\n\n- **步驟**：\n  1. `chat_message()` 方法會被觸發，接收來自 Redis 的訊息。\n  2. 它將訊息轉換為 JSON 格式，然後通過 `await self.send(...)` 發送給 WebSocket 連接的用戶端。\n\n### 4. 用戶端顯示訊息\n\n前端的 JavaScript 監聽 `onmessage` 事件，並顯示從後端接收到的訊息：\n\n- **步驟**：\n  1. 用戶端的 WebSocket 連接收到來自伺服器的訊息。\n  2. `onmessage` 事件被觸發，並執行對應的 JavaScript 函數來處理這條訊息，例如在控制台打印出來或顯示在網頁上。\n\n### 整體流程總結\n\n1. **建立連接**：用戶端連接到 `/ws/chat/`，被加入到 `chat_chat_room` 群組，Redis 記錄連接資訊。\n2. **後端發送訊息**：你運行 `send_message` 命令，後端通過 Channels Layer 和 Redis 將訊息傳給 `chat_chat_room`。\n3. **訊息分發**：Redis 處理訊息分發，確保所有屬於 `chat_chat_room` 的 WebSocket 連接都收到這條訊息。\n4. **前端接收並顯示**：用戶端接收到訊息，觸發 JavaScript 的 `onmessage` 事件，並在頁面上顯示內容。\n\n### Redis 的功能\n\n- **作為 Channel Layer 的後端**：Redis 被用來存儲和傳遞 WebSocket 訊息。當 Django 需要向某個群組或某個連接發送訊息時，Channels 會把訊息放入 Redis，然後由其他連接取出並傳遞給相應的 WebSocket。\n- **訊息中繼**：Redis 可以在多個 Django 節點之間中繼訊息，這使得即使在高負載或多伺服器環境下，WebSocket 仍然能穩定運作。\n\n### Channel Layer 的功能\n\n- **實現群組通信**：讓不同的 WebSocket 連接（甚至不同伺服器上的連接）可以被分組。通過 `group_add()` 和 `group_send()` 來把訊息發送到特定的群組，使得多人可以即時收到更新。\n- **跨進程通信**：Channel Layer 可以在不同進程間傳遞訊息，允許伺服器間或與背景任務間的即時溝通。\n","source":"_posts/Django-WebSocket.md","raw":"---\nlayout: post\ntitle: Django WebSocket 前後端即時通訊\ndate: 2024-10-24 10:00:30\ntags: [Python Django]\ncategories: [WebSocket]\ntop_img: https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FDjango%2Fwebsocket.webp?alt=media&token=7e9597ac-6eb5-480c-b7ae-862eede0f1ab\ncover: https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FDjango%2Fwebsocket.webp?alt=media&token=7e9597ac-6eb5-480c-b7ae-862eede0f1ab\n---\n\n## 全部步驟總結\n\n1.  **安裝必要的套件**：\n\n    ```bash\n    pip install channels channels_redis\n    ```\n\n    - **channels**：使 Django 支持 WebSocket。\n    - **channels_redis**：用來實現 Channel Layer，讓不同的 WebSocket 連接能夠進行通訊。\n\n2.  **設定 Django 專案**：\n\n    - 在 `settings.py` 中添加 Channels 和 Channel Layer 配置：\n\n    ```python\n    INSTALLED_APPS = [\n        # 其他已安裝的應用\n        'channels',\n        'chat',  # 你的 WebSocket 應用\n    ]\n\n    ASGI_APPLICATION = 'classify.asgi.application'\n\n    CHANNEL_LAYERS = {\n        'default': {\n            'BACKEND': 'channels_redis.core.RedisChannelLayer',\n            'CONFIG': {\n                \"hosts\": [('127.0.0.1', 6379)],  # Redis 默認地址和端口\n            },\n        },\n    }\n    ```\n\n3.  **創建 `asgi.py` 文件**：\n    在 `classify` 專案目錄下，確保 `asgi.py` 設定為：\n\n    ```python\n    import os\n    from django.core.asgi import get_asgi_application\n    from channels.routing import ProtocolTypeRouter, URLRouter\n    from channels.auth import AuthMiddlewareStack\n    from chat import routing\n\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'classify.settings')\n\n    application = ProtocolTypeRouter({\n        \"http\": get_asgi_application(),\n        \"websocket\": AuthMiddlewareStack(\n            URLRouter(\n                routing.websocket_urlpatterns\n            )\n        ),\n    })\n    ```\n\n4.  **創建 `chat/routing.py` 文件**：\n    設置 WebSocket 路由：\n\n    ```python\n    from django.urls import path\n    from . import consumers\n\n    websocket_urlpatterns = [\n        path('ws/chat/', consumers.ChatConsumer.as_asgi()),\n    ]\n    ```\n\n5.  **編寫 `chat/consumers.py`**：\n    設計 WebSocket Consumer，可以通過 Channel Layer 發送消息：\n\n    ````python\n    import json\n    from channels.generic.websocket import AsyncWebsocketConsumer\n    from channels.layers import get_channel_layer\n    from asgiref.sync import async_to_sync\n\n        class ChatConsumer(AsyncWebsocketConsumer):\n            async def connect(self):\n                self.room_name = \"chat_room\"\n                self.room_group_name = f\"chat_{self.room_name}\"\n\n                await self.channel_layer.group_add(\n                    self.room_group_name,\n                    self.channel_name\n                )\n                await self.accept()\n\n            async def disconnect(self, close_code):\n                await self.channel_layer.group_discard(\n                    self.room_group_name,\n                    self.channel_name\n                )\n\n            async def receive(self, text_data):\n                text_data_json = json.loads(text_data)\n                message = text_data_json['message']\n\n                await self.channel_layer.group_send(\n                    self.room_group_name,\n                    {\n                        'type': 'chat_message',\n                        'message': message\n                    }\n                )\n\n            async def chat_message(self, event):\n                message = event['message']\n                await self.send(text_data=json.dumps({\n                    'message': message\n                }))\n\n            @staticmethod\n            def send_to_frontend(message):\n                channel_layer = get_channel_layer()\n                async_to_sync(channel_layer.group_send)(\n                    \"chat_chat_room\",\n                    {\n                        'type': 'chat_message',\n                        'message': message\n                    }\n                )\n        ```\n\n    ````\n\n6.  **創建自定義 Django 命令**：\n    在 `chat/management/commands/send_message.py` 中添加：\n\n    ```python\n    from django.core.management.base import BaseCommand\n    from chat.consumers import ChatConsumer\n\n    class Command(BaseCommand):\n        help = 'Send a WebSocket message from backend'\n\n        def handle(self, *args, **kwargs):\n            message = \"這是從後端通過 command 發送的 WebSocket 訊息\"\n            ChatConsumer.send_to_frontend(message)\n            self.stdout.write(self.style.SUCCESS('Message sent successfully'))\n    ```\n\n7.  **運行 Django 項目**：\n    確保 Redis 在運行，然後啟動 Django：\n    ```bash\n    python3 manage.py runserver\n    ```\n8.  **從命令行發送訊息**：\n    使用自定義命令從後端發送訊息：\n    ```bash\n    python3 manage.py send_message\n    ```\n\n## 程式執行順序步驟\n\n### 1. 用戶端建立 WebSocket 連接\n\n當用戶開啟瀏覽器並連接到你的 WebSocket 路徑 `/ws/chat/` 時，會觸發 `ChatConsumer` 的 `connect()` 方法：\n\n- **步驟**：\n  1. 用戶端（例如瀏覽器）使用 JavaScript 建立 WebSocket 連接。\n  2. Django Channels 會啟動 `ChatConsumer` 的 `connect()` 方法。\n  3. 用戶端被加入到 `chat_chat_room` 群組，這是透過 `self.channel_layer.group_add()` 方法實現的。\n  4. 連接成功後，`await self.accept()` 允許 WebSocket 連接繼續。\n- **Redis 的角色**：\n  - Redis 會存儲群組 `chat_chat_room` 的資訊，記錄有哪些 WebSocket 連接屬於這個群組。\n\n### 2. 從後端發送訊息\n\n當你運行以下命令時，將觸發後端發送訊息：\n\n```bash\npython3 manage.py send_message\n```\n\n- **步驟**：\n  1. Django 運行 `send_message` 命令，調用 `ChatConsumer.send_to_frontend()` 方法。\n  2. `send_to_frontend()` 使用 `get_channel_layer()` 取得 Channels Layer，並調用 `async_to_sync(channel_layer.group_send(...))` 發送訊息到 `chat_chat_room`。\n  3. 這個訊息會被放入 Redis，由 Redis 處理接下來的訊息分發。\n\n### 3. 消費者接收訊息\n\n每一個屬於 `chat_chat_room` 群組的 WebSocket 連接，都會收到這條訊息，並觸發 `ChatConsumer` 中的 `chat_message()` 方法：\n\n- **步驟**：\n  1. `chat_message()` 方法會被觸發，接收來自 Redis 的訊息。\n  2. 它將訊息轉換為 JSON 格式，然後通過 `await self.send(...)` 發送給 WebSocket 連接的用戶端。\n\n### 4. 用戶端顯示訊息\n\n前端的 JavaScript 監聽 `onmessage` 事件，並顯示從後端接收到的訊息：\n\n- **步驟**：\n  1. 用戶端的 WebSocket 連接收到來自伺服器的訊息。\n  2. `onmessage` 事件被觸發，並執行對應的 JavaScript 函數來處理這條訊息，例如在控制台打印出來或顯示在網頁上。\n\n### 整體流程總結\n\n1. **建立連接**：用戶端連接到 `/ws/chat/`，被加入到 `chat_chat_room` 群組，Redis 記錄連接資訊。\n2. **後端發送訊息**：你運行 `send_message` 命令，後端通過 Channels Layer 和 Redis 將訊息傳給 `chat_chat_room`。\n3. **訊息分發**：Redis 處理訊息分發，確保所有屬於 `chat_chat_room` 的 WebSocket 連接都收到這條訊息。\n4. **前端接收並顯示**：用戶端接收到訊息，觸發 JavaScript 的 `onmessage` 事件，並在頁面上顯示內容。\n\n### Redis 的功能\n\n- **作為 Channel Layer 的後端**：Redis 被用來存儲和傳遞 WebSocket 訊息。當 Django 需要向某個群組或某個連接發送訊息時，Channels 會把訊息放入 Redis，然後由其他連接取出並傳遞給相應的 WebSocket。\n- **訊息中繼**：Redis 可以在多個 Django 節點之間中繼訊息，這使得即使在高負載或多伺服器環境下，WebSocket 仍然能穩定運作。\n\n### Channel Layer 的功能\n\n- **實現群組通信**：讓不同的 WebSocket 連接（甚至不同伺服器上的連接）可以被分組。通過 `group_add()` 和 `group_send()` 來把訊息發送到特定的群組，使得多人可以即時收到更新。\n- **跨進程通信**：Channel Layer 可以在不同進程間傳遞訊息，允許伺服器間或與背景任務間的即時溝通。\n","slug":"Django-WebSocket","published":1,"updated":"2024-10-24T02:18:50.676Z","_id":"cm2mnxpvo0000a8ex2fbdgpd5","comments":1,"photos":[],"content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h2 id=\"全部步驟總結\"><a href=\"#全部步驟總結\" class=\"headerlink\" title=\"全部步驟總結\"></a>全部步驟總結</h2><ol>\n<li><p><strong>安裝必要的套件</strong>：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install channels channels_redis</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><strong>channels</strong>：使 Django 支持 WebSocket。</li>\n<li><strong>channels_redis</strong>：用來實現 Channel Layer，讓不同的 WebSocket 連接能夠進行通訊。</li>\n</ul>\n</li>\n<li><p><strong>設定 Django 專案</strong>：</p>\n<ul>\n<li>在 <code>settings.py</code> 中添加 Channels 和 Channel Layer 配置：</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">INSTALLED_APPS = [</span><br><span class=\"line\">    <span class=\"comment\"># 其他已安裝的應用</span></span><br><span class=\"line\">    <span class=\"string\">&#x27;channels&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;chat&#x27;</span>,  <span class=\"comment\"># 你的 WebSocket 應用</span></span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\">ASGI_APPLICATION = <span class=\"string\">&#x27;classify.asgi.application&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">CHANNEL_LAYERS = &#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;default&#x27;</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">&#x27;BACKEND&#x27;</span>: <span class=\"string\">&#x27;channels_redis.core.RedisChannelLayer&#x27;</span>,</span><br><span class=\"line\">        <span class=\"string\">&#x27;CONFIG&#x27;</span>: &#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;hosts&quot;</span>: [(<span class=\"string\">&#x27;127.0.0.1&#x27;</span>, <span class=\"number\">6379</span>)],  <span class=\"comment\"># Redis 默認地址和端口</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>創建 <code>asgi.py</code> 文件</strong>：<br>在 <code>classify</code> 專案目錄下，確保 <code>asgi.py</code> 設定為：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">from</span> django.core.asgi <span class=\"keyword\">import</span> get_asgi_application</span><br><span class=\"line\"><span class=\"keyword\">from</span> channels.routing <span class=\"keyword\">import</span> ProtocolTypeRouter, URLRouter</span><br><span class=\"line\"><span class=\"keyword\">from</span> channels.auth <span class=\"keyword\">import</span> AuthMiddlewareStack</span><br><span class=\"line\"><span class=\"keyword\">from</span> chat <span class=\"keyword\">import</span> routing</span><br><span class=\"line\"></span><br><span class=\"line\">os.environ.setdefault(<span class=\"string\">&#x27;DJANGO_SETTINGS_MODULE&#x27;</span>, <span class=\"string\">&#x27;classify.settings&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">application = ProtocolTypeRouter(&#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;http&quot;</span>: get_asgi_application(),</span><br><span class=\"line\">    <span class=\"string\">&quot;websocket&quot;</span>: AuthMiddlewareStack(</span><br><span class=\"line\">        URLRouter(</span><br><span class=\"line\">            routing.websocket_urlpatterns</span><br><span class=\"line\">        )</span><br><span class=\"line\">    ),</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>創建 <code>chat/routing.py</code> 文件</strong>：<br>設置 WebSocket 路由：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> django.urls <span class=\"keyword\">import</span> path</span><br><span class=\"line\"><span class=\"keyword\">from</span> . <span class=\"keyword\">import</span> consumers</span><br><span class=\"line\"></span><br><span class=\"line\">websocket_urlpatterns = [</span><br><span class=\"line\">    path(<span class=\"string\">&#x27;ws/chat/&#x27;</span>, consumers.ChatConsumer.as_asgi()),</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>**編寫 <code>chat/consumers.py</code>**：<br>設計 WebSocket Consumer，可以通過 Channel Layer 發送消息：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> json</span><br><span class=\"line\"><span class=\"keyword\">from</span> channels.generic.websocket <span class=\"keyword\">import</span> AsyncWebsocketConsumer</span><br><span class=\"line\"><span class=\"keyword\">from</span> channels.layers <span class=\"keyword\">import</span> get_channel_layer</span><br><span class=\"line\"><span class=\"keyword\">from</span> asgiref.sync <span class=\"keyword\">import</span> async_to_sync</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">class</span> <span class=\"title class_\">ChatConsumer</span>(<span class=\"title class_ inherited__\">AsyncWebsocketConsumer</span>):</span><br><span class=\"line\">        <span class=\"keyword\">async</span> <span class=\"keyword\">def</span> <span class=\"title function_\">connect</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">            <span class=\"variable language_\">self</span>.room_name = <span class=\"string\">&quot;chat_room&quot;</span></span><br><span class=\"line\">            <span class=\"variable language_\">self</span>.room_group_name = <span class=\"string\">f&quot;chat_<span class=\"subst\">&#123;self.room_name&#125;</span>&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">await</span> <span class=\"variable language_\">self</span>.channel_layer.group_add(</span><br><span class=\"line\">                <span class=\"variable language_\">self</span>.room_group_name,</span><br><span class=\"line\">                <span class=\"variable language_\">self</span>.channel_name</span><br><span class=\"line\">            )</span><br><span class=\"line\">            <span class=\"keyword\">await</span> <span class=\"variable language_\">self</span>.accept()</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">async</span> <span class=\"keyword\">def</span> <span class=\"title function_\">disconnect</span>(<span class=\"params\">self, close_code</span>):</span><br><span class=\"line\">            <span class=\"keyword\">await</span> <span class=\"variable language_\">self</span>.channel_layer.group_discard(</span><br><span class=\"line\">                <span class=\"variable language_\">self</span>.room_group_name,</span><br><span class=\"line\">                <span class=\"variable language_\">self</span>.channel_name</span><br><span class=\"line\">            )</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">async</span> <span class=\"keyword\">def</span> <span class=\"title function_\">receive</span>(<span class=\"params\">self, text_data</span>):</span><br><span class=\"line\">            text_data_json = json.loads(text_data)</span><br><span class=\"line\">            message = text_data_json[<span class=\"string\">&#x27;message&#x27;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">await</span> <span class=\"variable language_\">self</span>.channel_layer.group_send(</span><br><span class=\"line\">                <span class=\"variable language_\">self</span>.room_group_name,</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"string\">&#x27;type&#x27;</span>: <span class=\"string\">&#x27;chat_message&#x27;</span>,</span><br><span class=\"line\">                    <span class=\"string\">&#x27;message&#x27;</span>: message</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            )</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">async</span> <span class=\"keyword\">def</span> <span class=\"title function_\">chat_message</span>(<span class=\"params\">self, event</span>):</span><br><span class=\"line\">            message = event[<span class=\"string\">&#x27;message&#x27;</span>]</span><br><span class=\"line\">            <span class=\"keyword\">await</span> <span class=\"variable language_\">self</span>.send(text_data=json.dumps(&#123;</span><br><span class=\"line\">                <span class=\"string\">&#x27;message&#x27;</span>: message</span><br><span class=\"line\">            &#125;))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">        @staticmethod</span></span><br><span class=\"line\">        <span class=\"keyword\">def</span> <span class=\"title function_\">send_to_frontend</span>(<span class=\"params\">message</span>):</span><br><span class=\"line\">            channel_layer = get_channel_layer()</span><br><span class=\"line\">            async_to_sync(channel_layer.group_send)(</span><br><span class=\"line\">                <span class=\"string\">&quot;chat_chat_room&quot;</span>,</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"string\">&#x27;type&#x27;</span>: <span class=\"string\">&#x27;chat_message&#x27;</span>,</span><br><span class=\"line\">                    <span class=\"string\">&#x27;message&#x27;</span>: message</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            )</span><br><span class=\"line\">    ```</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>創建自定義 Django 命令</strong>：<br>在 <code>chat/management/commands/send_message.py</code> 中添加：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> django.core.management.base <span class=\"keyword\">import</span> BaseCommand</span><br><span class=\"line\"><span class=\"keyword\">from</span> chat.consumers <span class=\"keyword\">import</span> ChatConsumer</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Command</span>(<span class=\"title class_ inherited__\">BaseCommand</span>):</span><br><span class=\"line\">    <span class=\"built_in\">help</span> = <span class=\"string\">&#x27;Send a WebSocket message from backend&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">handle</span>(<span class=\"params\">self, *args, **kwargs</span>):</span><br><span class=\"line\">        message = <span class=\"string\">&quot;這是從後端通過 command 發送的 WebSocket 訊息&quot;</span></span><br><span class=\"line\">        ChatConsumer.send_to_frontend(message)</span><br><span class=\"line\">        <span class=\"variable language_\">self</span>.stdout.write(<span class=\"variable language_\">self</span>.style.SUCCESS(<span class=\"string\">&#x27;Message sent successfully&#x27;</span>))</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>運行 Django 項目</strong>：<br>確保 Redis 在運行，然後啟動 Django：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python3 manage.py runserver</span><br></pre></td></tr></table></figure></li>\n<li><p><strong>從命令行發送訊息</strong>：<br>使用自定義命令從後端發送訊息：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python3 manage.py send_message</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h2 id=\"程式執行順序步驟\"><a href=\"#程式執行順序步驟\" class=\"headerlink\" title=\"程式執行順序步驟\"></a>程式執行順序步驟</h2><h3 id=\"1-用戶端建立-WebSocket-連接\"><a href=\"#1-用戶端建立-WebSocket-連接\" class=\"headerlink\" title=\"1. 用戶端建立 WebSocket 連接\"></a>1. 用戶端建立 WebSocket 連接</h3><p>當用戶開啟瀏覽器並連接到你的 WebSocket 路徑 <code>/ws/chat/</code> 時，會觸發 <code>ChatConsumer</code> 的 <code>connect()</code> 方法：</p>\n<ul>\n<li><strong>步驟</strong>：<ol>\n<li>用戶端（例如瀏覽器）使用 JavaScript 建立 WebSocket 連接。</li>\n<li>Django Channels 會啟動 <code>ChatConsumer</code> 的 <code>connect()</code> 方法。</li>\n<li>用戶端被加入到 <code>chat_chat_room</code> 群組，這是透過 <code>self.channel_layer.group_add()</code> 方法實現的。</li>\n<li>連接成功後，<code>await self.accept()</code> 允許 WebSocket 連接繼續。</li>\n</ol>\n</li>\n<li><strong>Redis 的角色</strong>：<ul>\n<li>Redis 會存儲群組 <code>chat_chat_room</code> 的資訊，記錄有哪些 WebSocket 連接屬於這個群組。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"2-從後端發送訊息\"><a href=\"#2-從後端發送訊息\" class=\"headerlink\" title=\"2. 從後端發送訊息\"></a>2. 從後端發送訊息</h3><p>當你運行以下命令時，將觸發後端發送訊息：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python3 manage.py send_message</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><strong>步驟</strong>：<ol>\n<li>Django 運行 <code>send_message</code> 命令，調用 <code>ChatConsumer.send_to_frontend()</code> 方法。</li>\n<li><code>send_to_frontend()</code> 使用 <code>get_channel_layer()</code> 取得 Channels Layer，並調用 <code>async_to_sync(channel_layer.group_send(...))</code> 發送訊息到 <code>chat_chat_room</code>。</li>\n<li>這個訊息會被放入 Redis，由 Redis 處理接下來的訊息分發。</li>\n</ol>\n</li>\n</ul>\n<h3 id=\"3-消費者接收訊息\"><a href=\"#3-消費者接收訊息\" class=\"headerlink\" title=\"3. 消費者接收訊息\"></a>3. 消費者接收訊息</h3><p>每一個屬於 <code>chat_chat_room</code> 群組的 WebSocket 連接，都會收到這條訊息，並觸發 <code>ChatConsumer</code> 中的 <code>chat_message()</code> 方法：</p>\n<ul>\n<li><strong>步驟</strong>：<ol>\n<li><code>chat_message()</code> 方法會被觸發，接收來自 Redis 的訊息。</li>\n<li>它將訊息轉換為 JSON 格式，然後通過 <code>await self.send(...)</code> 發送給 WebSocket 連接的用戶端。</li>\n</ol>\n</li>\n</ul>\n<h3 id=\"4-用戶端顯示訊息\"><a href=\"#4-用戶端顯示訊息\" class=\"headerlink\" title=\"4. 用戶端顯示訊息\"></a>4. 用戶端顯示訊息</h3><p>前端的 JavaScript 監聽 <code>onmessage</code> 事件，並顯示從後端接收到的訊息：</p>\n<ul>\n<li><strong>步驟</strong>：<ol>\n<li>用戶端的 WebSocket 連接收到來自伺服器的訊息。</li>\n<li><code>onmessage</code> 事件被觸發，並執行對應的 JavaScript 函數來處理這條訊息，例如在控制台打印出來或顯示在網頁上。</li>\n</ol>\n</li>\n</ul>\n<h3 id=\"整體流程總結\"><a href=\"#整體流程總結\" class=\"headerlink\" title=\"整體流程總結\"></a>整體流程總結</h3><ol>\n<li><strong>建立連接</strong>：用戶端連接到 <code>/ws/chat/</code>，被加入到 <code>chat_chat_room</code> 群組，Redis 記錄連接資訊。</li>\n<li><strong>後端發送訊息</strong>：你運行 <code>send_message</code> 命令，後端通過 Channels Layer 和 Redis 將訊息傳給 <code>chat_chat_room</code>。</li>\n<li><strong>訊息分發</strong>：Redis 處理訊息分發，確保所有屬於 <code>chat_chat_room</code> 的 WebSocket 連接都收到這條訊息。</li>\n<li><strong>前端接收並顯示</strong>：用戶端接收到訊息，觸發 JavaScript 的 <code>onmessage</code> 事件，並在頁面上顯示內容。</li>\n</ol>\n<h3 id=\"Redis-的功能\"><a href=\"#Redis-的功能\" class=\"headerlink\" title=\"Redis 的功能\"></a>Redis 的功能</h3><ul>\n<li><strong>作為 Channel Layer 的後端</strong>：Redis 被用來存儲和傳遞 WebSocket 訊息。當 Django 需要向某個群組或某個連接發送訊息時，Channels 會把訊息放入 Redis，然後由其他連接取出並傳遞給相應的 WebSocket。</li>\n<li><strong>訊息中繼</strong>：Redis 可以在多個 Django 節點之間中繼訊息，這使得即使在高負載或多伺服器環境下，WebSocket 仍然能穩定運作。</li>\n</ul>\n<h3 id=\"Channel-Layer-的功能\"><a href=\"#Channel-Layer-的功能\" class=\"headerlink\" title=\"Channel Layer 的功能\"></a>Channel Layer 的功能</h3><ul>\n<li><strong>實現群組通信</strong>：讓不同的 WebSocket 連接（甚至不同伺服器上的連接）可以被分組。通過 <code>group_add()</code> 和 <code>group_send()</code> 來把訊息發送到特定的群組，使得多人可以即時收到更新。</li>\n<li><strong>跨進程通信</strong>：Channel Layer 可以在不同進程間傳遞訊息，允許伺服器間或與背景任務間的即時溝通。</li>\n</ul>\n","cover_type":"img","excerpt":"","more":"<h2 id=\"全部步驟總結\"><a href=\"#全部步驟總結\" class=\"headerlink\" title=\"全部步驟總結\"></a>全部步驟總結</h2><ol>\n<li><p><strong>安裝必要的套件</strong>：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install channels channels_redis</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><strong>channels</strong>：使 Django 支持 WebSocket。</li>\n<li><strong>channels_redis</strong>：用來實現 Channel Layer，讓不同的 WebSocket 連接能夠進行通訊。</li>\n</ul>\n</li>\n<li><p><strong>設定 Django 專案</strong>：</p>\n<ul>\n<li>在 <code>settings.py</code> 中添加 Channels 和 Channel Layer 配置：</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">INSTALLED_APPS = [</span><br><span class=\"line\">    <span class=\"comment\"># 其他已安裝的應用</span></span><br><span class=\"line\">    <span class=\"string\">&#x27;channels&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;chat&#x27;</span>,  <span class=\"comment\"># 你的 WebSocket 應用</span></span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\">ASGI_APPLICATION = <span class=\"string\">&#x27;classify.asgi.application&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">CHANNEL_LAYERS = &#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;default&#x27;</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">&#x27;BACKEND&#x27;</span>: <span class=\"string\">&#x27;channels_redis.core.RedisChannelLayer&#x27;</span>,</span><br><span class=\"line\">        <span class=\"string\">&#x27;CONFIG&#x27;</span>: &#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;hosts&quot;</span>: [(<span class=\"string\">&#x27;127.0.0.1&#x27;</span>, <span class=\"number\">6379</span>)],  <span class=\"comment\"># Redis 默認地址和端口</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>創建 <code>asgi.py</code> 文件</strong>：<br>在 <code>classify</code> 專案目錄下，確保 <code>asgi.py</code> 設定為：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">from</span> django.core.asgi <span class=\"keyword\">import</span> get_asgi_application</span><br><span class=\"line\"><span class=\"keyword\">from</span> channels.routing <span class=\"keyword\">import</span> ProtocolTypeRouter, URLRouter</span><br><span class=\"line\"><span class=\"keyword\">from</span> channels.auth <span class=\"keyword\">import</span> AuthMiddlewareStack</span><br><span class=\"line\"><span class=\"keyword\">from</span> chat <span class=\"keyword\">import</span> routing</span><br><span class=\"line\"></span><br><span class=\"line\">os.environ.setdefault(<span class=\"string\">&#x27;DJANGO_SETTINGS_MODULE&#x27;</span>, <span class=\"string\">&#x27;classify.settings&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">application = ProtocolTypeRouter(&#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;http&quot;</span>: get_asgi_application(),</span><br><span class=\"line\">    <span class=\"string\">&quot;websocket&quot;</span>: AuthMiddlewareStack(</span><br><span class=\"line\">        URLRouter(</span><br><span class=\"line\">            routing.websocket_urlpatterns</span><br><span class=\"line\">        )</span><br><span class=\"line\">    ),</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>創建 <code>chat/routing.py</code> 文件</strong>：<br>設置 WebSocket 路由：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> django.urls <span class=\"keyword\">import</span> path</span><br><span class=\"line\"><span class=\"keyword\">from</span> . <span class=\"keyword\">import</span> consumers</span><br><span class=\"line\"></span><br><span class=\"line\">websocket_urlpatterns = [</span><br><span class=\"line\">    path(<span class=\"string\">&#x27;ws/chat/&#x27;</span>, consumers.ChatConsumer.as_asgi()),</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>**編寫 <code>chat/consumers.py</code>**：<br>設計 WebSocket Consumer，可以通過 Channel Layer 發送消息：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> json</span><br><span class=\"line\"><span class=\"keyword\">from</span> channels.generic.websocket <span class=\"keyword\">import</span> AsyncWebsocketConsumer</span><br><span class=\"line\"><span class=\"keyword\">from</span> channels.layers <span class=\"keyword\">import</span> get_channel_layer</span><br><span class=\"line\"><span class=\"keyword\">from</span> asgiref.sync <span class=\"keyword\">import</span> async_to_sync</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">class</span> <span class=\"title class_\">ChatConsumer</span>(<span class=\"title class_ inherited__\">AsyncWebsocketConsumer</span>):</span><br><span class=\"line\">        <span class=\"keyword\">async</span> <span class=\"keyword\">def</span> <span class=\"title function_\">connect</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">            <span class=\"variable language_\">self</span>.room_name = <span class=\"string\">&quot;chat_room&quot;</span></span><br><span class=\"line\">            <span class=\"variable language_\">self</span>.room_group_name = <span class=\"string\">f&quot;chat_<span class=\"subst\">&#123;self.room_name&#125;</span>&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">await</span> <span class=\"variable language_\">self</span>.channel_layer.group_add(</span><br><span class=\"line\">                <span class=\"variable language_\">self</span>.room_group_name,</span><br><span class=\"line\">                <span class=\"variable language_\">self</span>.channel_name</span><br><span class=\"line\">            )</span><br><span class=\"line\">            <span class=\"keyword\">await</span> <span class=\"variable language_\">self</span>.accept()</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">async</span> <span class=\"keyword\">def</span> <span class=\"title function_\">disconnect</span>(<span class=\"params\">self, close_code</span>):</span><br><span class=\"line\">            <span class=\"keyword\">await</span> <span class=\"variable language_\">self</span>.channel_layer.group_discard(</span><br><span class=\"line\">                <span class=\"variable language_\">self</span>.room_group_name,</span><br><span class=\"line\">                <span class=\"variable language_\">self</span>.channel_name</span><br><span class=\"line\">            )</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">async</span> <span class=\"keyword\">def</span> <span class=\"title function_\">receive</span>(<span class=\"params\">self, text_data</span>):</span><br><span class=\"line\">            text_data_json = json.loads(text_data)</span><br><span class=\"line\">            message = text_data_json[<span class=\"string\">&#x27;message&#x27;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">await</span> <span class=\"variable language_\">self</span>.channel_layer.group_send(</span><br><span class=\"line\">                <span class=\"variable language_\">self</span>.room_group_name,</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"string\">&#x27;type&#x27;</span>: <span class=\"string\">&#x27;chat_message&#x27;</span>,</span><br><span class=\"line\">                    <span class=\"string\">&#x27;message&#x27;</span>: message</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            )</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">async</span> <span class=\"keyword\">def</span> <span class=\"title function_\">chat_message</span>(<span class=\"params\">self, event</span>):</span><br><span class=\"line\">            message = event[<span class=\"string\">&#x27;message&#x27;</span>]</span><br><span class=\"line\">            <span class=\"keyword\">await</span> <span class=\"variable language_\">self</span>.send(text_data=json.dumps(&#123;</span><br><span class=\"line\">                <span class=\"string\">&#x27;message&#x27;</span>: message</span><br><span class=\"line\">            &#125;))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">        @staticmethod</span></span><br><span class=\"line\">        <span class=\"keyword\">def</span> <span class=\"title function_\">send_to_frontend</span>(<span class=\"params\">message</span>):</span><br><span class=\"line\">            channel_layer = get_channel_layer()</span><br><span class=\"line\">            async_to_sync(channel_layer.group_send)(</span><br><span class=\"line\">                <span class=\"string\">&quot;chat_chat_room&quot;</span>,</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"string\">&#x27;type&#x27;</span>: <span class=\"string\">&#x27;chat_message&#x27;</span>,</span><br><span class=\"line\">                    <span class=\"string\">&#x27;message&#x27;</span>: message</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            )</span><br><span class=\"line\">    ```</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>創建自定義 Django 命令</strong>：<br>在 <code>chat/management/commands/send_message.py</code> 中添加：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> django.core.management.base <span class=\"keyword\">import</span> BaseCommand</span><br><span class=\"line\"><span class=\"keyword\">from</span> chat.consumers <span class=\"keyword\">import</span> ChatConsumer</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Command</span>(<span class=\"title class_ inherited__\">BaseCommand</span>):</span><br><span class=\"line\">    <span class=\"built_in\">help</span> = <span class=\"string\">&#x27;Send a WebSocket message from backend&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">handle</span>(<span class=\"params\">self, *args, **kwargs</span>):</span><br><span class=\"line\">        message = <span class=\"string\">&quot;這是從後端通過 command 發送的 WebSocket 訊息&quot;</span></span><br><span class=\"line\">        ChatConsumer.send_to_frontend(message)</span><br><span class=\"line\">        <span class=\"variable language_\">self</span>.stdout.write(<span class=\"variable language_\">self</span>.style.SUCCESS(<span class=\"string\">&#x27;Message sent successfully&#x27;</span>))</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>運行 Django 項目</strong>：<br>確保 Redis 在運行，然後啟動 Django：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python3 manage.py runserver</span><br></pre></td></tr></table></figure></li>\n<li><p><strong>從命令行發送訊息</strong>：<br>使用自定義命令從後端發送訊息：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python3 manage.py send_message</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h2 id=\"程式執行順序步驟\"><a href=\"#程式執行順序步驟\" class=\"headerlink\" title=\"程式執行順序步驟\"></a>程式執行順序步驟</h2><h3 id=\"1-用戶端建立-WebSocket-連接\"><a href=\"#1-用戶端建立-WebSocket-連接\" class=\"headerlink\" title=\"1. 用戶端建立 WebSocket 連接\"></a>1. 用戶端建立 WebSocket 連接</h3><p>當用戶開啟瀏覽器並連接到你的 WebSocket 路徑 <code>/ws/chat/</code> 時，會觸發 <code>ChatConsumer</code> 的 <code>connect()</code> 方法：</p>\n<ul>\n<li><strong>步驟</strong>：<ol>\n<li>用戶端（例如瀏覽器）使用 JavaScript 建立 WebSocket 連接。</li>\n<li>Django Channels 會啟動 <code>ChatConsumer</code> 的 <code>connect()</code> 方法。</li>\n<li>用戶端被加入到 <code>chat_chat_room</code> 群組，這是透過 <code>self.channel_layer.group_add()</code> 方法實現的。</li>\n<li>連接成功後，<code>await self.accept()</code> 允許 WebSocket 連接繼續。</li>\n</ol>\n</li>\n<li><strong>Redis 的角色</strong>：<ul>\n<li>Redis 會存儲群組 <code>chat_chat_room</code> 的資訊，記錄有哪些 WebSocket 連接屬於這個群組。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"2-從後端發送訊息\"><a href=\"#2-從後端發送訊息\" class=\"headerlink\" title=\"2. 從後端發送訊息\"></a>2. 從後端發送訊息</h3><p>當你運行以下命令時，將觸發後端發送訊息：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python3 manage.py send_message</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><strong>步驟</strong>：<ol>\n<li>Django 運行 <code>send_message</code> 命令，調用 <code>ChatConsumer.send_to_frontend()</code> 方法。</li>\n<li><code>send_to_frontend()</code> 使用 <code>get_channel_layer()</code> 取得 Channels Layer，並調用 <code>async_to_sync(channel_layer.group_send(...))</code> 發送訊息到 <code>chat_chat_room</code>。</li>\n<li>這個訊息會被放入 Redis，由 Redis 處理接下來的訊息分發。</li>\n</ol>\n</li>\n</ul>\n<h3 id=\"3-消費者接收訊息\"><a href=\"#3-消費者接收訊息\" class=\"headerlink\" title=\"3. 消費者接收訊息\"></a>3. 消費者接收訊息</h3><p>每一個屬於 <code>chat_chat_room</code> 群組的 WebSocket 連接，都會收到這條訊息，並觸發 <code>ChatConsumer</code> 中的 <code>chat_message()</code> 方法：</p>\n<ul>\n<li><strong>步驟</strong>：<ol>\n<li><code>chat_message()</code> 方法會被觸發，接收來自 Redis 的訊息。</li>\n<li>它將訊息轉換為 JSON 格式，然後通過 <code>await self.send(...)</code> 發送給 WebSocket 連接的用戶端。</li>\n</ol>\n</li>\n</ul>\n<h3 id=\"4-用戶端顯示訊息\"><a href=\"#4-用戶端顯示訊息\" class=\"headerlink\" title=\"4. 用戶端顯示訊息\"></a>4. 用戶端顯示訊息</h3><p>前端的 JavaScript 監聽 <code>onmessage</code> 事件，並顯示從後端接收到的訊息：</p>\n<ul>\n<li><strong>步驟</strong>：<ol>\n<li>用戶端的 WebSocket 連接收到來自伺服器的訊息。</li>\n<li><code>onmessage</code> 事件被觸發，並執行對應的 JavaScript 函數來處理這條訊息，例如在控制台打印出來或顯示在網頁上。</li>\n</ol>\n</li>\n</ul>\n<h3 id=\"整體流程總結\"><a href=\"#整體流程總結\" class=\"headerlink\" title=\"整體流程總結\"></a>整體流程總結</h3><ol>\n<li><strong>建立連接</strong>：用戶端連接到 <code>/ws/chat/</code>，被加入到 <code>chat_chat_room</code> 群組，Redis 記錄連接資訊。</li>\n<li><strong>後端發送訊息</strong>：你運行 <code>send_message</code> 命令，後端通過 Channels Layer 和 Redis 將訊息傳給 <code>chat_chat_room</code>。</li>\n<li><strong>訊息分發</strong>：Redis 處理訊息分發，確保所有屬於 <code>chat_chat_room</code> 的 WebSocket 連接都收到這條訊息。</li>\n<li><strong>前端接收並顯示</strong>：用戶端接收到訊息，觸發 JavaScript 的 <code>onmessage</code> 事件，並在頁面上顯示內容。</li>\n</ol>\n<h3 id=\"Redis-的功能\"><a href=\"#Redis-的功能\" class=\"headerlink\" title=\"Redis 的功能\"></a>Redis 的功能</h3><ul>\n<li><strong>作為 Channel Layer 的後端</strong>：Redis 被用來存儲和傳遞 WebSocket 訊息。當 Django 需要向某個群組或某個連接發送訊息時，Channels 會把訊息放入 Redis，然後由其他連接取出並傳遞給相應的 WebSocket。</li>\n<li><strong>訊息中繼</strong>：Redis 可以在多個 Django 節點之間中繼訊息，這使得即使在高負載或多伺服器環境下，WebSocket 仍然能穩定運作。</li>\n</ul>\n<h3 id=\"Channel-Layer-的功能\"><a href=\"#Channel-Layer-的功能\" class=\"headerlink\" title=\"Channel Layer 的功能\"></a>Channel Layer 的功能</h3><ul>\n<li><strong>實現群組通信</strong>：讓不同的 WebSocket 連接（甚至不同伺服器上的連接）可以被分組。通過 <code>group_add()</code> 和 <code>group_send()</code> 來把訊息發送到特定的群組，使得多人可以即時收到更新。</li>\n<li><strong>跨進程通信</strong>：Channel Layer 可以在不同進程間傳遞訊息，允許伺服器間或與背景任務間的即時溝通。</li>\n</ul>\n"},{"layout":"post","title":"C++ 筆記 - Vector 使用方式","date":"2024-11-20T15:22:52.000Z","top_img":"https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FC%2B%2B%20%E7%AD%86%E8%A8%98%2Fvector.webp?alt=media&token=13648a6d-cbd4-4420-974c-bc2c56ae85c4","cover":"https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FC%2B%2B%20%E7%AD%86%E8%A8%98%2Fvector.webp?alt=media&token=13648a6d-cbd4-4420-974c-bc2c56ae85c4","_content":"\n# Vector 實戰教學\n\n### **1. `vector` 的基本操作**\n\n### **定義與初始化**\n\n```cpp\n#include <iostream>\n#include <vector>\nusing namespace std;\n\nint main() {\n    // 定義一個空的 vector\n    vector<int> vec;\n\n    // 定義並初始化\n    vector<int> vec2 = {1, 2, 3, 4, 5};\n\n    // 定義固定大小的 vector，初始值為 0\n    vector<int> vec3(5, 0); // 5 個元素，每個元素初始值為 0\n\n    // 輸出 vec2 的內容\n    for (int x : vec2) {\n        cout << x << \" \";\n    }\n\n    return 0;\n}\n\n```\n\n**輸出：**\n\n```\n1 2 3 4 5\n```\n\n---\n\n### **2. 動態增加和刪除元素**\n\n### **增加元素**\n\n- 使用 `push_back()` 在尾部添加元素。\n- 使用 `insert()` 在特定位置插入元素。\n\n### **刪除元素**\n\n- 使用 `pop_back()` 刪除尾部元素。\n- 使用 `erase()` 刪除指定位置的元素。\n\n```cpp\n#include <iostream>\n#include <vector>\n\nusing namespace std;\n\nint main() {\n    vector<int> vec = {1, 2, 3, 4, 5};\n\n    // 在尾部添加元素\n    vec.push_back(6);\n\n    // 在位置 2 插入元素 10\n    vec.insert(vec.begin() + 2, 10);\n\n    // 刪除尾部元素\n    vec.pop_back();\n\n    // 刪除位置 2 的元素\n    vec.erase(vec.begin() + 2);\n\n    // 輸出內容\n    for (int x : vec) {\n        cout << x << \" \";\n    }\n\n    return 0;\n}\n```\n\n**輸出：**\n\n```\n1 2 3 4 5\n```\n\n---\n\n### **3. 常用方法與屬性**\n\n### **方法**\n\n| 方法名               | 功能                                                |\n| -------------------- | --------------------------------------------------- |\n| `push_back(value)`   | 在尾部添加一個元素                                  |\n| `pop_back()`         | 刪除尾部元素                                        |\n| `insert(pos, value)` | 在 `pos` 位置插入一個元素                           |\n| `erase(pos)`         | 刪除 `pos` 位置的元素                               |\n| `clear()`            | 刪除所有元素                                        |\n| `size()`             | 返回當前元素數量                                    |\n| `empty()`            | 判斷是否為空                                        |\n| `resize(n, value)`   | 調整大小為 `n`，多出部分用 `value` 填充（默認為 0） |\n| `front()`            | 返回第一個元素                                      |\n| `back()`             | 返回最後一個元素                                    |\n| `at(index)`          | 返回索引 `index` 處的元素，帶範圍檢查               |\n\n---\n\n### **範例：檢查方法的用法**\n\n```cpp\n#include <iostream>\n#include <vector>\n\nusing namespace std;\n\nint main() {\n    vector<int> vec = {1, 2, 3, 4, 5};\n\n    // 大小和是否為空\n    cout << \"Size: \" << vec.size() << endl;\n    cout << \"Is empty: \" << (vec.empty() ? \"Yes\" : \"No\") << endl;\n\n    // 訪問元素\n    cout << \"First element: \" << vec.front() << endl;\n    cout << \"Last element: \" << vec.back() << endl;\n    cout << \"Element at index 2: \" << vec.at(2) << endl;\n\n    // 清空 vector\n    vec.clear();\n    cout << \"Size after clear: \" << vec.size() << endl;\n\n    return 0;\n}\n\n```\n\n**輸出：**\n\n```yaml\nSize: 5\nIs empty: No\nFirst element: 1\nLast element: 5\nElement at index 2: 3\nSize after clear: 0\n```\n","source":"_posts/post-1.md","raw":"---\nlayout: post\ntitle: C++ 筆記 - Vector 使用方式\ndate: 2024-11-20 23:22:52\ntags: [C++]\ncategories: [C++, Vector]\ntop_img: https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FC%2B%2B%20%E7%AD%86%E8%A8%98%2Fvector.webp?alt=media&token=13648a6d-cbd4-4420-974c-bc2c56ae85c4\ncover: https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FC%2B%2B%20%E7%AD%86%E8%A8%98%2Fvector.webp?alt=media&token=13648a6d-cbd4-4420-974c-bc2c56ae85c4\n---\n\n# Vector 實戰教學\n\n### **1. `vector` 的基本操作**\n\n### **定義與初始化**\n\n```cpp\n#include <iostream>\n#include <vector>\nusing namespace std;\n\nint main() {\n    // 定義一個空的 vector\n    vector<int> vec;\n\n    // 定義並初始化\n    vector<int> vec2 = {1, 2, 3, 4, 5};\n\n    // 定義固定大小的 vector，初始值為 0\n    vector<int> vec3(5, 0); // 5 個元素，每個元素初始值為 0\n\n    // 輸出 vec2 的內容\n    for (int x : vec2) {\n        cout << x << \" \";\n    }\n\n    return 0;\n}\n\n```\n\n**輸出：**\n\n```\n1 2 3 4 5\n```\n\n---\n\n### **2. 動態增加和刪除元素**\n\n### **增加元素**\n\n- 使用 `push_back()` 在尾部添加元素。\n- 使用 `insert()` 在特定位置插入元素。\n\n### **刪除元素**\n\n- 使用 `pop_back()` 刪除尾部元素。\n- 使用 `erase()` 刪除指定位置的元素。\n\n```cpp\n#include <iostream>\n#include <vector>\n\nusing namespace std;\n\nint main() {\n    vector<int> vec = {1, 2, 3, 4, 5};\n\n    // 在尾部添加元素\n    vec.push_back(6);\n\n    // 在位置 2 插入元素 10\n    vec.insert(vec.begin() + 2, 10);\n\n    // 刪除尾部元素\n    vec.pop_back();\n\n    // 刪除位置 2 的元素\n    vec.erase(vec.begin() + 2);\n\n    // 輸出內容\n    for (int x : vec) {\n        cout << x << \" \";\n    }\n\n    return 0;\n}\n```\n\n**輸出：**\n\n```\n1 2 3 4 5\n```\n\n---\n\n### **3. 常用方法與屬性**\n\n### **方法**\n\n| 方法名               | 功能                                                |\n| -------------------- | --------------------------------------------------- |\n| `push_back(value)`   | 在尾部添加一個元素                                  |\n| `pop_back()`         | 刪除尾部元素                                        |\n| `insert(pos, value)` | 在 `pos` 位置插入一個元素                           |\n| `erase(pos)`         | 刪除 `pos` 位置的元素                               |\n| `clear()`            | 刪除所有元素                                        |\n| `size()`             | 返回當前元素數量                                    |\n| `empty()`            | 判斷是否為空                                        |\n| `resize(n, value)`   | 調整大小為 `n`，多出部分用 `value` 填充（默認為 0） |\n| `front()`            | 返回第一個元素                                      |\n| `back()`             | 返回最後一個元素                                    |\n| `at(index)`          | 返回索引 `index` 處的元素，帶範圍檢查               |\n\n---\n\n### **範例：檢查方法的用法**\n\n```cpp\n#include <iostream>\n#include <vector>\n\nusing namespace std;\n\nint main() {\n    vector<int> vec = {1, 2, 3, 4, 5};\n\n    // 大小和是否為空\n    cout << \"Size: \" << vec.size() << endl;\n    cout << \"Is empty: \" << (vec.empty() ? \"Yes\" : \"No\") << endl;\n\n    // 訪問元素\n    cout << \"First element: \" << vec.front() << endl;\n    cout << \"Last element: \" << vec.back() << endl;\n    cout << \"Element at index 2: \" << vec.at(2) << endl;\n\n    // 清空 vector\n    vec.clear();\n    cout << \"Size after clear: \" << vec.size() << endl;\n\n    return 0;\n}\n\n```\n\n**輸出：**\n\n```yaml\nSize: 5\nIs empty: No\nFirst element: 1\nLast element: 5\nElement at index 2: 3\nSize after clear: 0\n```\n","slug":"post-1","published":1,"updated":"2024-11-20T14:13:36.514Z","_id":"cm3pyqfu20000jmex072mb79y","comments":1,"photos":[],"content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h1 id=\"Vector-實戰教學\"><a href=\"#Vector-實戰教學\" class=\"headerlink\" title=\"Vector 實戰教學\"></a>Vector 實戰教學</h1><h3 id=\"1-vector-的基本操作\"><a href=\"#1-vector-的基本操作\" class=\"headerlink\" title=\"1. vector 的基本操作\"></a><strong>1. <code>vector</code> 的基本操作</strong></h3><h3 id=\"定義與初始化\"><a href=\"#定義與初始化\" class=\"headerlink\" title=\"定義與初始化\"></a><strong>定義與初始化</strong></h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 定義一個空的 vector</span></span><br><span class=\"line\">    vector&lt;<span class=\"type\">int</span>&gt; vec;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 定義並初始化</span></span><br><span class=\"line\">    vector&lt;<span class=\"type\">int</span>&gt; vec2 = &#123;<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 定義固定大小的 vector，初始值為 0</span></span><br><span class=\"line\">    <span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">vec3</span><span class=\"params\">(<span class=\"number\">5</span>, <span class=\"number\">0</span>)</span></span>; <span class=\"comment\">// 5 個元素，每個元素初始值為 0</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 輸出 vec2 的內容</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> x : vec2) &#123;</span><br><span class=\"line\">        cout &lt;&lt; x &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><strong>輸出：</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 2 3 4 5</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h3 id=\"2-動態增加和刪除元素\"><a href=\"#2-動態增加和刪除元素\" class=\"headerlink\" title=\"2. 動態增加和刪除元素\"></a><strong>2. 動態增加和刪除元素</strong></h3><h3 id=\"增加元素\"><a href=\"#增加元素\" class=\"headerlink\" title=\"增加元素\"></a><strong>增加元素</strong></h3><ul>\n<li>使用 <code>push_back()</code> 在尾部添加元素。</li>\n<li>使用 <code>insert()</code> 在特定位置插入元素。</li>\n</ul>\n<h3 id=\"刪除元素\"><a href=\"#刪除元素\" class=\"headerlink\" title=\"刪除元素\"></a><strong>刪除元素</strong></h3><ul>\n<li>使用 <code>pop_back()</code> 刪除尾部元素。</li>\n<li>使用 <code>erase()</code> 刪除指定位置的元素。</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    vector&lt;<span class=\"type\">int</span>&gt; vec = &#123;<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 在尾部添加元素</span></span><br><span class=\"line\">    vec.<span class=\"built_in\">push_back</span>(<span class=\"number\">6</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 在位置 2 插入元素 10</span></span><br><span class=\"line\">    vec.<span class=\"built_in\">insert</span>(vec.<span class=\"built_in\">begin</span>() + <span class=\"number\">2</span>, <span class=\"number\">10</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 刪除尾部元素</span></span><br><span class=\"line\">    vec.<span class=\"built_in\">pop_back</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 刪除位置 2 的元素</span></span><br><span class=\"line\">    vec.<span class=\"built_in\">erase</span>(vec.<span class=\"built_in\">begin</span>() + <span class=\"number\">2</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 輸出內容</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> x : vec) &#123;</span><br><span class=\"line\">        cout &lt;&lt; x &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>輸出：</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 2 3 4 5</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h3 id=\"3-常用方法與屬性\"><a href=\"#3-常用方法與屬性\" class=\"headerlink\" title=\"3. 常用方法與屬性\"></a><strong>3. 常用方法與屬性</strong></h3><h3 id=\"方法\"><a href=\"#方法\" class=\"headerlink\" title=\"方法\"></a><strong>方法</strong></h3><table>\n<thead>\n<tr>\n<th>方法名</th>\n<th>功能</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>push_back(value)</code></td>\n<td>在尾部添加一個元素</td>\n</tr>\n<tr>\n<td><code>pop_back()</code></td>\n<td>刪除尾部元素</td>\n</tr>\n<tr>\n<td><code>insert(pos, value)</code></td>\n<td>在 <code>pos</code> 位置插入一個元素</td>\n</tr>\n<tr>\n<td><code>erase(pos)</code></td>\n<td>刪除 <code>pos</code> 位置的元素</td>\n</tr>\n<tr>\n<td><code>clear()</code></td>\n<td>刪除所有元素</td>\n</tr>\n<tr>\n<td><code>size()</code></td>\n<td>返回當前元素數量</td>\n</tr>\n<tr>\n<td><code>empty()</code></td>\n<td>判斷是否為空</td>\n</tr>\n<tr>\n<td><code>resize(n, value)</code></td>\n<td>調整大小為 <code>n</code>，多出部分用 <code>value</code> 填充（默認為 0）</td>\n</tr>\n<tr>\n<td><code>front()</code></td>\n<td>返回第一個元素</td>\n</tr>\n<tr>\n<td><code>back()</code></td>\n<td>返回最後一個元素</td>\n</tr>\n<tr>\n<td><code>at(index)</code></td>\n<td>返回索引 <code>index</code> 處的元素，帶範圍檢查</td>\n</tr>\n</tbody></table>\n<hr>\n<h3 id=\"範例：檢查方法的用法\"><a href=\"#範例：檢查方法的用法\" class=\"headerlink\" title=\"範例：檢查方法的用法\"></a><strong>範例：檢查方法的用法</strong></h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    vector&lt;<span class=\"type\">int</span>&gt; vec = &#123;<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 大小和是否為空</span></span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Size: &quot;</span> &lt;&lt; vec.<span class=\"built_in\">size</span>() &lt;&lt; endl;</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Is empty: &quot;</span> &lt;&lt; (vec.<span class=\"built_in\">empty</span>() ? <span class=\"string\">&quot;Yes&quot;</span> : <span class=\"string\">&quot;No&quot;</span>) &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 訪問元素</span></span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;First element: &quot;</span> &lt;&lt; vec.<span class=\"built_in\">front</span>() &lt;&lt; endl;</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Last element: &quot;</span> &lt;&lt; vec.<span class=\"built_in\">back</span>() &lt;&lt; endl;</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Element at index 2: &quot;</span> &lt;&lt; vec.<span class=\"built_in\">at</span>(<span class=\"number\">2</span>) &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 清空 vector</span></span><br><span class=\"line\">    vec.<span class=\"built_in\">clear</span>();</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Size after clear: &quot;</span> &lt;&lt; vec.<span class=\"built_in\">size</span>() &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><strong>輸出：</strong></p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">Size:</span> <span class=\"number\">5</span></span><br><span class=\"line\"><span class=\"attr\">Is empty:</span> <span class=\"literal\">No</span></span><br><span class=\"line\"><span class=\"attr\">First element:</span> <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"attr\">Last element:</span> <span class=\"number\">5</span></span><br><span class=\"line\"><span class=\"attr\">Element at index 2:</span> <span class=\"number\">3</span></span><br><span class=\"line\"><span class=\"attr\">Size after clear:</span> <span class=\"number\">0</span></span><br></pre></td></tr></table></figure>\n","cover_type":"img","excerpt":"","more":"<h1 id=\"Vector-實戰教學\"><a href=\"#Vector-實戰教學\" class=\"headerlink\" title=\"Vector 實戰教學\"></a>Vector 實戰教學</h1><h3 id=\"1-vector-的基本操作\"><a href=\"#1-vector-的基本操作\" class=\"headerlink\" title=\"1. vector 的基本操作\"></a><strong>1. <code>vector</code> 的基本操作</strong></h3><h3 id=\"定義與初始化\"><a href=\"#定義與初始化\" class=\"headerlink\" title=\"定義與初始化\"></a><strong>定義與初始化</strong></h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 定義一個空的 vector</span></span><br><span class=\"line\">    vector&lt;<span class=\"type\">int</span>&gt; vec;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 定義並初始化</span></span><br><span class=\"line\">    vector&lt;<span class=\"type\">int</span>&gt; vec2 = &#123;<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 定義固定大小的 vector，初始值為 0</span></span><br><span class=\"line\">    <span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">vec3</span><span class=\"params\">(<span class=\"number\">5</span>, <span class=\"number\">0</span>)</span></span>; <span class=\"comment\">// 5 個元素，每個元素初始值為 0</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 輸出 vec2 的內容</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> x : vec2) &#123;</span><br><span class=\"line\">        cout &lt;&lt; x &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><strong>輸出：</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 2 3 4 5</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h3 id=\"2-動態增加和刪除元素\"><a href=\"#2-動態增加和刪除元素\" class=\"headerlink\" title=\"2. 動態增加和刪除元素\"></a><strong>2. 動態增加和刪除元素</strong></h3><h3 id=\"增加元素\"><a href=\"#增加元素\" class=\"headerlink\" title=\"增加元素\"></a><strong>增加元素</strong></h3><ul>\n<li>使用 <code>push_back()</code> 在尾部添加元素。</li>\n<li>使用 <code>insert()</code> 在特定位置插入元素。</li>\n</ul>\n<h3 id=\"刪除元素\"><a href=\"#刪除元素\" class=\"headerlink\" title=\"刪除元素\"></a><strong>刪除元素</strong></h3><ul>\n<li>使用 <code>pop_back()</code> 刪除尾部元素。</li>\n<li>使用 <code>erase()</code> 刪除指定位置的元素。</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    vector&lt;<span class=\"type\">int</span>&gt; vec = &#123;<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 在尾部添加元素</span></span><br><span class=\"line\">    vec.<span class=\"built_in\">push_back</span>(<span class=\"number\">6</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 在位置 2 插入元素 10</span></span><br><span class=\"line\">    vec.<span class=\"built_in\">insert</span>(vec.<span class=\"built_in\">begin</span>() + <span class=\"number\">2</span>, <span class=\"number\">10</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 刪除尾部元素</span></span><br><span class=\"line\">    vec.<span class=\"built_in\">pop_back</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 刪除位置 2 的元素</span></span><br><span class=\"line\">    vec.<span class=\"built_in\">erase</span>(vec.<span class=\"built_in\">begin</span>() + <span class=\"number\">2</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 輸出內容</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> x : vec) &#123;</span><br><span class=\"line\">        cout &lt;&lt; x &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>輸出：</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 2 3 4 5</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h3 id=\"3-常用方法與屬性\"><a href=\"#3-常用方法與屬性\" class=\"headerlink\" title=\"3. 常用方法與屬性\"></a><strong>3. 常用方法與屬性</strong></h3><h3 id=\"方法\"><a href=\"#方法\" class=\"headerlink\" title=\"方法\"></a><strong>方法</strong></h3><table>\n<thead>\n<tr>\n<th>方法名</th>\n<th>功能</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>push_back(value)</code></td>\n<td>在尾部添加一個元素</td>\n</tr>\n<tr>\n<td><code>pop_back()</code></td>\n<td>刪除尾部元素</td>\n</tr>\n<tr>\n<td><code>insert(pos, value)</code></td>\n<td>在 <code>pos</code> 位置插入一個元素</td>\n</tr>\n<tr>\n<td><code>erase(pos)</code></td>\n<td>刪除 <code>pos</code> 位置的元素</td>\n</tr>\n<tr>\n<td><code>clear()</code></td>\n<td>刪除所有元素</td>\n</tr>\n<tr>\n<td><code>size()</code></td>\n<td>返回當前元素數量</td>\n</tr>\n<tr>\n<td><code>empty()</code></td>\n<td>判斷是否為空</td>\n</tr>\n<tr>\n<td><code>resize(n, value)</code></td>\n<td>調整大小為 <code>n</code>，多出部分用 <code>value</code> 填充（默認為 0）</td>\n</tr>\n<tr>\n<td><code>front()</code></td>\n<td>返回第一個元素</td>\n</tr>\n<tr>\n<td><code>back()</code></td>\n<td>返回最後一個元素</td>\n</tr>\n<tr>\n<td><code>at(index)</code></td>\n<td>返回索引 <code>index</code> 處的元素，帶範圍檢查</td>\n</tr>\n</tbody></table>\n<hr>\n<h3 id=\"範例：檢查方法的用法\"><a href=\"#範例：檢查方法的用法\" class=\"headerlink\" title=\"範例：檢查方法的用法\"></a><strong>範例：檢查方法的用法</strong></h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    vector&lt;<span class=\"type\">int</span>&gt; vec = &#123;<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 大小和是否為空</span></span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Size: &quot;</span> &lt;&lt; vec.<span class=\"built_in\">size</span>() &lt;&lt; endl;</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Is empty: &quot;</span> &lt;&lt; (vec.<span class=\"built_in\">empty</span>() ? <span class=\"string\">&quot;Yes&quot;</span> : <span class=\"string\">&quot;No&quot;</span>) &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 訪問元素</span></span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;First element: &quot;</span> &lt;&lt; vec.<span class=\"built_in\">front</span>() &lt;&lt; endl;</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Last element: &quot;</span> &lt;&lt; vec.<span class=\"built_in\">back</span>() &lt;&lt; endl;</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Element at index 2: &quot;</span> &lt;&lt; vec.<span class=\"built_in\">at</span>(<span class=\"number\">2</span>) &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 清空 vector</span></span><br><span class=\"line\">    vec.<span class=\"built_in\">clear</span>();</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Size after clear: &quot;</span> &lt;&lt; vec.<span class=\"built_in\">size</span>() &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><strong>輸出：</strong></p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">Size:</span> <span class=\"number\">5</span></span><br><span class=\"line\"><span class=\"attr\">Is empty:</span> <span class=\"literal\">No</span></span><br><span class=\"line\"><span class=\"attr\">First element:</span> <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"attr\">Last element:</span> <span class=\"number\">5</span></span><br><span class=\"line\"><span class=\"attr\">Element at index 2:</span> <span class=\"number\">3</span></span><br><span class=\"line\"><span class=\"attr\">Size after clear:</span> <span class=\"number\">0</span></span><br></pre></td></tr></table></figure>\n"},{"layout":"post","title":"撰寫 Python 發送成績給學生確認","date":"2024-11-02T05:43:31.000Z","top_img":"https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2F%E6%92%B0%E5%AF%AB%20Python%20%E7%99%BC%E9%80%81%E6%88%90%E7%B8%BE%E7%B5%A6%E5%AD%B8%E7%94%9F%E7%A2%BA%E8%AA%8D%2Fpython-mailscore.webp?alt=media&token=0ed4da31-e1b5-4ea3-8f89-0ecf46d0f30c","cover":"https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2F%E6%92%B0%E5%AF%AB%20Python%20%E7%99%BC%E9%80%81%E6%88%90%E7%B8%BE%E7%B5%A6%E5%AD%B8%E7%94%9F%E7%A2%BA%E8%AA%8D%2Fpython-mailscore.webp?alt=media&token=0ed4da31-e1b5-4ea3-8f89-0ecf46d0f30c","_content":"\n### 程式功能概述\n\n此 Python 程式使用 `smtplib` 庫來自動發送學生成績通知郵件。從 Excel 檔案中讀取每位學生的成績，並依據其學號生成專屬郵件，郵件以純文字格式發送至指定學校郵箱地址。為了避免 Gmail 將郵件自動摺疊，程式為每封郵件添加了唯一的時間標記。\n\n---\n\n### 步驟詳解\n\n### 1. 準備所需的程式庫\n\n我們使用以下程式庫：\n\n- `pandas`：讀取 Excel 檔案，將學生的成績資料導入程式。\n- `smtplib`：用於設置 SMTP 伺服器並發送郵件。\n- `datetime`：生成唯一的時間標記，避免 Gmail 認定郵件內容相同。\n\n```python\nimport pandas as pd\nimport smtplib\nfrom email.mime.text import MIMEText\nfrom email.mime.multipart import MIMEMultipart\nfrom datetime import datetime\n```\n\n### 2. 讀取 Excel 檔案\n\n使用 `pandas` 讀取 Excel 檔案的「工作表 1」工作表。只提取所需的欄位：`班級`、`學號`、`姓名`、`隨堂1` 至 `隨堂4`。\n\n```python\nfile_path = 'ta-score-mid.xlsx'\ndata = pd.read_excel(file_path, sheet_name='工作表1')\ndata = data[['班級', '學號', '姓名', '隨堂1', '隨堂2', '隨堂3', '隨堂4']]\n```\n\n### 3. 設置 SMTP 伺服器\n\n在此程式中，我們使用 Gmail 的 SMTP 伺服器來發送郵件。設置伺服器地址、登入帳號和應用程式密碼。\n\n```python\nsmtp_server = \"smtp.gmail.com\"\nsmtp_port = 587\nsmtp_user = \"your_email@gmail.com\"  # 替換為您的 Gmail 地址\nsmtp_password = \"your_app_specific_password\"  # 替換為您的應用程式密碼\n```\n\n### 4. 開啟伺服器連接\n\n使用 `smtplib.SMTP` 建立伺服器連接，啟動 TLS 安全層後登入帳號。\n\n```python\nserver = smtplib.SMTP(smtp_server, smtp_port)\nserver.starttls()\nserver.login(smtp_user, smtp_password)\n```\n\n### 5. 構建並發送郵件\n\n對每位學生資料迴圈處理：\n\n1. 生成個性化的郵件主體，包含學生成績資訊。\n2. 將「學號」欄位轉為小寫格式，以符合學校郵箱格式。\n3. 添加當前時間作為唯一標記，避免 Gmail 摺疊郵件。\n\n```python\nfor index, row in data.iterrows():\n    student_id = row['學號'].lower()\n    student_name_full = row['姓名']\n    student_name = student_name_full[-2:]\n    email_to = f\"{student_id}@stust.edu.tw, {student_id}@office.stust.edu.tw\"\n    subject = \"基礎數學 期中作業成績確認\"\n\n    scores = (\n        f\"隨堂1: {row['隨堂1']}\\\\n\"\n        f\"隨堂2: {row['隨堂2']}\\\\n\"\n        f\"隨堂3: {row['隨堂3']}\\\\n\"\n        f\"隨堂4: {row['隨堂4']}\"\n    )\n\n    unique_marker = datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n\n    body = (\n        f\"{student_name} 同學哈囉!\\\\n\\\\n\"\n        \"這是你的隨堂成績:\\\\n\\\\n\"\n        f\"{scores}\\\\n\\\\n\"\n        \"如果有任何問題或是作業需要補交都記得要跟我說一下哦。\\\\n\\\\n\"\n        \"TA 莊鈞凱\\\\n\"\n        \"祝你下週期中考試每一科都💯\\\\n\\\\n\"\n        \"Web: <https://kingkaizhuang.github.io/\\\\n\\\\n>\"\n        f\"唯一標記：{unique_marker}\"\n    )\n\n    message = MIMEMultipart()\n    message[\"From\"] = f\"基礎數學助教 <{smtp_user}>\"\n    message[\"To\"] = email_to\n    message[\"Subject\"] = subject\n    message.attach(MIMEText(body, \"plain\"))\n\n    server.sendmail(smtp_user, email_to.split(\", \"), message.as_string())\n    print(f\"已發送成績給 {student_name_full} ({email_to})\")\n```\n\n### 6. 關閉伺服器連接\n\n在所有郵件發送完畢後，關閉 SMTP 伺服器連接。\n\n```python\nserver.quit()\n```\n\n---\n\n### 完整程式碼\n\n```python\nimport pandas as pd\nimport smtplib\nfrom email.mime.text import MIMEText\nfrom email.mime.multipart import MIMEMultipart\nfrom datetime import datetime\n\nfile_path = 'ta-score-mid.xlsx'\ndata = pd.read_excel(file_path, sheet_name='工作表1')\ndata = data[['班級', '學號', '姓名', '隨堂1', '隨堂2', '隨堂3', '隨堂4']]\n\nsmtp_server = \"smtp.gmail.com\"\nsmtp_port = 587\nsmtp_user = \"your_email@gmail.com\"  # 替換為您的 Gmail 地址\nsmtp_password = \"your_app_specific_password\"  # 替換為您的應用程式密碼\n\nserver = smtplib.SMTP(smtp_server, smtp_port)\nserver.starttls()\nserver.login(smtp_user, smtp_password)\n\nfor index, row in data.iterrows():\n    student_id = row['學號'].lower()\n    student_name_full = row['姓名']\n    student_name = student_name_full[-2:]\n    email_to = f\"{student_id}@stust.edu.tw, {student_id}@office.stust.edu.tw\"\n    subject = \"基礎數學 期中作業成績確認\"\n\n    scores = (\n        f\"隨堂1: {row['隨堂1']}\\\\n\"\n        f\"隨堂2: {row['隨堂2']}\\\\n\"\n        f\"隨堂3: {row['隨堂3']}\\\\n\"\n        f\"隨堂4: {row['隨堂4']}\"\n    )\n\n    unique_marker = datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n\n    body = (\n        f\"{student_name} 同學哈囉!\\\\n\\\\n\"\n        \"這是你的隨堂成績:\\\\n\\\\n\"\n        f\"{scores}\\\\n\\\\n\"\n        \"如果有任何問題或是作業需要補交都記得要跟我說一下哦。\\\\n\\\\n\"\n        \"TA 莊鈞凱\\\\n\"\n        \"祝你下週期中考試每一科都💯\\\\n\\\\n\"\n        \"Web: <https://kingkaizhuang.github.io/\\\\n\\\\n>\"\n        f\"唯一標記：{unique_marker}\"\n    )\n\n    message = MIMEMultipart()\n    message[\"From\"] = f\"基礎數學助教 <{smtp_user}>\"\n    message[\"To\"] = email_to\n    message[\"Subject\"] = subject\n    message.attach(MIMEText(body, \"plain\"))\n\n    server.sendmail(smtp_user, email_to.split(\", \"), message.as_string())\n    print(f\"已發送成績給 {student_name_full} ({email_to})\")\n\nserver.quit(\n```\n","source":"_posts/撰寫 Python 發送成績給學生確認.md","raw":"---\nlayout: post\ntitle: 撰寫 Python 發送成績給學生確認\ndate: 2024-11-02 13:43:31\ntags: [Python Email]\ncategories: [Python, Email]\ntop_img: https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2F%E6%92%B0%E5%AF%AB%20Python%20%E7%99%BC%E9%80%81%E6%88%90%E7%B8%BE%E7%B5%A6%E5%AD%B8%E7%94%9F%E7%A2%BA%E8%AA%8D%2Fpython-mailscore.webp?alt=media&token=0ed4da31-e1b5-4ea3-8f89-0ecf46d0f30c\ncover: https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2F%E6%92%B0%E5%AF%AB%20Python%20%E7%99%BC%E9%80%81%E6%88%90%E7%B8%BE%E7%B5%A6%E5%AD%B8%E7%94%9F%E7%A2%BA%E8%AA%8D%2Fpython-mailscore.webp?alt=media&token=0ed4da31-e1b5-4ea3-8f89-0ecf46d0f30c\n---\n\n### 程式功能概述\n\n此 Python 程式使用 `smtplib` 庫來自動發送學生成績通知郵件。從 Excel 檔案中讀取每位學生的成績，並依據其學號生成專屬郵件，郵件以純文字格式發送至指定學校郵箱地址。為了避免 Gmail 將郵件自動摺疊，程式為每封郵件添加了唯一的時間標記。\n\n---\n\n### 步驟詳解\n\n### 1. 準備所需的程式庫\n\n我們使用以下程式庫：\n\n- `pandas`：讀取 Excel 檔案，將學生的成績資料導入程式。\n- `smtplib`：用於設置 SMTP 伺服器並發送郵件。\n- `datetime`：生成唯一的時間標記，避免 Gmail 認定郵件內容相同。\n\n```python\nimport pandas as pd\nimport smtplib\nfrom email.mime.text import MIMEText\nfrom email.mime.multipart import MIMEMultipart\nfrom datetime import datetime\n```\n\n### 2. 讀取 Excel 檔案\n\n使用 `pandas` 讀取 Excel 檔案的「工作表 1」工作表。只提取所需的欄位：`班級`、`學號`、`姓名`、`隨堂1` 至 `隨堂4`。\n\n```python\nfile_path = 'ta-score-mid.xlsx'\ndata = pd.read_excel(file_path, sheet_name='工作表1')\ndata = data[['班級', '學號', '姓名', '隨堂1', '隨堂2', '隨堂3', '隨堂4']]\n```\n\n### 3. 設置 SMTP 伺服器\n\n在此程式中，我們使用 Gmail 的 SMTP 伺服器來發送郵件。設置伺服器地址、登入帳號和應用程式密碼。\n\n```python\nsmtp_server = \"smtp.gmail.com\"\nsmtp_port = 587\nsmtp_user = \"your_email@gmail.com\"  # 替換為您的 Gmail 地址\nsmtp_password = \"your_app_specific_password\"  # 替換為您的應用程式密碼\n```\n\n### 4. 開啟伺服器連接\n\n使用 `smtplib.SMTP` 建立伺服器連接，啟動 TLS 安全層後登入帳號。\n\n```python\nserver = smtplib.SMTP(smtp_server, smtp_port)\nserver.starttls()\nserver.login(smtp_user, smtp_password)\n```\n\n### 5. 構建並發送郵件\n\n對每位學生資料迴圈處理：\n\n1. 生成個性化的郵件主體，包含學生成績資訊。\n2. 將「學號」欄位轉為小寫格式，以符合學校郵箱格式。\n3. 添加當前時間作為唯一標記，避免 Gmail 摺疊郵件。\n\n```python\nfor index, row in data.iterrows():\n    student_id = row['學號'].lower()\n    student_name_full = row['姓名']\n    student_name = student_name_full[-2:]\n    email_to = f\"{student_id}@stust.edu.tw, {student_id}@office.stust.edu.tw\"\n    subject = \"基礎數學 期中作業成績確認\"\n\n    scores = (\n        f\"隨堂1: {row['隨堂1']}\\\\n\"\n        f\"隨堂2: {row['隨堂2']}\\\\n\"\n        f\"隨堂3: {row['隨堂3']}\\\\n\"\n        f\"隨堂4: {row['隨堂4']}\"\n    )\n\n    unique_marker = datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n\n    body = (\n        f\"{student_name} 同學哈囉!\\\\n\\\\n\"\n        \"這是你的隨堂成績:\\\\n\\\\n\"\n        f\"{scores}\\\\n\\\\n\"\n        \"如果有任何問題或是作業需要補交都記得要跟我說一下哦。\\\\n\\\\n\"\n        \"TA 莊鈞凱\\\\n\"\n        \"祝你下週期中考試每一科都💯\\\\n\\\\n\"\n        \"Web: <https://kingkaizhuang.github.io/\\\\n\\\\n>\"\n        f\"唯一標記：{unique_marker}\"\n    )\n\n    message = MIMEMultipart()\n    message[\"From\"] = f\"基礎數學助教 <{smtp_user}>\"\n    message[\"To\"] = email_to\n    message[\"Subject\"] = subject\n    message.attach(MIMEText(body, \"plain\"))\n\n    server.sendmail(smtp_user, email_to.split(\", \"), message.as_string())\n    print(f\"已發送成績給 {student_name_full} ({email_to})\")\n```\n\n### 6. 關閉伺服器連接\n\n在所有郵件發送完畢後，關閉 SMTP 伺服器連接。\n\n```python\nserver.quit()\n```\n\n---\n\n### 完整程式碼\n\n```python\nimport pandas as pd\nimport smtplib\nfrom email.mime.text import MIMEText\nfrom email.mime.multipart import MIMEMultipart\nfrom datetime import datetime\n\nfile_path = 'ta-score-mid.xlsx'\ndata = pd.read_excel(file_path, sheet_name='工作表1')\ndata = data[['班級', '學號', '姓名', '隨堂1', '隨堂2', '隨堂3', '隨堂4']]\n\nsmtp_server = \"smtp.gmail.com\"\nsmtp_port = 587\nsmtp_user = \"your_email@gmail.com\"  # 替換為您的 Gmail 地址\nsmtp_password = \"your_app_specific_password\"  # 替換為您的應用程式密碼\n\nserver = smtplib.SMTP(smtp_server, smtp_port)\nserver.starttls()\nserver.login(smtp_user, smtp_password)\n\nfor index, row in data.iterrows():\n    student_id = row['學號'].lower()\n    student_name_full = row['姓名']\n    student_name = student_name_full[-2:]\n    email_to = f\"{student_id}@stust.edu.tw, {student_id}@office.stust.edu.tw\"\n    subject = \"基礎數學 期中作業成績確認\"\n\n    scores = (\n        f\"隨堂1: {row['隨堂1']}\\\\n\"\n        f\"隨堂2: {row['隨堂2']}\\\\n\"\n        f\"隨堂3: {row['隨堂3']}\\\\n\"\n        f\"隨堂4: {row['隨堂4']}\"\n    )\n\n    unique_marker = datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n\n    body = (\n        f\"{student_name} 同學哈囉!\\\\n\\\\n\"\n        \"這是你的隨堂成績:\\\\n\\\\n\"\n        f\"{scores}\\\\n\\\\n\"\n        \"如果有任何問題或是作業需要補交都記得要跟我說一下哦。\\\\n\\\\n\"\n        \"TA 莊鈞凱\\\\n\"\n        \"祝你下週期中考試每一科都💯\\\\n\\\\n\"\n        \"Web: <https://kingkaizhuang.github.io/\\\\n\\\\n>\"\n        f\"唯一標記：{unique_marker}\"\n    )\n\n    message = MIMEMultipart()\n    message[\"From\"] = f\"基礎數學助教 <{smtp_user}>\"\n    message[\"To\"] = email_to\n    message[\"Subject\"] = subject\n    message.attach(MIMEText(body, \"plain\"))\n\n    server.sendmail(smtp_user, email_to.split(\", \"), message.as_string())\n    print(f\"已發送成績給 {student_name_full} ({email_to})\")\n\nserver.quit(\n```\n","slug":"撰寫 Python 發送成績給學生確認","published":1,"updated":"2024-11-02T04:00:51.558Z","comments":1,"photos":[],"_id":"cm3pyqfu40001jmex10wecl8h","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h3 id=\"程式功能概述\"><a href=\"#程式功能概述\" class=\"headerlink\" title=\"程式功能概述\"></a>程式功能概述</h3><p>此 Python 程式使用 <code>smtplib</code> 庫來自動發送學生成績通知郵件。從 Excel 檔案中讀取每位學生的成績，並依據其學號生成專屬郵件，郵件以純文字格式發送至指定學校郵箱地址。為了避免 Gmail 將郵件自動摺疊，程式為每封郵件添加了唯一的時間標記。</p>\n<hr>\n<h3 id=\"步驟詳解\"><a href=\"#步驟詳解\" class=\"headerlink\" title=\"步驟詳解\"></a>步驟詳解</h3><h3 id=\"1-準備所需的程式庫\"><a href=\"#1-準備所需的程式庫\" class=\"headerlink\" title=\"1. 準備所需的程式庫\"></a>1. 準備所需的程式庫</h3><p>我們使用以下程式庫：</p>\n<ul>\n<li><code>pandas</code>：讀取 Excel 檔案，將學生的成績資料導入程式。</li>\n<li><code>smtplib</code>：用於設置 SMTP 伺服器並發送郵件。</li>\n<li><code>datetime</code>：生成唯一的時間標記，避免 Gmail 認定郵件內容相同。</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"><span class=\"keyword\">import</span> smtplib</span><br><span class=\"line\"><span class=\"keyword\">from</span> email.mime.text <span class=\"keyword\">import</span> MIMEText</span><br><span class=\"line\"><span class=\"keyword\">from</span> email.mime.multipart <span class=\"keyword\">import</span> MIMEMultipart</span><br><span class=\"line\"><span class=\"keyword\">from</span> datetime <span class=\"keyword\">import</span> datetime</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-讀取-Excel-檔案\"><a href=\"#2-讀取-Excel-檔案\" class=\"headerlink\" title=\"2. 讀取 Excel 檔案\"></a>2. 讀取 Excel 檔案</h3><p>使用 <code>pandas</code> 讀取 Excel 檔案的「工作表 1」工作表。只提取所需的欄位：<code>班級</code>、<code>學號</code>、<code>姓名</code>、<code>隨堂1</code> 至 <code>隨堂4</code>。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">file_path = <span class=\"string\">&#x27;ta-score-mid.xlsx&#x27;</span></span><br><span class=\"line\">data = pd.read_excel(file_path, sheet_name=<span class=\"string\">&#x27;工作表1&#x27;</span>)</span><br><span class=\"line\">data = data[[<span class=\"string\">&#x27;班級&#x27;</span>, <span class=\"string\">&#x27;學號&#x27;</span>, <span class=\"string\">&#x27;姓名&#x27;</span>, <span class=\"string\">&#x27;隨堂1&#x27;</span>, <span class=\"string\">&#x27;隨堂2&#x27;</span>, <span class=\"string\">&#x27;隨堂3&#x27;</span>, <span class=\"string\">&#x27;隨堂4&#x27;</span>]]</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-設置-SMTP-伺服器\"><a href=\"#3-設置-SMTP-伺服器\" class=\"headerlink\" title=\"3. 設置 SMTP 伺服器\"></a>3. 設置 SMTP 伺服器</h3><p>在此程式中，我們使用 Gmail 的 SMTP 伺服器來發送郵件。設置伺服器地址、登入帳號和應用程式密碼。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">smtp_server = <span class=\"string\">&quot;smtp.gmail.com&quot;</span></span><br><span class=\"line\">smtp_port = <span class=\"number\">587</span></span><br><span class=\"line\">smtp_user = <span class=\"string\">&quot;your_email@gmail.com&quot;</span>  <span class=\"comment\"># 替換為您的 Gmail 地址</span></span><br><span class=\"line\">smtp_password = <span class=\"string\">&quot;your_app_specific_password&quot;</span>  <span class=\"comment\"># 替換為您的應用程式密碼</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-開啟伺服器連接\"><a href=\"#4-開啟伺服器連接\" class=\"headerlink\" title=\"4. 開啟伺服器連接\"></a>4. 開啟伺服器連接</h3><p>使用 <code>smtplib.SMTP</code> 建立伺服器連接，啟動 TLS 安全層後登入帳號。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server = smtplib.SMTP(smtp_server, smtp_port)</span><br><span class=\"line\">server.starttls()</span><br><span class=\"line\">server.login(smtp_user, smtp_password)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"5-構建並發送郵件\"><a href=\"#5-構建並發送郵件\" class=\"headerlink\" title=\"5. 構建並發送郵件\"></a>5. 構建並發送郵件</h3><p>對每位學生資料迴圈處理：</p>\n<ol>\n<li>生成個性化的郵件主體，包含學生成績資訊。</li>\n<li>將「學號」欄位轉為小寫格式，以符合學校郵箱格式。</li>\n<li>添加當前時間作為唯一標記，避免 Gmail 摺疊郵件。</li>\n</ol>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> index, row <span class=\"keyword\">in</span> data.iterrows():</span><br><span class=\"line\">    student_id = row[<span class=\"string\">&#x27;學號&#x27;</span>].lower()</span><br><span class=\"line\">    student_name_full = row[<span class=\"string\">&#x27;姓名&#x27;</span>]</span><br><span class=\"line\">    student_name = student_name_full[-<span class=\"number\">2</span>:]</span><br><span class=\"line\">    email_to = <span class=\"string\">f&quot;<span class=\"subst\">&#123;student_id&#125;</span>@stust.edu.tw, <span class=\"subst\">&#123;student_id&#125;</span>@office.stust.edu.tw&quot;</span></span><br><span class=\"line\">    subject = <span class=\"string\">&quot;基礎數學 期中作業成績確認&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    scores = (</span><br><span class=\"line\">        <span class=\"string\">f&quot;隨堂1: <span class=\"subst\">&#123;row[<span class=\"string\">&#x27;隨堂1&#x27;</span>]&#125;</span>\\\\n&quot;</span></span><br><span class=\"line\">        <span class=\"string\">f&quot;隨堂2: <span class=\"subst\">&#123;row[<span class=\"string\">&#x27;隨堂2&#x27;</span>]&#125;</span>\\\\n&quot;</span></span><br><span class=\"line\">        <span class=\"string\">f&quot;隨堂3: <span class=\"subst\">&#123;row[<span class=\"string\">&#x27;隨堂3&#x27;</span>]&#125;</span>\\\\n&quot;</span></span><br><span class=\"line\">        <span class=\"string\">f&quot;隨堂4: <span class=\"subst\">&#123;row[<span class=\"string\">&#x27;隨堂4&#x27;</span>]&#125;</span>&quot;</span></span><br><span class=\"line\">    )</span><br><span class=\"line\"></span><br><span class=\"line\">    unique_marker = datetime.now().strftime(<span class=\"string\">&quot;%Y-%m-%d %H:%M:%S&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    body = (</span><br><span class=\"line\">        <span class=\"string\">f&quot;<span class=\"subst\">&#123;student_name&#125;</span> 同學哈囉!\\\\n\\\\n&quot;</span></span><br><span class=\"line\">        <span class=\"string\">&quot;這是你的隨堂成績:\\\\n\\\\n&quot;</span></span><br><span class=\"line\">        <span class=\"string\">f&quot;<span class=\"subst\">&#123;scores&#125;</span>\\\\n\\\\n&quot;</span></span><br><span class=\"line\">        <span class=\"string\">&quot;如果有任何問題或是作業需要補交都記得要跟我說一下哦。\\\\n\\\\n&quot;</span></span><br><span class=\"line\">        <span class=\"string\">&quot;TA 莊鈞凱\\\\n&quot;</span></span><br><span class=\"line\">        <span class=\"string\">&quot;祝你下週期中考試每一科都💯\\\\n\\\\n&quot;</span></span><br><span class=\"line\">        <span class=\"string\">&quot;Web: &lt;https://kingkaizhuang.github.io/\\\\n\\\\n&gt;&quot;</span></span><br><span class=\"line\">        <span class=\"string\">f&quot;唯一標記：<span class=\"subst\">&#123;unique_marker&#125;</span>&quot;</span></span><br><span class=\"line\">    )</span><br><span class=\"line\"></span><br><span class=\"line\">    message = MIMEMultipart()</span><br><span class=\"line\">    message[<span class=\"string\">&quot;From&quot;</span>] = <span class=\"string\">f&quot;基礎數學助教 &lt;<span class=\"subst\">&#123;smtp_user&#125;</span>&gt;&quot;</span></span><br><span class=\"line\">    message[<span class=\"string\">&quot;To&quot;</span>] = email_to</span><br><span class=\"line\">    message[<span class=\"string\">&quot;Subject&quot;</span>] = subject</span><br><span class=\"line\">    message.attach(MIMEText(body, <span class=\"string\">&quot;plain&quot;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">    server.sendmail(smtp_user, email_to.split(<span class=\"string\">&quot;, &quot;</span>), message.as_string())</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">f&quot;已發送成績給 <span class=\"subst\">&#123;student_name_full&#125;</span> (<span class=\"subst\">&#123;email_to&#125;</span>)&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"6-關閉伺服器連接\"><a href=\"#6-關閉伺服器連接\" class=\"headerlink\" title=\"6. 關閉伺服器連接\"></a>6. 關閉伺服器連接</h3><p>在所有郵件發送完畢後，關閉 SMTP 伺服器連接。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server.quit()</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h3 id=\"完整程式碼\"><a href=\"#完整程式碼\" class=\"headerlink\" title=\"完整程式碼\"></a>完整程式碼</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"><span class=\"keyword\">import</span> smtplib</span><br><span class=\"line\"><span class=\"keyword\">from</span> email.mime.text <span class=\"keyword\">import</span> MIMEText</span><br><span class=\"line\"><span class=\"keyword\">from</span> email.mime.multipart <span class=\"keyword\">import</span> MIMEMultipart</span><br><span class=\"line\"><span class=\"keyword\">from</span> datetime <span class=\"keyword\">import</span> datetime</span><br><span class=\"line\"></span><br><span class=\"line\">file_path = <span class=\"string\">&#x27;ta-score-mid.xlsx&#x27;</span></span><br><span class=\"line\">data = pd.read_excel(file_path, sheet_name=<span class=\"string\">&#x27;工作表1&#x27;</span>)</span><br><span class=\"line\">data = data[[<span class=\"string\">&#x27;班級&#x27;</span>, <span class=\"string\">&#x27;學號&#x27;</span>, <span class=\"string\">&#x27;姓名&#x27;</span>, <span class=\"string\">&#x27;隨堂1&#x27;</span>, <span class=\"string\">&#x27;隨堂2&#x27;</span>, <span class=\"string\">&#x27;隨堂3&#x27;</span>, <span class=\"string\">&#x27;隨堂4&#x27;</span>]]</span><br><span class=\"line\"></span><br><span class=\"line\">smtp_server = <span class=\"string\">&quot;smtp.gmail.com&quot;</span></span><br><span class=\"line\">smtp_port = <span class=\"number\">587</span></span><br><span class=\"line\">smtp_user = <span class=\"string\">&quot;your_email@gmail.com&quot;</span>  <span class=\"comment\"># 替換為您的 Gmail 地址</span></span><br><span class=\"line\">smtp_password = <span class=\"string\">&quot;your_app_specific_password&quot;</span>  <span class=\"comment\"># 替換為您的應用程式密碼</span></span><br><span class=\"line\"></span><br><span class=\"line\">server = smtplib.SMTP(smtp_server, smtp_port)</span><br><span class=\"line\">server.starttls()</span><br><span class=\"line\">server.login(smtp_user, smtp_password)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> index, row <span class=\"keyword\">in</span> data.iterrows():</span><br><span class=\"line\">    student_id = row[<span class=\"string\">&#x27;學號&#x27;</span>].lower()</span><br><span class=\"line\">    student_name_full = row[<span class=\"string\">&#x27;姓名&#x27;</span>]</span><br><span class=\"line\">    student_name = student_name_full[-<span class=\"number\">2</span>:]</span><br><span class=\"line\">    email_to = <span class=\"string\">f&quot;<span class=\"subst\">&#123;student_id&#125;</span>@stust.edu.tw, <span class=\"subst\">&#123;student_id&#125;</span>@office.stust.edu.tw&quot;</span></span><br><span class=\"line\">    subject = <span class=\"string\">&quot;基礎數學 期中作業成績確認&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    scores = (</span><br><span class=\"line\">        <span class=\"string\">f&quot;隨堂1: <span class=\"subst\">&#123;row[<span class=\"string\">&#x27;隨堂1&#x27;</span>]&#125;</span>\\\\n&quot;</span></span><br><span class=\"line\">        <span class=\"string\">f&quot;隨堂2: <span class=\"subst\">&#123;row[<span class=\"string\">&#x27;隨堂2&#x27;</span>]&#125;</span>\\\\n&quot;</span></span><br><span class=\"line\">        <span class=\"string\">f&quot;隨堂3: <span class=\"subst\">&#123;row[<span class=\"string\">&#x27;隨堂3&#x27;</span>]&#125;</span>\\\\n&quot;</span></span><br><span class=\"line\">        <span class=\"string\">f&quot;隨堂4: <span class=\"subst\">&#123;row[<span class=\"string\">&#x27;隨堂4&#x27;</span>]&#125;</span>&quot;</span></span><br><span class=\"line\">    )</span><br><span class=\"line\"></span><br><span class=\"line\">    unique_marker = datetime.now().strftime(<span class=\"string\">&quot;%Y-%m-%d %H:%M:%S&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    body = (</span><br><span class=\"line\">        <span class=\"string\">f&quot;<span class=\"subst\">&#123;student_name&#125;</span> 同學哈囉!\\\\n\\\\n&quot;</span></span><br><span class=\"line\">        <span class=\"string\">&quot;這是你的隨堂成績:\\\\n\\\\n&quot;</span></span><br><span class=\"line\">        <span class=\"string\">f&quot;<span class=\"subst\">&#123;scores&#125;</span>\\\\n\\\\n&quot;</span></span><br><span class=\"line\">        <span class=\"string\">&quot;如果有任何問題或是作業需要補交都記得要跟我說一下哦。\\\\n\\\\n&quot;</span></span><br><span class=\"line\">        <span class=\"string\">&quot;TA 莊鈞凱\\\\n&quot;</span></span><br><span class=\"line\">        <span class=\"string\">&quot;祝你下週期中考試每一科都💯\\\\n\\\\n&quot;</span></span><br><span class=\"line\">        <span class=\"string\">&quot;Web: &lt;https://kingkaizhuang.github.io/\\\\n\\\\n&gt;&quot;</span></span><br><span class=\"line\">        <span class=\"string\">f&quot;唯一標記：<span class=\"subst\">&#123;unique_marker&#125;</span>&quot;</span></span><br><span class=\"line\">    )</span><br><span class=\"line\"></span><br><span class=\"line\">    message = MIMEMultipart()</span><br><span class=\"line\">    message[<span class=\"string\">&quot;From&quot;</span>] = <span class=\"string\">f&quot;基礎數學助教 &lt;<span class=\"subst\">&#123;smtp_user&#125;</span>&gt;&quot;</span></span><br><span class=\"line\">    message[<span class=\"string\">&quot;To&quot;</span>] = email_to</span><br><span class=\"line\">    message[<span class=\"string\">&quot;Subject&quot;</span>] = subject</span><br><span class=\"line\">    message.attach(MIMEText(body, <span class=\"string\">&quot;plain&quot;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">    server.sendmail(smtp_user, email_to.split(<span class=\"string\">&quot;, &quot;</span>), message.as_string())</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">f&quot;已發送成績給 <span class=\"subst\">&#123;student_name_full&#125;</span> (<span class=\"subst\">&#123;email_to&#125;</span>)&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">server.quit(</span><br></pre></td></tr></table></figure>\n","cover_type":"img","excerpt":"","more":"<h3 id=\"程式功能概述\"><a href=\"#程式功能概述\" class=\"headerlink\" title=\"程式功能概述\"></a>程式功能概述</h3><p>此 Python 程式使用 <code>smtplib</code> 庫來自動發送學生成績通知郵件。從 Excel 檔案中讀取每位學生的成績，並依據其學號生成專屬郵件，郵件以純文字格式發送至指定學校郵箱地址。為了避免 Gmail 將郵件自動摺疊，程式為每封郵件添加了唯一的時間標記。</p>\n<hr>\n<h3 id=\"步驟詳解\"><a href=\"#步驟詳解\" class=\"headerlink\" title=\"步驟詳解\"></a>步驟詳解</h3><h3 id=\"1-準備所需的程式庫\"><a href=\"#1-準備所需的程式庫\" class=\"headerlink\" title=\"1. 準備所需的程式庫\"></a>1. 準備所需的程式庫</h3><p>我們使用以下程式庫：</p>\n<ul>\n<li><code>pandas</code>：讀取 Excel 檔案，將學生的成績資料導入程式。</li>\n<li><code>smtplib</code>：用於設置 SMTP 伺服器並發送郵件。</li>\n<li><code>datetime</code>：生成唯一的時間標記，避免 Gmail 認定郵件內容相同。</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"><span class=\"keyword\">import</span> smtplib</span><br><span class=\"line\"><span class=\"keyword\">from</span> email.mime.text <span class=\"keyword\">import</span> MIMEText</span><br><span class=\"line\"><span class=\"keyword\">from</span> email.mime.multipart <span class=\"keyword\">import</span> MIMEMultipart</span><br><span class=\"line\"><span class=\"keyword\">from</span> datetime <span class=\"keyword\">import</span> datetime</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-讀取-Excel-檔案\"><a href=\"#2-讀取-Excel-檔案\" class=\"headerlink\" title=\"2. 讀取 Excel 檔案\"></a>2. 讀取 Excel 檔案</h3><p>使用 <code>pandas</code> 讀取 Excel 檔案的「工作表 1」工作表。只提取所需的欄位：<code>班級</code>、<code>學號</code>、<code>姓名</code>、<code>隨堂1</code> 至 <code>隨堂4</code>。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">file_path = <span class=\"string\">&#x27;ta-score-mid.xlsx&#x27;</span></span><br><span class=\"line\">data = pd.read_excel(file_path, sheet_name=<span class=\"string\">&#x27;工作表1&#x27;</span>)</span><br><span class=\"line\">data = data[[<span class=\"string\">&#x27;班級&#x27;</span>, <span class=\"string\">&#x27;學號&#x27;</span>, <span class=\"string\">&#x27;姓名&#x27;</span>, <span class=\"string\">&#x27;隨堂1&#x27;</span>, <span class=\"string\">&#x27;隨堂2&#x27;</span>, <span class=\"string\">&#x27;隨堂3&#x27;</span>, <span class=\"string\">&#x27;隨堂4&#x27;</span>]]</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-設置-SMTP-伺服器\"><a href=\"#3-設置-SMTP-伺服器\" class=\"headerlink\" title=\"3. 設置 SMTP 伺服器\"></a>3. 設置 SMTP 伺服器</h3><p>在此程式中，我們使用 Gmail 的 SMTP 伺服器來發送郵件。設置伺服器地址、登入帳號和應用程式密碼。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">smtp_server = <span class=\"string\">&quot;smtp.gmail.com&quot;</span></span><br><span class=\"line\">smtp_port = <span class=\"number\">587</span></span><br><span class=\"line\">smtp_user = <span class=\"string\">&quot;your_email@gmail.com&quot;</span>  <span class=\"comment\"># 替換為您的 Gmail 地址</span></span><br><span class=\"line\">smtp_password = <span class=\"string\">&quot;your_app_specific_password&quot;</span>  <span class=\"comment\"># 替換為您的應用程式密碼</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-開啟伺服器連接\"><a href=\"#4-開啟伺服器連接\" class=\"headerlink\" title=\"4. 開啟伺服器連接\"></a>4. 開啟伺服器連接</h3><p>使用 <code>smtplib.SMTP</code> 建立伺服器連接，啟動 TLS 安全層後登入帳號。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server = smtplib.SMTP(smtp_server, smtp_port)</span><br><span class=\"line\">server.starttls()</span><br><span class=\"line\">server.login(smtp_user, smtp_password)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"5-構建並發送郵件\"><a href=\"#5-構建並發送郵件\" class=\"headerlink\" title=\"5. 構建並發送郵件\"></a>5. 構建並發送郵件</h3><p>對每位學生資料迴圈處理：</p>\n<ol>\n<li>生成個性化的郵件主體，包含學生成績資訊。</li>\n<li>將「學號」欄位轉為小寫格式，以符合學校郵箱格式。</li>\n<li>添加當前時間作為唯一標記，避免 Gmail 摺疊郵件。</li>\n</ol>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> index, row <span class=\"keyword\">in</span> data.iterrows():</span><br><span class=\"line\">    student_id = row[<span class=\"string\">&#x27;學號&#x27;</span>].lower()</span><br><span class=\"line\">    student_name_full = row[<span class=\"string\">&#x27;姓名&#x27;</span>]</span><br><span class=\"line\">    student_name = student_name_full[-<span class=\"number\">2</span>:]</span><br><span class=\"line\">    email_to = <span class=\"string\">f&quot;<span class=\"subst\">&#123;student_id&#125;</span>@stust.edu.tw, <span class=\"subst\">&#123;student_id&#125;</span>@office.stust.edu.tw&quot;</span></span><br><span class=\"line\">    subject = <span class=\"string\">&quot;基礎數學 期中作業成績確認&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    scores = (</span><br><span class=\"line\">        <span class=\"string\">f&quot;隨堂1: <span class=\"subst\">&#123;row[<span class=\"string\">&#x27;隨堂1&#x27;</span>]&#125;</span>\\\\n&quot;</span></span><br><span class=\"line\">        <span class=\"string\">f&quot;隨堂2: <span class=\"subst\">&#123;row[<span class=\"string\">&#x27;隨堂2&#x27;</span>]&#125;</span>\\\\n&quot;</span></span><br><span class=\"line\">        <span class=\"string\">f&quot;隨堂3: <span class=\"subst\">&#123;row[<span class=\"string\">&#x27;隨堂3&#x27;</span>]&#125;</span>\\\\n&quot;</span></span><br><span class=\"line\">        <span class=\"string\">f&quot;隨堂4: <span class=\"subst\">&#123;row[<span class=\"string\">&#x27;隨堂4&#x27;</span>]&#125;</span>&quot;</span></span><br><span class=\"line\">    )</span><br><span class=\"line\"></span><br><span class=\"line\">    unique_marker = datetime.now().strftime(<span class=\"string\">&quot;%Y-%m-%d %H:%M:%S&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    body = (</span><br><span class=\"line\">        <span class=\"string\">f&quot;<span class=\"subst\">&#123;student_name&#125;</span> 同學哈囉!\\\\n\\\\n&quot;</span></span><br><span class=\"line\">        <span class=\"string\">&quot;這是你的隨堂成績:\\\\n\\\\n&quot;</span></span><br><span class=\"line\">        <span class=\"string\">f&quot;<span class=\"subst\">&#123;scores&#125;</span>\\\\n\\\\n&quot;</span></span><br><span class=\"line\">        <span class=\"string\">&quot;如果有任何問題或是作業需要補交都記得要跟我說一下哦。\\\\n\\\\n&quot;</span></span><br><span class=\"line\">        <span class=\"string\">&quot;TA 莊鈞凱\\\\n&quot;</span></span><br><span class=\"line\">        <span class=\"string\">&quot;祝你下週期中考試每一科都💯\\\\n\\\\n&quot;</span></span><br><span class=\"line\">        <span class=\"string\">&quot;Web: &lt;https://kingkaizhuang.github.io/\\\\n\\\\n&gt;&quot;</span></span><br><span class=\"line\">        <span class=\"string\">f&quot;唯一標記：<span class=\"subst\">&#123;unique_marker&#125;</span>&quot;</span></span><br><span class=\"line\">    )</span><br><span class=\"line\"></span><br><span class=\"line\">    message = MIMEMultipart()</span><br><span class=\"line\">    message[<span class=\"string\">&quot;From&quot;</span>] = <span class=\"string\">f&quot;基礎數學助教 &lt;<span class=\"subst\">&#123;smtp_user&#125;</span>&gt;&quot;</span></span><br><span class=\"line\">    message[<span class=\"string\">&quot;To&quot;</span>] = email_to</span><br><span class=\"line\">    message[<span class=\"string\">&quot;Subject&quot;</span>] = subject</span><br><span class=\"line\">    message.attach(MIMEText(body, <span class=\"string\">&quot;plain&quot;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">    server.sendmail(smtp_user, email_to.split(<span class=\"string\">&quot;, &quot;</span>), message.as_string())</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">f&quot;已發送成績給 <span class=\"subst\">&#123;student_name_full&#125;</span> (<span class=\"subst\">&#123;email_to&#125;</span>)&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"6-關閉伺服器連接\"><a href=\"#6-關閉伺服器連接\" class=\"headerlink\" title=\"6. 關閉伺服器連接\"></a>6. 關閉伺服器連接</h3><p>在所有郵件發送完畢後，關閉 SMTP 伺服器連接。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server.quit()</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h3 id=\"完整程式碼\"><a href=\"#完整程式碼\" class=\"headerlink\" title=\"完整程式碼\"></a>完整程式碼</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"><span class=\"keyword\">import</span> smtplib</span><br><span class=\"line\"><span class=\"keyword\">from</span> email.mime.text <span class=\"keyword\">import</span> MIMEText</span><br><span class=\"line\"><span class=\"keyword\">from</span> email.mime.multipart <span class=\"keyword\">import</span> MIMEMultipart</span><br><span class=\"line\"><span class=\"keyword\">from</span> datetime <span class=\"keyword\">import</span> datetime</span><br><span class=\"line\"></span><br><span class=\"line\">file_path = <span class=\"string\">&#x27;ta-score-mid.xlsx&#x27;</span></span><br><span class=\"line\">data = pd.read_excel(file_path, sheet_name=<span class=\"string\">&#x27;工作表1&#x27;</span>)</span><br><span class=\"line\">data = data[[<span class=\"string\">&#x27;班級&#x27;</span>, <span class=\"string\">&#x27;學號&#x27;</span>, <span class=\"string\">&#x27;姓名&#x27;</span>, <span class=\"string\">&#x27;隨堂1&#x27;</span>, <span class=\"string\">&#x27;隨堂2&#x27;</span>, <span class=\"string\">&#x27;隨堂3&#x27;</span>, <span class=\"string\">&#x27;隨堂4&#x27;</span>]]</span><br><span class=\"line\"></span><br><span class=\"line\">smtp_server = <span class=\"string\">&quot;smtp.gmail.com&quot;</span></span><br><span class=\"line\">smtp_port = <span class=\"number\">587</span></span><br><span class=\"line\">smtp_user = <span class=\"string\">&quot;your_email@gmail.com&quot;</span>  <span class=\"comment\"># 替換為您的 Gmail 地址</span></span><br><span class=\"line\">smtp_password = <span class=\"string\">&quot;your_app_specific_password&quot;</span>  <span class=\"comment\"># 替換為您的應用程式密碼</span></span><br><span class=\"line\"></span><br><span class=\"line\">server = smtplib.SMTP(smtp_server, smtp_port)</span><br><span class=\"line\">server.starttls()</span><br><span class=\"line\">server.login(smtp_user, smtp_password)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> index, row <span class=\"keyword\">in</span> data.iterrows():</span><br><span class=\"line\">    student_id = row[<span class=\"string\">&#x27;學號&#x27;</span>].lower()</span><br><span class=\"line\">    student_name_full = row[<span class=\"string\">&#x27;姓名&#x27;</span>]</span><br><span class=\"line\">    student_name = student_name_full[-<span class=\"number\">2</span>:]</span><br><span class=\"line\">    email_to = <span class=\"string\">f&quot;<span class=\"subst\">&#123;student_id&#125;</span>@stust.edu.tw, <span class=\"subst\">&#123;student_id&#125;</span>@office.stust.edu.tw&quot;</span></span><br><span class=\"line\">    subject = <span class=\"string\">&quot;基礎數學 期中作業成績確認&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    scores = (</span><br><span class=\"line\">        <span class=\"string\">f&quot;隨堂1: <span class=\"subst\">&#123;row[<span class=\"string\">&#x27;隨堂1&#x27;</span>]&#125;</span>\\\\n&quot;</span></span><br><span class=\"line\">        <span class=\"string\">f&quot;隨堂2: <span class=\"subst\">&#123;row[<span class=\"string\">&#x27;隨堂2&#x27;</span>]&#125;</span>\\\\n&quot;</span></span><br><span class=\"line\">        <span class=\"string\">f&quot;隨堂3: <span class=\"subst\">&#123;row[<span class=\"string\">&#x27;隨堂3&#x27;</span>]&#125;</span>\\\\n&quot;</span></span><br><span class=\"line\">        <span class=\"string\">f&quot;隨堂4: <span class=\"subst\">&#123;row[<span class=\"string\">&#x27;隨堂4&#x27;</span>]&#125;</span>&quot;</span></span><br><span class=\"line\">    )</span><br><span class=\"line\"></span><br><span class=\"line\">    unique_marker = datetime.now().strftime(<span class=\"string\">&quot;%Y-%m-%d %H:%M:%S&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    body = (</span><br><span class=\"line\">        <span class=\"string\">f&quot;<span class=\"subst\">&#123;student_name&#125;</span> 同學哈囉!\\\\n\\\\n&quot;</span></span><br><span class=\"line\">        <span class=\"string\">&quot;這是你的隨堂成績:\\\\n\\\\n&quot;</span></span><br><span class=\"line\">        <span class=\"string\">f&quot;<span class=\"subst\">&#123;scores&#125;</span>\\\\n\\\\n&quot;</span></span><br><span class=\"line\">        <span class=\"string\">&quot;如果有任何問題或是作業需要補交都記得要跟我說一下哦。\\\\n\\\\n&quot;</span></span><br><span class=\"line\">        <span class=\"string\">&quot;TA 莊鈞凱\\\\n&quot;</span></span><br><span class=\"line\">        <span class=\"string\">&quot;祝你下週期中考試每一科都💯\\\\n\\\\n&quot;</span></span><br><span class=\"line\">        <span class=\"string\">&quot;Web: &lt;https://kingkaizhuang.github.io/\\\\n\\\\n&gt;&quot;</span></span><br><span class=\"line\">        <span class=\"string\">f&quot;唯一標記：<span class=\"subst\">&#123;unique_marker&#125;</span>&quot;</span></span><br><span class=\"line\">    )</span><br><span class=\"line\"></span><br><span class=\"line\">    message = MIMEMultipart()</span><br><span class=\"line\">    message[<span class=\"string\">&quot;From&quot;</span>] = <span class=\"string\">f&quot;基礎數學助教 &lt;<span class=\"subst\">&#123;smtp_user&#125;</span>&gt;&quot;</span></span><br><span class=\"line\">    message[<span class=\"string\">&quot;To&quot;</span>] = email_to</span><br><span class=\"line\">    message[<span class=\"string\">&quot;Subject&quot;</span>] = subject</span><br><span class=\"line\">    message.attach(MIMEText(body, <span class=\"string\">&quot;plain&quot;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">    server.sendmail(smtp_user, email_to.split(<span class=\"string\">&quot;, &quot;</span>), message.as_string())</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">f&quot;已發送成績給 <span class=\"subst\">&#123;student_name_full&#125;</span> (<span class=\"subst\">&#123;email_to&#125;</span>)&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">server.quit(</span><br></pre></td></tr></table></figure>\n"},{"layout":"post","title":"Daphne 無法抓取 CSS 解決方法","date":"2024-11-24T13:19:31.000Z","top_img":"https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FDjango%2Fcss.webp?alt=media&token=d4e8572d-3c73-4b4e-9c53-8241ed36820d","cover":"https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FDjango%2Fcss.webp?alt=media&token=d4e8572d-3c73-4b4e-9c53-8241ed36820d","_content":"\n### **背景**\n\nDaphne 是用於運行 Django ASGI 應用的服務器。它主要負責處理 WebSocket 和 HTTP 請求，但 Daphne 本身不直接提供靜態文件服務（如 CSS、JS）。這通常導致在使用 Daphne 部署 Django 應用時，訪問 `/static/` 路徑返回 404 錯誤。\n\n---\n\n### **問題現象**\n\n當使用 Daphne 啟動應用並訪問 Django 的後台管理介面或靜態頁面時，靜態文件無法正常加載，終端可能顯示以下錯誤：\n\n```jsx\nNot Found: /static/admin/css/login.css\nNot Found: /static/admin/css/base.css\n```\n\n---\n\n### **問題原因**\n\nDaphne 不處理靜態文件。Django 預設需要 `collectstatic` 將所有靜態文件集中到一個目錄，並需要一個服務器（如 WhiteNoise 或 Nginx）來提供靜態文件支持。\n\n---\n\n### **解決方法**\n\n### **方法 1：使用 WhiteNoise 提供靜態文件**\n\nWhiteNoise 是一個用於提供靜態文件的中介軟體，適合簡單的部署需求。\n\n### **步驟 1：安裝 WhiteNoise**\n\n在虛擬環境中安裝 WhiteNoise：\n\n```bash\npip install whitenoise\n```\n\n### **步驟 2：配置 WhiteNoise**\n\n修改你的 `settings.py` 文件，添加以下配置：\n\n1. **啟用 WhiteNoise 中介**\n\n   ```python\n   MIDDLEWARE = [\n       'django.middleware.security.SecurityMiddleware',\n       'whitenoise.middleware.WhiteNoiseMiddleware',  # 添加這一行\n       'django.contrib.sessions.middleware.SessionMiddleware',\n       'django.middleware.common.CommonMiddleware',\n       'django.middleware.csrf.CsrfViewMiddleware',\n       'django.contrib.auth.middleware.AuthenticationMiddleware',\n       'django.contrib.messages.middleware.MessageMiddleware',\n       'django.middleware.clickjacking.XFrameOptionsMiddleware',\n   ]\n   ```\n\n2. **設置 `STATIC_ROOT` 和 `STATICFILES_STORAGE`**\n\n   ```python\n   STATIC_URL = '/static/'\n   STATIC_ROOT = BASE_DIR / 'staticfiles'  # 靜態文件的集中目錄\n\n   # 啟用壓縮和緩存\n   STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'\n   ```\n\n### **步驟 3：收集靜態文件**\n\n執行以下命令，將所有靜態文件收集到 `STATIC_ROOT` 指定的目錄：\n\n```bash\npython manage.py collectstatic\n```\n\n### **步驟 4：啟動應用**\n\n使用 Daphne 啟動應用：\n\n```bash\ndaphne -b 127.0.0.1 -p 8000 classify.asgi:application\n```\n\n訪問應用後，確認靜態文件是否正常加載。\n","source":"_posts/Daphne 無法抓取 CSS 解決方法.md","raw":"---\nlayout: post\ntitle: Daphne 無法抓取 CSS 解決方法\ndate: 2024-11-24 21:19:31\ntags: [Python Django]\ncategories: [Python, Django, Daphne]\ntop_img: https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FDjango%2Fcss.webp?alt=media&token=d4e8572d-3c73-4b4e-9c53-8241ed36820d\ncover: https://firebasestorage.googleapis.com/v0/b/zhuang-afef4.appspot.com/o/KingKaiZhuang.github.io%2FDjango%2Fcss.webp?alt=media&token=d4e8572d-3c73-4b4e-9c53-8241ed36820d\n---\n\n### **背景**\n\nDaphne 是用於運行 Django ASGI 應用的服務器。它主要負責處理 WebSocket 和 HTTP 請求，但 Daphne 本身不直接提供靜態文件服務（如 CSS、JS）。這通常導致在使用 Daphne 部署 Django 應用時，訪問 `/static/` 路徑返回 404 錯誤。\n\n---\n\n### **問題現象**\n\n當使用 Daphne 啟動應用並訪問 Django 的後台管理介面或靜態頁面時，靜態文件無法正常加載，終端可能顯示以下錯誤：\n\n```jsx\nNot Found: /static/admin/css/login.css\nNot Found: /static/admin/css/base.css\n```\n\n---\n\n### **問題原因**\n\nDaphne 不處理靜態文件。Django 預設需要 `collectstatic` 將所有靜態文件集中到一個目錄，並需要一個服務器（如 WhiteNoise 或 Nginx）來提供靜態文件支持。\n\n---\n\n### **解決方法**\n\n### **方法 1：使用 WhiteNoise 提供靜態文件**\n\nWhiteNoise 是一個用於提供靜態文件的中介軟體，適合簡單的部署需求。\n\n### **步驟 1：安裝 WhiteNoise**\n\n在虛擬環境中安裝 WhiteNoise：\n\n```bash\npip install whitenoise\n```\n\n### **步驟 2：配置 WhiteNoise**\n\n修改你的 `settings.py` 文件，添加以下配置：\n\n1. **啟用 WhiteNoise 中介**\n\n   ```python\n   MIDDLEWARE = [\n       'django.middleware.security.SecurityMiddleware',\n       'whitenoise.middleware.WhiteNoiseMiddleware',  # 添加這一行\n       'django.contrib.sessions.middleware.SessionMiddleware',\n       'django.middleware.common.CommonMiddleware',\n       'django.middleware.csrf.CsrfViewMiddleware',\n       'django.contrib.auth.middleware.AuthenticationMiddleware',\n       'django.contrib.messages.middleware.MessageMiddleware',\n       'django.middleware.clickjacking.XFrameOptionsMiddleware',\n   ]\n   ```\n\n2. **設置 `STATIC_ROOT` 和 `STATICFILES_STORAGE`**\n\n   ```python\n   STATIC_URL = '/static/'\n   STATIC_ROOT = BASE_DIR / 'staticfiles'  # 靜態文件的集中目錄\n\n   # 啟用壓縮和緩存\n   STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'\n   ```\n\n### **步驟 3：收集靜態文件**\n\n執行以下命令，將所有靜態文件收集到 `STATIC_ROOT` 指定的目錄：\n\n```bash\npython manage.py collectstatic\n```\n\n### **步驟 4：啟動應用**\n\n使用 Daphne 啟動應用：\n\n```bash\ndaphne -b 127.0.0.1 -p 8000 classify.asgi:application\n```\n\n訪問應用後，確認靜態文件是否正常加載。\n","slug":"Daphne 無法抓取 CSS 解決方法","published":1,"updated":"2024-11-24T13:23:04.965Z","comments":1,"photos":[],"_id":"cm3vmqddt0000iuexc2mz0028","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h3 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a><strong>背景</strong></h3><p>Daphne 是用於運行 Django ASGI 應用的服務器。它主要負責處理 WebSocket 和 HTTP 請求，但 Daphne 本身不直接提供靜態文件服務（如 CSS、JS）。這通常導致在使用 Daphne 部署 Django 應用時，訪問 <code>/static/</code> 路徑返回 404 錯誤。</p>\n<hr>\n<h3 id=\"問題現象\"><a href=\"#問題現象\" class=\"headerlink\" title=\"問題現象\"></a><strong>問題現象</strong></h3><p>當使用 Daphne 啟動應用並訪問 Django 的後台管理介面或靜態頁面時，靜態文件無法正常加載，終端可能顯示以下錯誤：</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">Not</span> <span class=\"title class_\">Found</span>: <span class=\"regexp\">/static/</span>admin/css/login.<span class=\"property\">css</span></span><br><span class=\"line\"><span class=\"title class_\">Not</span> <span class=\"title class_\">Found</span>: <span class=\"regexp\">/static/</span>admin/css/base.<span class=\"property\">css</span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<h3 id=\"問題原因\"><a href=\"#問題原因\" class=\"headerlink\" title=\"問題原因\"></a><strong>問題原因</strong></h3><p>Daphne 不處理靜態文件。Django 預設需要 <code>collectstatic</code> 將所有靜態文件集中到一個目錄，並需要一個服務器（如 WhiteNoise 或 Nginx）來提供靜態文件支持。</p>\n<hr>\n<h3 id=\"解決方法\"><a href=\"#解決方法\" class=\"headerlink\" title=\"解決方法\"></a><strong>解決方法</strong></h3><h3 id=\"方法-1：使用-WhiteNoise-提供靜態文件\"><a href=\"#方法-1：使用-WhiteNoise-提供靜態文件\" class=\"headerlink\" title=\"方法 1：使用 WhiteNoise 提供靜態文件\"></a><strong>方法 1：使用 WhiteNoise 提供靜態文件</strong></h3><p>WhiteNoise 是一個用於提供靜態文件的中介軟體，適合簡單的部署需求。</p>\n<h3 id=\"步驟-1：安裝-WhiteNoise\"><a href=\"#步驟-1：安裝-WhiteNoise\" class=\"headerlink\" title=\"步驟 1：安裝 WhiteNoise\"></a><strong>步驟 1：安裝 WhiteNoise</strong></h3><p>在虛擬環境中安裝 WhiteNoise：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install whitenoise</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"步驟-2：配置-WhiteNoise\"><a href=\"#步驟-2：配置-WhiteNoise\" class=\"headerlink\" title=\"步驟 2：配置 WhiteNoise\"></a><strong>步驟 2：配置 WhiteNoise</strong></h3><p>修改你的 <code>settings.py</code> 文件，添加以下配置：</p>\n<ol>\n<li><p><strong>啟用 WhiteNoise 中介</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MIDDLEWARE = [</span><br><span class=\"line\">    <span class=\"string\">&#x27;django.middleware.security.SecurityMiddleware&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;whitenoise.middleware.WhiteNoiseMiddleware&#x27;</span>,  <span class=\"comment\"># 添加這一行</span></span><br><span class=\"line\">    <span class=\"string\">&#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;django.middleware.common.CommonMiddleware&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;</span>,</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>設置 <code>STATIC_ROOT</code> 和 <code>STATICFILES_STORAGE</code></strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">STATIC_URL = <span class=\"string\">&#x27;/static/&#x27;</span></span><br><span class=\"line\">STATIC_ROOT = BASE_DIR / <span class=\"string\">&#x27;staticfiles&#x27;</span>  <span class=\"comment\"># 靜態文件的集中目錄</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 啟用壓縮和緩存</span></span><br><span class=\"line\">STATICFILES_STORAGE = <span class=\"string\">&#x27;whitenoise.storage.CompressedManifestStaticFilesStorage&#x27;</span></span><br></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"步驟-3：收集靜態文件\"><a href=\"#步驟-3：收集靜態文件\" class=\"headerlink\" title=\"步驟 3：收集靜態文件\"></a><strong>步驟 3：收集靜態文件</strong></h3><p>執行以下命令，將所有靜態文件收集到 <code>STATIC_ROOT</code> 指定的目錄：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python manage.py collectstatic</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"步驟-4：啟動應用\"><a href=\"#步驟-4：啟動應用\" class=\"headerlink\" title=\"步驟 4：啟動應用\"></a><strong>步驟 4：啟動應用</strong></h3><p>使用 Daphne 啟動應用：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">daphne -b 127.0.0.1 -p 8000 classify.asgi:application</span><br></pre></td></tr></table></figure>\n\n<p>訪問應用後，確認靜態文件是否正常加載。</p>\n","cover_type":"img","excerpt":"","more":"<h3 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a><strong>背景</strong></h3><p>Daphne 是用於運行 Django ASGI 應用的服務器。它主要負責處理 WebSocket 和 HTTP 請求，但 Daphne 本身不直接提供靜態文件服務（如 CSS、JS）。這通常導致在使用 Daphne 部署 Django 應用時，訪問 <code>/static/</code> 路徑返回 404 錯誤。</p>\n<hr>\n<h3 id=\"問題現象\"><a href=\"#問題現象\" class=\"headerlink\" title=\"問題現象\"></a><strong>問題現象</strong></h3><p>當使用 Daphne 啟動應用並訪問 Django 的後台管理介面或靜態頁面時，靜態文件無法正常加載，終端可能顯示以下錯誤：</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">Not</span> <span class=\"title class_\">Found</span>: <span class=\"regexp\">/static/</span>admin/css/login.<span class=\"property\">css</span></span><br><span class=\"line\"><span class=\"title class_\">Not</span> <span class=\"title class_\">Found</span>: <span class=\"regexp\">/static/</span>admin/css/base.<span class=\"property\">css</span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<h3 id=\"問題原因\"><a href=\"#問題原因\" class=\"headerlink\" title=\"問題原因\"></a><strong>問題原因</strong></h3><p>Daphne 不處理靜態文件。Django 預設需要 <code>collectstatic</code> 將所有靜態文件集中到一個目錄，並需要一個服務器（如 WhiteNoise 或 Nginx）來提供靜態文件支持。</p>\n<hr>\n<h3 id=\"解決方法\"><a href=\"#解決方法\" class=\"headerlink\" title=\"解決方法\"></a><strong>解決方法</strong></h3><h3 id=\"方法-1：使用-WhiteNoise-提供靜態文件\"><a href=\"#方法-1：使用-WhiteNoise-提供靜態文件\" class=\"headerlink\" title=\"方法 1：使用 WhiteNoise 提供靜態文件\"></a><strong>方法 1：使用 WhiteNoise 提供靜態文件</strong></h3><p>WhiteNoise 是一個用於提供靜態文件的中介軟體，適合簡單的部署需求。</p>\n<h3 id=\"步驟-1：安裝-WhiteNoise\"><a href=\"#步驟-1：安裝-WhiteNoise\" class=\"headerlink\" title=\"步驟 1：安裝 WhiteNoise\"></a><strong>步驟 1：安裝 WhiteNoise</strong></h3><p>在虛擬環境中安裝 WhiteNoise：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install whitenoise</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"步驟-2：配置-WhiteNoise\"><a href=\"#步驟-2：配置-WhiteNoise\" class=\"headerlink\" title=\"步驟 2：配置 WhiteNoise\"></a><strong>步驟 2：配置 WhiteNoise</strong></h3><p>修改你的 <code>settings.py</code> 文件，添加以下配置：</p>\n<ol>\n<li><p><strong>啟用 WhiteNoise 中介</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MIDDLEWARE = [</span><br><span class=\"line\">    <span class=\"string\">&#x27;django.middleware.security.SecurityMiddleware&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;whitenoise.middleware.WhiteNoiseMiddleware&#x27;</span>,  <span class=\"comment\"># 添加這一行</span></span><br><span class=\"line\">    <span class=\"string\">&#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;django.middleware.common.CommonMiddleware&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;</span>,</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>設置 <code>STATIC_ROOT</code> 和 <code>STATICFILES_STORAGE</code></strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">STATIC_URL = <span class=\"string\">&#x27;/static/&#x27;</span></span><br><span class=\"line\">STATIC_ROOT = BASE_DIR / <span class=\"string\">&#x27;staticfiles&#x27;</span>  <span class=\"comment\"># 靜態文件的集中目錄</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 啟用壓縮和緩存</span></span><br><span class=\"line\">STATICFILES_STORAGE = <span class=\"string\">&#x27;whitenoise.storage.CompressedManifestStaticFilesStorage&#x27;</span></span><br></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"步驟-3：收集靜態文件\"><a href=\"#步驟-3：收集靜態文件\" class=\"headerlink\" title=\"步驟 3：收集靜態文件\"></a><strong>步驟 3：收集靜態文件</strong></h3><p>執行以下命令，將所有靜態文件收集到 <code>STATIC_ROOT</code> 指定的目錄：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python manage.py collectstatic</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"步驟-4：啟動應用\"><a href=\"#步驟-4：啟動應用\" class=\"headerlink\" title=\"步驟 4：啟動應用\"></a><strong>步驟 4：啟動應用</strong></h3><p>使用 Daphne 啟動應用：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">daphne -b 127.0.0.1 -p 8000 classify.asgi:application</span><br></pre></td></tr></table></figure>\n\n<p>訪問應用後，確認靜態文件是否正常加載。</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cm1eerjee0001g6exhzk86wqw","category_id":"cm1eerjeg0004g6exfe4vbk75","_id":"cm1eerjeh000eg6ex1qa604xa"},{"post_id":"cm1eerjef0003g6ex9vhpba90","category_id":"cm1eerjeh0009g6exflglb4pq","_id":"cm1eerjei000hg6ex54ysa2zi"},{"post_id":"cm1eerjef0003g6ex9vhpba90","category_id":"cm1eerjeh000gg6ex5x233p48","_id":"cm1eerjei000ig6ex85zdhp94"},{"post_id":"cm1eerjei000jg6exft5cfrc5","category_id":"cm1eerjeh0009g6exflglb4pq","_id":"cm1eerjej000og6ex4mfq1eig"},{"post_id":"cm1eerjei000jg6exft5cfrc5","category_id":"cm1eerjeh000gg6ex5x233p48","_id":"cm1eerjej000pg6ex396w48wk"},{"post_id":"cm1eerjei000kg6ex7znmfqd2","category_id":"cm1eerjej000mg6exeajk7zn6","_id":"cm1eerjej000sg6exf3jo254e"},{"post_id":"cm1eerjei000kg6ex7znmfqd2","category_id":"cm1eerjej000rg6ex7efy44zi","_id":"cm1eerjej000tg6ex6gq7h8ou"},{"post_id":"cm1i34pd40000ulexfvst9l8j","category_id":"cm1i3j5ba0001ulex1dw6386h","_id":"cm1i3j5bc0005ulex6av90s5n"},{"post_id":"cm1i34pd40000ulexfvst9l8j","category_id":"cm1i3j5bc0004ulexe4y53pm4","_id":"cm1i3j5bc0006ulex0uzxax9n"},{"post_id":"cm1j5j2jg0000ebexg1n1euc3","category_id":"cm1eerjeg0004g6exfe4vbk75","_id":"cm1j5r3k70006ebex8co3ah6m"},{"post_id":"cm1j5j2jg0000ebexg1n1euc3","category_id":"cm1j5j2jk0002ebexgu0we2zo","_id":"cm1j5r3k70007ebexffs6flao"},{"post_id":"cm1eerjee0001g6exhzk86wqw","category_id":"cm1jan45p0000txex2f4ubr8j","_id":"cm1jan45r0001txexbzba3zic"},{"post_id":"cm1p5svuj0000ezex2rqw7nwt","category_id":"cm1p76acq000085exg67bg5jh","_id":"cm1p76acr000485exg04y5m69"},{"post_id":"cm1p5svuj0000ezex2rqw7nwt","category_id":"cm1p76acr000385ex3i2od10g","_id":"cm1p76acr000585ex5ppa51d0"},{"post_id":"cm1q0kt5h0000czexhg393avq","category_id":"cm1q0kt5l0001czex3xvphevf","_id":"cm1q0kt5n0005czex3ja2dt8y"},{"post_id":"cm1q0kt5h0000czexhg393avq","category_id":"cm1q0kt5m0004czex0cz0brlz","_id":"cm1q0kt5n0006czex93cw12jl"},{"post_id":"cm1rp7wck0000ceex2u8t3asb","category_id":"cm1eerjeg0004g6exfe4vbk75","_id":"cm1rp7wco0003ceexgrp40t8x"},{"post_id":"cm1rp7wck0000ceex2u8t3asb","category_id":"cm1rp7wcn0002ceexg6rl72ii","_id":"cm1rp7wco0004ceex87txc8zw"},{"post_id":"cm2mnxpvo0000a8ex2fbdgpd5","category_id":"cm2mnxpvs0001a8ex996509pl","_id":"cm2mnxpvt0004a8exfzdg60s3"},{"post_id":"cm3pyqfu40001jmex10wecl8h","category_id":"cm1q0kt5l0001czex3xvphevf","_id":"cm3pyqfu70005jmex8e6j18fs"},{"post_id":"cm3pyqfu40001jmex10wecl8h","category_id":"cm2zmqfs10002laexf241f64u","_id":"cm3pyqfu70008jmexef1f1u7f"},{"post_id":"cm3pyqfu20000jmex072mb79y","category_id":"cm3pyqfu50002jmex2b8fe8iz","_id":"cm3pyqfu70009jmexbaiwg2ef"},{"post_id":"cm3pyqfu20000jmex072mb79y","category_id":"cm3pyqfu70007jmex4akv4itw","_id":"cm3pyqfu7000ajmexaqavgvjb"},{"post_id":"cm3vmqddt0000iuexc2mz0028","category_id":"cm1q0kt5l0001czex3xvphevf","_id":"cm3vmqde10003iuex9xf4664u"},{"post_id":"cm3vmqddt0000iuexc2mz0028","category_id":"cm1q0kt5m0004czex0cz0brlz","_id":"cm3vmqde10004iuex8cozcrqv"},{"post_id":"cm3vmqddt0000iuexc2mz0028","category_id":"cm3vmqde00002iuexbhr08siw","_id":"cm3vmqde20005iuex7ydlf1ta"}],"PostTag":[{"post_id":"cm1eerjee0001g6exhzk86wqw","tag_id":"cm1eerjeg0005g6exhkak12oa","_id":"cm1eerjeh000bg6ex4pxe8lr2"},{"post_id":"cm1eerjef0003g6ex9vhpba90","tag_id":"cm1eerjeh000ag6ex1er99l33","_id":"cm1eerjeh000fg6exa7ukccll"},{"post_id":"cm1eerjei000jg6exft5cfrc5","tag_id":"cm1eerjeh000ag6ex1er99l33","_id":"cm1eerjej000lg6ex5w3c9hj2"},{"post_id":"cm1eerjei000kg6ex7znmfqd2","tag_id":"cm1eerjej000ng6ex6fef25de","_id":"cm1eerjej000qg6exc1a91y9c"},{"post_id":"cm1i34pd40000ulexfvst9l8j","tag_id":"cm1i3j5bb0002ulexe9fufh3z","_id":"cm1i3j5bb0003ulex9pyx9sgb"},{"post_id":"cm1j5j2jg0000ebexg1n1euc3","tag_id":"cm1eerjeg0005g6exhkak12oa","_id":"cm1j5r3k60005ebexc96n7fas"},{"post_id":"cm1p5svuj0000ezex2rqw7nwt","tag_id":"cm1p76acr000185ex8xo90fwz","_id":"cm1p76acr000285ex4fxq02ay"},{"post_id":"cm1q0kt5h0000czexhg393avq","tag_id":"cm1q0kt5m0002czex3oqm9bmp","_id":"cm1q0kt5m0003czex75sg6dfw"},{"post_id":"cm1rp7wck0000ceex2u8t3asb","tag_id":"cm1eerjeg0005g6exhkak12oa","_id":"cm1rp7wcn0001ceex5w6v9ibq"},{"post_id":"cm2mnxpvo0000a8ex2fbdgpd5","tag_id":"cm1q0kt5m0002czex3oqm9bmp","_id":"cm2mob7g900005kex4ujr805f"},{"post_id":"cm3pyqfu40001jmex10wecl8h","tag_id":"cm2zmqfs00001laex7lojbhrf","_id":"cm3pyqfu70004jmex4wydhw1r"},{"post_id":"cm3pyqfu20000jmex072mb79y","tag_id":"cm3pyqfu60003jmex26t282m1","_id":"cm3pyqfu70006jmexdo0f0jez"},{"post_id":"cm3vmqddt0000iuexc2mz0028","tag_id":"cm1q0kt5m0002czex3oqm9bmp","_id":"cm3vmqde00001iuexbbjlgupl"}],"Tag":[{"name":"Line Bot","_id":"cm1eerjeg0005g6exhkak12oa"},{"name":"CPE","_id":"cm1eerjeh000ag6ex1er99l33"},{"name":"Bitbucket","_id":"cm1eerjej000ng6ex6fef25de"},{"name":"Wordpress","_id":"cm1i3j5bb0002ulexe9fufh3z"},{"name":"開發環境","_id":"cm1p76acr000185ex8xo90fwz"},{"name":"Python Django","_id":"cm1q0kt5m0002czex3oqm9bmp"},{"name":"Django","_id":"cm2mnxpvt0002a8exgu901tsy"},{"name":"Python Email","_id":"cm2zmqfs00001laex7lojbhrf"},{"name":"C++","_id":"cm3pyqfu60003jmex26t282m1"}]}}